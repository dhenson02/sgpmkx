(function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = typeof require == "function" && require;
                if (!u && a) return a(o, !0);
                if (i) return i(o, !0);
                var f = new Error("Cannot find module '" + o + "'");
                throw f.code = "MODULE_NOT_FOUND", f;
            }
            var l = n[o] = {
                exports: {}
            };
            t[o][0].call(l.exports, function(e) {
                var n = t[o][1][e];
                return s(n ? n : e);
            }, l, l.exports, e, t, n, r);
        }
        return n[o].exports;
    }
    var i = typeof require == "function" && require;
    for (var o = 0; o < r.length; o++) s(r[o]);
    return s;
})({
    1: [ function(require, module, exports) {
        var events = require("./store").events, pages = require("./store").pages, map = require("lodash/collection/map"), reduce = require("lodash/collection/reduce"), data = {
            d: {
                results: [ {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)",
                        etag: '"21"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(1)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 1,
                    Title: "Travel Medicine",
                    Icon: "map-2",
                    Section: "FH",
                    Program: "TravelMedicine",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "travel",
                            TermGuid: "28715891-b72d-433d-a899-ed5e7eb300fa",
                            WssId: 1267
                        }, {
                            Label: "medicine",
                            TermGuid: "e19b1f54-9324-4a49-8dcc-1d8206fcca7e",
                            WssId: 1268
                        }, {
                            Label: "overseas",
                            TermGuid: "a7463e4a-ade8-43a9-9792-1fec44ec560f",
                            WssId: 1269
                        }, {
                            Label: "foreign",
                            TermGuid: "0e0e029f-b8de-4944-8540-1b5471669b7a",
                            WssId: 1270
                        } ]
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: 'Travel medicine focuses on prevention and management of health problems of international travelers. Globalization facilitates the spread of disease and increases the number of travelers who will be exposed to a different health environment. Major content areas of travel medicine include the global epidemiology of health risks to the traveler, vaccinology, malaria prevention, and pre-travel counseling designed to maintain the health of our beneficiary population. \n\n\n- From the **2013 Accreditation Handbook - AAAHC**, chapter 15, sub-chapter II — "Travel Medicine"\n  > This subchapter applies only to organizations that provide travel medicine services.\n  >\n  > Organizations providing travel medicine services will ensure that these services are appropriate to the needs of the patient and are adequately supported by the organization’s clinical capabilities.\n  >\n  > 1. Travel medicine services are provided by personnel who have appropriate training, skills, and resource materials to provide quality services.\n  > 2. Travel medicine programs include:\n  >    - Appropriate medical oversight.\n  >    - Clearly defined standing orders and protocols, including management of adverse reactions to immunizations.\n  >    - Access to current Centers for Disease Control (CDC) and U.S. Department of State travel recommendations.\n  >    - Appropriate storage and management of vaccines.\n  > 3. Travel medicine services include:\n  >    - Comprehensive travel destination-specific risk assessment.\n  >    - Appropriate preventive medicine interventions.\n  >    - Education in risk and risk reduction.\n  > 4. Entries in a patient’s clinical record include:\n  >    - Travel destination and current health status.\n  >    - Immunization and vaccine name(s), dosage form, dosage administered, lot number, and quantity.\n  >    - Prescription medications given, quantity and date, dosage, and directions for use.\n  >    - Preventive health education.',
                    Policy: null,
                    Training: null,
                    Resources: "### Federal and DoD:\n- [World Fact Book (CIA)](https://www.cia.gov/library/publications/the-world-factbook/index.html)\n- [NCMI – National Center for Medical Intelligence (DIA)](https://www.intelink.gov/ncmi/index.php)\n- [U.S. Department of State – Travel Information](http://travel.state.gov/)\n- [DoD Foreign Clearance Guide](https://www.fcg.pentagon.mil/)\n\n### CDC:\n- [CDC Yellow Book and Blue Sheet](http://www.cdc.gov/travel/reference.htm) (Health Information for International Travel)\n- [CDC Traveler’s Health Section](http://www.cdc.gov/travel/) (General Info for the Public)\n\n### WHO:\n- [WHO International Travel and Health Publications](http://www.who.int/ith/)\n- [WHO Health Topics](http://www.who.int/topics/en/)\n\n### Commercial:\n- [Travel Health Online](http://www.tripprep.com/) (Good, concise, well organized source)\n- [Travel Medicine](http://www.travmed.com/) (commercial site)\n- [Military.com Travel Center](http://www.military.com/Travel/Content1/0%2c%2cNew-Travel-Restrictions%2c00.html)\n- [TRAVAX®](https://kx.afms.mil/kj/kx8/VirtualLibrary/Pages/home.aspx) (No Login Link) Select Travax Encompass from the Virtual Library",
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 1,
                    Modified: "2015-09-19T06:35:25Z",
                    Created: "2015-07-16T23:41:26Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "4.0",
                    Attachments: false,
                    GUID: "439fea1c-fa16-4b2b-afe0-8a353b7073c9"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)",
                        etag: '"40"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(2)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 2,
                    Title: "Preventive Health Assessment",
                    Icon: "note2",
                    Section: "FH",
                    Program: "PHA",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "pha",
                            TermGuid: "85fcddcb-003c-49c1-9034-db284fd6fcc5",
                            WssId: 1271
                        }, {
                            Label: "imr",
                            TermGuid: "bf9f5928-b319-4294-99b1-8a6d16c6ab19",
                            WssId: 1272
                        }, {
                            Label: "readiness",
                            TermGuid: "a91e06cf-2b70-43c1-9dbe-be67991c67b7",
                            WssId: 1273
                        } ]
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi44-170",
                            TermGuid: "4631277f-fb55-4698-a1d4-b828f22f7a1c",
                            WssId: 1274
                        }, {
                            Label: "afi48-123",
                            TermGuid: "eba561a9-3e52-4b17-b938-b9c04cc922fd",
                            WssId: 1275
                        }, {
                            Label: "afi41-210",
                            TermGuid: "d1e84369-ee2d-4deb-bf9e-c75f3dc88b78",
                            WssId: 1276
                        }, {
                            Label: "afi10-203",
                            TermGuid: "013504cd-0a3a-4dd5-9eb0-5446f46b0dbb",
                            WssId: 1277
                        }, {
                            Label: "afi10-250",
                            TermGuid: "6014a1b1-a536-4c68-a0e9-1de6e4818122",
                            WssId: 1278
                        } ]
                    },
                    Overview: "> This page is continuously revised and updated.  If you have documents, spreadsheets, examples, etc., which you believe should be included here, please send them to MSgt Timothy Kronk, AFMOA/SGPM (timothy.kronk@us.af.mil).  We welcome your feedback.  Together, we can make this a more useful product for the AFMS. Thanks.\n\n---\n\n*Last updated: 29 May 2015*",
                    Policy: "[AFI 44-170](http://static.e-publishing.af.mil/production/1/af_sg/publication/afi44-170/afi44-170.pdf), *Preventive Health Assessments*\n\n[AFI 41-210](http://static.e-publishing.af.mil/production/1/af_sg/publication/afi41-210/afi41-210.pdf), *Tricare Operations and Patient Administration Functions*\n\n[AFI 48-123](http://static.e-publishing.af.mil/production/1/af_sg/publication/afi48-123/afi48-123.pdf), *Medical Examinations and Standards*\n\n[AFI 10-250](http://static.e-publishing.af.mil/production/1/af_sg/publication/afi10-250/afi10-250.pdf), *Individual Medical Readiness*\n\n[AFI 10-203](http://static.e-publishing.af.mil/production/1/af_sg/publication/afi10-203/afi10-203.pdf), *Duty Limiting Conditions*",
                    Training: null,
                    Resources: "### Sister Service PHA Websites\n\n[U.S. Army](https://medpros.mods.army.mil/pha/login.aspx)\n\n[U.S. Navy / Marine Corps](http://www.med.navy.mil/sites/nmcphc/health-promotion/Pages/periodic-health-assessment.aspx)\n\n[U.S. Coast Guard](http://www.uscg.mil/hq/cg1/cg112/cg1121/PHA_med.asp)",
                    Tools: '### Before\n\n[CPS Recommendations](http://epss.ahrq.gov/ePSS/search.jsp)\n\n- [The Guide to Clinical Preventive Services, 2014](https://kx.afms.mil/kj/kx1/PHA/Documents/The%20Guide%20to%20Clinical%20Preventive%20Services%202014.pdf)\n  - Includes U.S. Preventive Services Task Force (USPSTF) recommendations on screening, counselling, and preventive medication topics and includes clinical considerations for each topic. This new pocket guide provides general practitioners, internists, family practitioners, paediatricians, nurses, and nurse practitioners with an authoritative source for making decisions about preventive services.\n\n- [Tools for implementing USPSTF recommendations](http://epss.ahrq.gov/ePSS/Tools.do)\n  - AFMOA-approved patient education and supplemental information can be found on the AHRQ website.\n\n[Air Force Web-Based Health Assessment (AF Web HA)](https://afwebha.afms.mil/) - starting point for gathering reports and identifying critical, priority, and routine health risk assessment findings.\n\n- [Setting Up the AF Web HA](https://kx.afms.mil/kj/kx1/PHA/Setting%20Up%20the%20AF%20WEB%20HA%20-%20v2014.02.25.pdf) *25 Feb 2014*\n  - Guidance and help with setting up the AF Web HA, including how to grant access to the AF Web HA.\n\n- [ASIMS AF Web HA Medical Users: User Guide](https://kx.afms.mil/kj/kx1/PHA/ASIMS_WebHA_Medical_Users_Guide.pdf) *6 Oct 2014*\n  - Tool to facilitate clinical, personal and population-based health decisions.\n\n- [SF507](https://kx.afms.mil/kj/kx1/PHA/Documents/SF507.pdf), *Health History Questions/Interval History*\n  - To be used if the AF Web HA is unavailable.\n\n- [How-To - AHLTA "High Priority T-CON"](https://kx.afms.mil/kj/kx1/PHA/AHLTA%20T-CON%20Procedure%20for%20Critical%20or%20Priority%20PHA%20-%20HOW%20TO.xfdl) *(courtesy of JBER PH)*\n  - Lotus Forms document outlining the procedures for members indicating a Critical or Priority finding on their AF Web HA.\n\n\n### During\n\n[PHA-FOME User Guide - v1.2](https://kx.afms.mil/kj/kx1/PHA/Documents/2015%20PHA-FOME%20User%20Guide%20-%20v1%2020_Published.pdf) *14 Jan 2015*\n- Standardized guide for executing non-fly/non-SOD Preventive Health Assessments and the PHA portion of the fly/SOD during the Flight & Operational Medicine Exam (FOME), IAW AFI 44-170.\n\n[The Alcohol Use Disorders Identification Test (AUDIT)](https://kx.afms.mil/kxweb/dotmil/file/web/ctb_220595.pdf)\n- Written primarily for health care practitioners who encounter persons with alcohol-related problems. It is designed to be used in conjunction with a companion document that provides complementary information about early intervention procedures entitled, *["Brief Intervention for Hazardous and Harmful Drinking: A Manual for Use in Primary Care"](http://whqlibdoc.who.int/hq/2001/WHO_MSD_MSB_01.6b.pdf)*. Together these manuals describe a comprehensive approach to screening and brief intervention for alcohol-related problems in primary health care.\n\n[Patient Health Questionnaire (PHQ-9)](http://phqscreeners.com/pdfs/02_PHQ-9/English.pdf)\n- Powerful tool for assisting primary care clinicians in diagnosing depression as well as selecting and monitoring treatment. In addition to the depression questions on the AF Web HA, and the member\'s responses to those questions, the PHQ-9 is the AFMOA approved questionnaire if further assessment is indicated.  PCM Team should discuss with the patient the reasons for completing the questionnaire and how to fill it out. After the patient has completed the PHQ-9 questionnaire, it is scored by the PCM Team.\n\n[Framingham CHD Risk Calculator (CRAM Score)](http://cvdrisk.nhlbi.nih.gov/calculator.asp)\n\n - [Coronary Heart Disease Risk Assessment and Management Mini Clinical Practice Guidelines and Tool Kit](https://kx.afms.mil/kj/kx8/CRAM/Pages/home.aspx)\n   - Collection of several reference documents, educational handouts, and documentation tools intended to assist providers in managing the cardiac risks of their patient population.\n\n### After\n\n[PHA Cell Technician-Level Peer Review v1.01](https://kx.afms.mil/kj/kx1/PHA/PHA%20Cell%20Technician-Level%20Peer%20Review%20v1.01.xlsx) *29 Apr 2014*\n- Standardized check-list for the PHA Cell technician-level peer review.\n\n[PHA Provider Peer Review](https://kx.afms.mil/kj/kx1/PHA/PHA%20Provider%20Peer%20Review%20v1.00.xlsx)\n- Standardized check-list for PCM team providers to conduct clinical peer review on other providers.\n\n### Mental Health Guidance\n\n[AF Web HA - Key Mental Health Screening Tools](https://kx.afms.mil/kj/kx1/PHA/Mental%20Health%20Assessments%20%28AF%20WebHA%29%20-%2022%20Jan%2015v2.pptx) *22 Jan 2015*\n- Succinct PowerPoint slideshow to familiarize non-Mental Health providers with the key mental health screening tools contained within the AF Web HA.\n\n[Prevention Counselling Desktop Assistant](https://kx.afms.mil/kj/kx1/PHA/Prevention%20Counseling%20Desktop%20Assistant.pdf)\n\n[Factors that Affect Behaviour Change](https://kx.afms.mil/kj/kx1/PHA/Factors%20that%20affect%20Behavior%20Change.pdf)\n\n[Stages of Change](https://kx.afms.mil/kj/kx1/PHA/Stages%20of%20Change.pdf)\n\n### Unit IMR Guidance\n\n[Commander Designee Letter for HIPAA Protected Health Information and ASIMS Access](https://kx.afms.mil/kj/kx1/PHA/CC%20Designee%20ltr%20with%20ASIMS%20attachment%20-%205%20Mar%2015.docx) *5 Mar 2015*\n- This template is intended to provide a standardized method for commanders to designate POC(s) to receive PHI on their behalf.  The completed letter will specify which type of access each designee should be granted.  Additional PH and HPO guidance is provided [here](https://kx.afms.mil/kj/kx1/PHA/Commander%20Designee%20Letter%20Template%20Guidance%2021%20May%2014.docx).\n- If you currently have appointment letters on file, units do not need to re-accomplish with the new template unless the previous letter is no longer valid because it is older than one year or is not signed by the current commander.\n- Approved by AFMOA/SGAT for use on 21 May 2014, and revised on 5 Mar 2015.\n\n[ASIMS Unit POC Module - Access to IMR Reports](https://kx.afms.mil/kj/kx1/PHA/SiteAssets/Pages/toolbox/ASIMS%20Unit%20POC%20Module%20-%20Access%20to%20IMR%20Reports%20-%20v2014.02.18.pdf) *18 Feb 2014*\n- Guide for setting up the ASIMS Unit POC List and helping those users navigate ASIMS to identify members with due/overdue IMR, PHA, and DRHA requirements.\n\n[Unit Commander\'s Guide To ASIMS](https://kx.afms.mil/kj/kx7/PublicHealth/Documents/Unit%20Commander%20Guide%20To%20ASIMS_2014%2010%2001.pub)\n- Customizable pamphlet intended to educate Unit/CCs on IMR, DRHAs, DLCs, Profiles, and Refer to DAWG within ASIMS.\n\n[UHM Quick Guide](https://kx.afms.mil/kj/kx1/PHA/UHM%20Quick%20Guide%20v1.0.pptx) *(courtesy of JBER PH)*\n- Slideshow which can be customized for your base and sent to UHMs.  Details how to access the Personnel List in the ASIMS Unit POC module, identify action list items and notify their personnel.\n\n\n### Miscellaneous\n\n\n[Body Mass Index (BMI) Calculator](http://www.nhlbi.nih.gov/guidelines/obesity/BMI/bmicalc.htm)\n\n[G6PD Over Print](https://kx.afms.mil/kj/kx1/PHA/G6PD%20Over%20Print%202012.doc)\n- Standardized means of documenting in a member\'s Outpatient Record his or her education regarding G6PD deficiency.\n\n[G6PD Service Member Handout](https://kx.afms.mil/kj/kx1/PHA/G6PG_Service_Member_Handout.pdf)\n- Patient education handout for members with positive G6PD deficiency.',
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 2,
                    Modified: "2015-09-19T06:58:36Z",
                    Created: "2015-07-17T00:36:39Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "f7a4d307-8bdc-46b0-a91d-1d1a4360910c"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)",
                        etag: '"14"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(3)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 3,
                    Title: "Disease Surveillance & Epidemiology",
                    Icon: "science",
                    Section: "Comm",
                    Program: "Epi",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi10-2603",
                            TermGuid: "e2db2890-e97d-4bfc-a9a5-00105f2c9f95",
                            WssId: 1279
                        }, {
                            Label: "afi44-102",
                            TermGuid: "a8582741-1ca2-4538-9076-ee63d39c3104",
                            WssId: 1280
                        }, {
                            Label: "afi48-101",
                            TermGuid: "299379e8-0d0f-45fe-b752-45bb933d4156",
                            WssId: 1281
                        }, {
                            Label: "afi48-105",
                            TermGuid: "56752e56-6b10-4633-befc-b0522d68994f",
                            WssId: 1282
                        } ]
                    },
                    Overview: 'Air Force Disease Surveillance and Epidemiology programs are community health programs.  Public Health activities monitor disease and injury incidence to identify departure from background, or not "normal," rates.  When outbreaks of disease or clusters of injury are identified, public health functions to investigate these occurrences, identify risk factors, and implement effective interventions.  Surveillance and epidemiology also function to inform, evaluate and validate outcomes of public health policy.',
                    Policy: "AFI 10-2519, *Emergency Health Powers on Air Force Installations*\n\nAFI 44-102, *Medical Care Management*\n\nAFI 48-101, *Aerospace Medicine Enterprise*\n\nAFI 48-105, *Surveillance, Prevention, and Control of Diseases and Conditions of Public Health or Military Significance*\n\n[AFMOA/CC Memorandum](/kj/kx7/PublicHealth/Documents/EX%20176%20Ref%20-%20AFMOA%20CC%20Memo%20Enhanced%20Surveif%20Disease%20Assoc%20with%20Bio%20and%20Chem%20Agents%20-1%20Nov%202001.pdf), *Enhanced Surveillance of Disease Patterns Associated with Biological and Chemical Agents, 1 Nov 2001*\n\n",
                    Training: null,
                    Resources: "[Armed Forces Reportable Medical Events Guidelines and Case Definitions (2012)](https://gumbo2.wpafb.af.mil/epi-consult/reportableevents/documents/Tri-Service%20Reportable%20Events%2c%20Guidelines%20and%20Case%20Definitions%20%282012%29.pdf)\n\n[How to Report Novel Diseases (MERS-CoV) into AFRESS](https://gumbo2.wpafb.af.mil/epi-consult/documents/Novel%20disease%20reporting%20in%20AFRESS.pdf)",
                    Tools: "[Cyclospora Outbreak Reporting in AFRESS](/kj/kx7/PublicHealth/Documents/Cyclospora%20outbreak%20reporting%20in%20AFRESS.PDF)\n",
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 3,
                    Modified: "2015-09-19T06:58:11Z",
                    Created: "2015-07-29T16:00:22Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "4f7e339a-a0d4-48b8-b709-24734695d690"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)",
                        etag: '"12"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(4)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 4,
                    Title: "Occupational Health",
                    Icon: "portfolio",
                    Section: "FH",
                    Program: "OccHealth",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "occupational health",
                            TermGuid: "82b886b3-dcbf-439f-8fd8-f41abe4eded3",
                            WssId: 1284
                        }, {
                            Label: "oeh",
                            TermGuid: "bcd51ccd-5602-4982-9ee9-40f662bfb2a8",
                            WssId: 1285
                        }, {
                            Label: "occ health",
                            TermGuid: "cdfc000c-ec05-47cb-a3d9-a2a2b1032407",
                            WssId: 1286
                        } ]
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi48-101",
                            TermGuid: "299379e8-0d0f-45fe-b752-45bb933d4156",
                            WssId: 1281
                        }, {
                            Label: "afi48-145",
                            TermGuid: "5759f9e0-a7d6-4457-a66f-85dbcd690021",
                            WssId: 1291
                        } ]
                    },
                    Overview: 'IAW AFI 48-145, Occupational and Environmental Health Program, the purpose of the AF OEH Program is to protect health while enhancing combat and operational capabilities. The program is designed to mitigate OEH-related health risks through the optimum application of Aerospace Medicine capabilities. It seeks to identify, assess and eliminate or control health hazards associated with day-to-day operations across the full life-cycle of acquisition, sustainment and support for weapons systems, munitions and other materiel systems.\n\nThe *"Quality and Administration"* of OEH Medical Examinations and follow-up, is a Public Health function. Key duties include:\n\n- Serves as member of the OEHWG, providing consultation on recommended OEH MSEs, OEH training requirements, risk communication, and OEH surveillance\n\n- Manages the Occupational and Environmental Health Illness Program\n\n- Manages the Installation Fetal Protection Program\n\n- In conjunction with BE, acts as a consultant to workplace supervisors for OEH training. In coordination with BE, reviews and makes available training materials to workplace supervisors. PH will proactively offer training assistance (materials, consultation) to non-MTF workplaces with blood-borne pathogen hazards\n\n- Provides administrative oversight of MSE program as directed by the IOEMC\n\n- Acts as MTF or ARC medical unit liaison to local/community health department \n\n- When supporting an LSMTF or MAS with no PH officer assigned, oversees the OEH epidemiology and FHM aspects of the OEH Program at the GSUs or MUNSS sites. The level of involvement may range from simple oversight to performing the functions based on the technical expertise of the LSMTF or MAS personnel',
                    Policy: "[AFI 10-203](), *Duty Limiting Conditions*\n\n[AFI 44-102](), *Medical Care Management*\n\n[AFI 48-101](), *Aerospace Medicine Enterprise*\n\n[AFI 48-123](), *Medical Examinations and Standards*\n\n[AFI 48-145](), *Occupational Health Program*\n\n[AFI 90-821](), *Hazard Communication*\n\n[AFI 91-202](), *The US Air Force Mishap Prevention Program*\n\n[AFI 91-204](), *Safety Investigations and Reports*\n\n[AFMAN 48-125](), *Personnel Ionizing Radiation Dosimetry*\n\nAFOSHSTD 48-9, *Electro-Magnetic Frequency (EMF) Radiation Occupational Health Program*\n\nAFOSHSTD 48-20, *Occupational Noise and Hearing Conservation Program*\n\nAFOSHSTD 48-137, *Respiratory Protection Program*\n\nAFPD 48-1, *Aerospace Medicine Enterprise*\n\nDoDI 6055.05, *Occupational and Environmental Health, 11 Nov 2008*\n\nDoD 6055.05-M, *Occupational Medical Examinations and Surveillance Manual, IC1, 16 Sep 2008*\n\nDoDI 6055.5, *Industrial Hygiene and Occupational Health, IC1, 6 May 1996*\n\n29 CFR 1910.95 Section 8, *Occupational Noise Exposure, Follow-up Procedures, 1 Jul 2005*",
                    Training: null,
                    Resources: "- [National Fire Protection Association (NFPA) 1582](), Standard on Comprehensive Occupational Medical Program for Fire Departments, 2013 Edition \n\n- [NFPA 1582 2013 Edition]() - Technical Implementation Guide - July 2014\n\n- [Globally Harmonized System of Classification and Labeling of Chemicals]() *USFSAM / PHR*\n\n- [HAZCOM]() *HPWS - ESOH Service Center*\n\n- [ASIMS Occupational Health Supervisor Module Guide, 2013]()\n\n- [AF/SG3P Memo]() - Implementation Guidance for AF Medical Management of Workers Exposed to Beryllium, 18 Nov 2010",
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 4,
                    Modified: "2015-09-19T15:40:53Z",
                    Created: "2015-08-03T19:16:30Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "5.0",
                    Attachments: false,
                    GUID: "36a3964c-cab1-4482-b612-82eef8cb8f05"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)",
                        etag: '"9"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(5)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 5,
                    Title: "Influenza Surveillance",
                    Icon: null,
                    Section: "Comm",
                    Program: "Epi",
                    Page: "Flu",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Check out the latest [Influenza Surveillance Data](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/index.cfm).",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 5,
                    Modified: "2015-09-17T04:20:16Z",
                    Created: "2015-08-12T00:35:29Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "5.0",
                    Attachments: false,
                    GUID: "73a4eb44-74e4-469b-baa3-d8469cebcbdd"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)",
                        etag: '"10"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(6)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 6,
                    Title: "VAERS",
                    Icon: null,
                    Section: "Comm",
                    Program: "Epi",
                    Page: "VAERS",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "### Why?\n\nThe statute 42 USC 300aa-1 to 300aa-34 (*The National Childhood Vaccine Injury Act of 1986*), requires that the following events be reported to VAERS, a public health activity administered by the FDA and CDC:\n\n- Any event listed in the NVIC program’s vaccine injury table (at http://www.hrsa.gov/vaccinecompensation/table.htm) occurring within the time period specified.\n- Any contraindicating event listed in a vaccine’s package insert (product labeling).",
                    Policy: "- Definitions \n- AVIP Current Policies\n- Smallpox Vaccination Program Policies \n- Smallpox Vaccination Program 2008 Q & A - (MILVAX) \n- **Rotavirus Vaccine Information**\n  - AAP's Guidelines for Rotavirus Vaccine Use, 02 Nov 2006\n  - ACIP Recommendations, 11 Aug 2006 \n- **Meningococcal Vaccine Information**\n  - Pink Book Chapter on Meningococcal \n  - ACIP Recommendations, 27 May 2005\n  - Revised ACIP Recommendations, 10 Aug 2007 \n- AFJI 48-110, Immunizations and Chemoprophylaxis",
                    Training: null,
                    Resources: "[USAF Allergy and Immunizations](https://kx.afms.mil/ai)\n\n[CDC Vaccines Home Page](http://www.cdc.gov/vaccines/vpd-vac/default.htm)",
                    Tools: "### Reporting VAERS Events\n\nSubmit VAERS E-Report to the FDA/CDC through the [FDA website](https://vaers.hhs.gov/esub/index) at https://vaers.hhs.gov/esub/index",
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 6,
                    Modified: "2015-09-12T04:30:32Z",
                    Created: "2015-08-12T02:27:29Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "f37df72a-6e5d-4fa0-919e-1eb62f08e638"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)",
                        etag: '"4"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(7)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 7,
                    Title: "AFDRSi",
                    Icon: null,
                    Section: "Comm",
                    Program: "Epi",
                    Page: "AFDRSi",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "As of 2 January 2014 the Air Force Reportable Event Surveillance System (AFRESS) \nwas replaced by the Air Force Disease Reporting System internet (AFDRSi). The website to report Reportable Medical Events (referred to as Medical Event Reports in AFDRSi) can be found here: https://data.nmcphc.med.navy.mil/afdrsi/Login.aspx\n\nGeneral Information\n[Armed Forces Reportable Medical Events Guidelines and Case Definitions (2012)](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/reportableevents/documents/Tri-Service%20Reportable%20Events,%20Guidelines%20and%20Case%20Definitions%20(2012).pdf)",
                    Policy: null,
                    Training: null,
                    Resources: "- [CDC STD Treatment Guidelines](http://www.cdc.gov/STD/treatment/)\n- [Contaminated Water Disease Information](http://www.cdc.gov/healthywater)\n- [Malaria Guidance](http://www-nehc.med.navy.mil/diseases_conditions/malaria.aspx) (includes Navy Malaria Pocket Guide)\n- [Armed Forces Health Surveillance Center (AFHSC)](http://afhsc.army.mil/home)",
                    Tools: "- AFDRSi SAAR Form (DD2875) - Blank \n  - Note: for sections 17-20b requiring 'Supervisor's' information/signature, this must be a Flight Commander or above \n  - DMIS ID Table - Reference for section 13 of SAAR Form DD2875 \n    - Note: Individuals needing MAJCOM access should list which MAJCOM in box 13 of the SAAR Form and do not need to list all DMIS IDs \n- AFDRSi SAAR Form (DD2875) - Completed Example \n  - Note: Submit completed DD2875 forms to the AFDRSi Helpdesk: \n  - This contact information is for AFDRSi account questions only \n  - Do not encrypt the email \n- usn.hampton-roads.navmcpubhlthcenpors.list.nmcphc-ndrs@mail.mil\n  - tracey.thomas.ctr@med.navy.mil\n  - DSN: (312) 377-0954 COMM: 757-953-0954 \n- If you are submitting your completed DD2875 from overseas or if you are having a difficult time getting through to the AFDRSi Helpdesk, use the following website to upload your DD2875 - https://safe.amrdec.army.mil \n  - Use either of the above listed email addresses for the recipient once in the site \n- Follow-up with a phone call and/or email to the Helpdesk to confirm receipt \n- Once documents are successfully received, accounts will be granted in 1-2 business days \n  - If you are not contacted within 1-2 business days, call the Helpdesk at the phone numbers provided above ",
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 7,
                    Modified: "2015-09-12T04:30:51Z",
                    Created: "2015-08-12T02:28:24Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "10b98240-fd9c-4f68-b1ae-465318a5d548"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)",
                        etag: '"4"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(8)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 8,
                    Title: "ESSENCE",
                    Icon: null,
                    Section: "Comm",
                    Program: "Epi",
                    Page: "ESSENCE",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "ESSENCE guidance and resources",
                    Policy: '**Department of Defense, Health Affairs guidance:**\n\n"In accordance with HA Policy 07-001, use of ESSENCE must be a part of everyday medical surveillance activities at all levels of the MHS. As with the previous versions of ESSENCE, I (William Winkenwerder, Jr) expect each Service to mandate the use of ESSENCE at all installations where there are qualified public health or preventive medicine professionals. "\n\n**Air Force specific guidance:**\n\n"IAW, AFI 48-105, 1.10.6.1 , Public Health (active components) will "conduct community or location-specific public health surveillance, which includes chemical, biological, radiological, and nuclear (CBRN) terrorism and syndromic surveillance". \n\n**Command Responsibilities, c. MTF Commanders or OICs shall:** \n\nOn DoD installations in the United States, ensure two trained ESSENCE users (one ofwhom may be the PHEO) are actively monitoring ESSENCE, which is the syndromic surveillance tool for the Department of Defense. For the NGB, ESSENCE shall be monitored centrally with applicable information pushed out to ARNG and ANG units as needed. ',
                    Training: null,
                    Resources: "General Information:\n\n- [ESSENCE Account Registration/Login](https://sso.csd.disa.mil/amserver/UI/Login?org=cac_pki&authlevel=3&goto=https://essence.csd.disa.mil/dmss/actions/LoginPage)\n- [New Electronic System](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/enhanced/documents/07-001.pdf) for the Early Notification of Community-based Epidemics Medical Surveillance System and Monitoring Requirements\n- [Enhanced Surveillance of Disease Patterns Associated with Biological and Chemical Agents]()\n- [DoDI 6200.03](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/enhanced/documents/DoDI 6200.03.pdf), Public Health Emergency Management Within the Department of Defense\n- [ESSENCE Usage Memorandum](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/enhanced/documents/ESSENCE__SG3PM_PH_30Dec09.pdf), 30 Dec 2009",
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 8,
                    Modified: "2015-09-12T04:31:13Z",
                    Created: "2015-08-12T02:29:09Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "a0b5ec57-3916-4142-b242-c6fca83e9cfa"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)",
                        etag: '"7"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(9)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 9,
                    Title: "Reproductive Health & Fetal Protection",
                    Icon: null,
                    Section: "FH",
                    Program: "OccHealth",
                    Page: "Fetal",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Ensure the occupational safety of expecting mothers in hazardous work environments is maintained.",
                    Policy: "- AFI 10-203, Duty Limiting Conditions, 20 Nov 2014\n- AFI 44-102, Medical Care Management, 20 Jan 2012\n- AFI 48-101, Aerospace Medicine Enterprise, 8 Dec 2014\n- AFI 48-123, Medical Examinations and Standards, 5 Nov 2013\n- AFI 48-145, Occupational and Environmental Health Program, 22 Jul 2014\n- AFI 91-202, The US Air Force Mishap Prevention Program, 5 Aug 2011\n- AFMAN 48-125, Personnel Ionizing Radiation Dosimetry, 4 Oct 2011",
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 9,
                    Modified: "2015-09-12T04:31:32Z",
                    Created: "2015-08-12T02:31:46Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "695ee465-2a51-4874-b91f-7c751b024249"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)",
                        etag: '"8"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(10)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 10,
                    Title: "Medical Employee Health",
                    Icon: null,
                    Section: "FH",
                    Program: "OccHealth",
                    Page: "MEHP",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi44-108",
                            TermGuid: "b2b86062-b292-41d1-912f-e9f5ad1ae067",
                            WssId: 1292
                        }, {
                            Label: "afi48-137",
                            TermGuid: "321bf88d-0ba5-41ac-93c1-8d12d2199657",
                            WssId: 1293
                        } ]
                    },
                    Overview: "Tracking and mitigating hospital staff health concerns.",
                    Policy: "- AFI 44-108, Infection Prevention and Control Program, 11 Dec 2014\n- AFI 48-137, Respiratory Protection Program, 15 Jul 2014\n- MMWR Vol. 60/No. RR-7, Immunization of Health-Care Personnel: Recommendations of the Advisory Committee on Immunization Practices (ACIP), 27 Nov 2011",
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 10,
                    Modified: "2015-09-12T04:33:32Z",
                    Created: "2015-08-12T02:32:43Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "5dcc7200-0204-4d9e-b171-cc31e751b601"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)",
                        etag: '"5"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(11)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 11,
                    Title: "Hearing Conservation",
                    Icon: null,
                    Section: "FH",
                    Program: "OccHealth",
                    Page: "HCP",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Monitoring members with occupational hazards threatening their long-term hearing capabilities.",
                    Policy: "- AFOSHSTD 48-20, Occupational Noise and Hearing Conservation Program, 10 May 2013 ",
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 11,
                    Modified: "2015-09-12T04:33:50Z",
                    Created: "2015-08-12T02:33:26Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "40dc0127-9e03-4c1b-8066-393a18289eb0"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)",
                        etag: '"6"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(12)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 12,
                    Title: "Public Facility Sanitation",
                    Icon: null,
                    Section: "Comm",
                    Program: "Sanitation",
                    Page: "Facility",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi48-101",
                            TermGuid: "299379e8-0d0f-45fe-b752-45bb933d4156",
                            WssId: 1281
                        } ]
                    },
                    Overview: "Air Force facility sanitation programs address sanitation of public facilities in order to ensure safe practices. Public Health interacts with installation anti-terrorism and threat assessment agencies to audit security and to apply operational risk management to assuring secure facilities.",
                    Policy: "- AFI 48-117, Public Facility Sanitation\n- AFI 48-101, Aerospace Medicine Enterprise\n- AFJI 48-110, Immunizations and Chemoprophylaxis\n- AFI 48-114, Swimming Pools, Spas and Hot Tubs and Natural Bathing Areas\n- AFI 34-248, Child Development Centers\n- AFI 34-249, Youth Programs\n- AFI 34-276, Family Child Care Programs\n- AFI 31-205, The Air Force Corrections System\n- FM 21-10, Field Hygiene and Sanitation\n- CDC Policy memo on Measles Outbreak",
                    Training: null,
                    Resources: null,
                    Tools: "Templates:\n\n-  Example Public Facility Sanitation Annual Report (I)",
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 12,
                    Modified: "2015-09-12T22:28:04Z",
                    Created: "2015-08-12T08:08:09Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "186aefea-304d-4d1f-9402-f2f1ca1438dc"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)",
                        etag: '"13"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(13)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 13,
                    Title: "Vector Surveillance & Entomology",
                    Icon: "map-marker",
                    Section: "Comm",
                    Program: "Ento",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi48-105",
                            TermGuid: "56752e56-6b10-4633-befc-b0522d68994f",
                            WssId: 1282
                        } ]
                    },
                    Overview: "The Purpose of Vector Surveillance is to monitor and control mosquitoes that are capable of transmitting disease to humans.\n\n`[...]`",
                    Policy: "Program Reference Documents:\n- DoDI 4150.7, DoD Pest Management Program, 29 May 2008\n- AFJI 48-131, Veterinary Health Services\n- AFI 48-105, Surveillance, Prevention, and Control of Diseases and Conditions of Public Health or Military Significance, \n- AFI 48-102, Medical Entomology Program\n- AFI 32-1053, Integrated Pest Management Program\n- Readiness Skills Verification Education / Training for 43HX and 4E0X1\n- HQ USAF/SG3PM Memorandum, Standardized Readiness Skills Verification (RSV) Training, 23 Jul 2012\n- Control of Communicable Diseases Manual, 20th edition, 2014\n- Communicable Disease Control in Emergencies, WHO 2005\n- HQ USAF/SG Memorandum, Medical Procedures for Deployment Health Surveillance, 22 May 2003\n- AFPMB Technical Guides \n- AFPMB Disease Vector Ecology Profiles \n- USAF Guide to Operational Surveillance of Medically Important Vectors and Pests, “Operational Entomology,” Ver. 2.1, 15 Aug 2005\n\nOTHER DoD ISSUANCES:\n- DoD Directive 3000.10, Contingency Basing Outside the United States, January 10, 2013\n- DoD Directive 3025.18, Defense Support of Civil Authorities, December 29, 2010\n- DoD Directive 4715.1E, Environment, Safety, and Occupational Health (ESOH), March 19, 2005\n- DoD Plan 4150.7-P - Plan For the Certification of Pesticide Applicators, (Cancelled), replaced by DoDM 4150.07, Volume 1, DoD Pest Management Training: The DoD Plan for the Certification of Pesticide Applicators, November 2008\n- DoDM 4150-7-M, DoD Pest Management Training and Certification Manual\n- DoD Guidance 4715.5-G - Overseas Environmental Baseline Guidance Document, May 1, 2007\n- DoD Instruction 6490.03 - Implementation and Application of Joint Medical Surveillance for Deployments\n- DoD Instruction 4140.01-M-1 - Phytosanitary Requirements for Wood Packaging Material",
                    Training: null,
                    Resources: "Surveillance Data: \n\n- [Pest and Vector Identification Data](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/entomology/Surveillance/mosquito.cfm)\n- [Mosquito Trapping Reports](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/entomology/Surveillance/reports.cfm)",
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 13,
                    Modified: "2015-09-19T06:56:38Z",
                    Created: "2015-08-12T08:09:55Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "bf8509fd-24ca-49af-9f4b-d58d4c3974b6"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)",
                        etag: '"6"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(14)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 14,
                    Title: "Food Safety",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Safety",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "See left-side menu for full list of topics.",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 14,
                    Modified: "2015-09-12T04:14:47Z",
                    Created: "2015-08-12T08:11:49Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "33207778-0ecb-4ede-9b33-5218d590c2a2"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)",
                        etag: '"7"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(15)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 15,
                    Title: "Food Vulnerability Assessments",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Defense",
                    rabbitHole: "FVA",
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "The purpose of Food Vulnerability Assessments are to evaluate and identify vulnerabilities within the food supply chain that can be exploited through intentional contamination.",
                    Policy: "Program Reference Documents:\n\n- DoDI 2000.16 DoD Antiterrorism (AT)Standards \n- DoDI 2000.12 DoD Antiterrorism Program\n- AFI 10-245 Antiterrorism\n- AFMAN 10-246 Food and Water Protection\n- AFI 90-201 AF Inspection Program\n- AFI 31-101 Security\n- AFI 90-802 Risk Management\n- AFPAM 90-803 Risk Management\n- AFPAM 32-1125V1 Key Control\n- AFI 48-116 Food Safety",
                    Training: null,
                    Resources: "- AIB International\n- Employee Handout - Reporting Suspicious Activity \n- Food Defense Handbook from the Univ. of Missouri\n\nOTHER DoD ISSUANCES:\n\n- Food Defense Handbook \n- JSIVA Security Classification Guide, 2012\n- DoD Vulnerability Assessment Benchmarks, 2013\n- AF Food Vulnerability Assessment Benchmarks, 2015\n- Food Defense Security Measures \n- Unified Facilities Criteria 4-722-01 ",
                    Tools: "Forms:\n\n- Distribution Center FVA Guided Discussion Worksheet 2015\n- Distribution Center FVA Worksheet 2015\n- DoD Food Establishment FVA Guided Discussion Worksheet 2015\n- DoD Food Establishment FVA Worksheet 2015\n- Local and Vendor Food Establishment FVA Guided Worksheet 2015\n- Local and Vendor Food Establishment FVA Worksheet 2015\n\nTemplates:\n\n- FVA Final Report for BASE TEMPLATE 2015  \n- Food Defense Plan (Pending)\n- FVA Tasker MASTER TEMPLATE 2015\n- Facility and Vendor List",
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 15,
                    Modified: "2015-09-12T04:50:08Z",
                    Created: "2015-08-26T23:00:19Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "2b3b20d9-c154-460e-904d-f9a4ede816ba"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)",
                        etag: '"10"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(16)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 16,
                    Title: "Public Health",
                    Icon: null,
                    Section: null,
                    Program: null,
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "### Homepage Stuffsz",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 16,
                    Modified: "2015-09-12T07:06:40Z",
                    Created: "2015-08-27T01:01:48Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "7488a5fa-6498-4e32-a814-ee58433b2f96"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)",
                        etag: '"10"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(17)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 17,
                    Title: "Force Health",
                    Icon: null,
                    Section: "FH",
                    Program: null,
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Calibrated Popicon\n\n|test|Hey|location|\n|--|--|--|\n|When|Where|[hyperlink](http://google.com)|",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 17,
                    Modified: "2015-09-12T07:06:54Z",
                    Created: "2015-08-27T01:02:24Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "8a395424-22d0-4856-9e11-cfc7dd06bb9e"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)",
                        etag: '"8"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(18)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 18,
                    Title: "Community Health",
                    Icon: null,
                    Section: "Comm",
                    Program: null,
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Spontaneously splendid.\n\n### /Comm",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 18,
                    Modified: "2015-09-12T07:07:11Z",
                    Created: "2015-08-27T01:02:48Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "9b0e64ff-0f18-4d16-b3f8-2a0e9fa21603"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)",
                        etag: '"5"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(20)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 20,
                    Title: "Food Defense",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Defense",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "See left navigation for full scope of available information.\n\n`[...]`",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 20,
                    Modified: "2015-09-13T06:56:26Z",
                    Created: "2015-08-29T11:00:02Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "89a4ea03-bac2-4e79-ab01-dcf0f9626c97"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)",
                        etag: '"7"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(21)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 21,
                    Title: "Deployment Health",
                    Icon: "world",
                    Section: "FH",
                    Program: "DeploymentHealth",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Visit the [Deployment Health](https://kx.afms.mil/kj/kx3/deploymenthealth) website.\n\nTest",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 21,
                    Modified: "2015-09-21T18:24:44Z",
                    Created: "2015-09-11T15:08:39Z",
                    AuthorId: 422,
                    EditorId: 422,
                    OData__UIVersionString: "5.0",
                    Attachments: false,
                    GUID: "b76cf18f-b405-4cbf-8623-44de0cccd2e4"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)",
                        etag: '"5"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(23)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 23,
                    Title: "ALFOODACTS",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Safety",
                    rabbitHole: "ALFOODACTS",
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "food",
                            TermGuid: "55e99f3e-e1dc-446c-be90-fefabe862f23",
                            WssId: 1289
                        } ]
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "afi48-116",
                            TermGuid: "94a4c95e-da74-4bcc-9cc1-82126b9162a5",
                            WssId: 1290
                        } ]
                    },
                    Overview: "WIZZY-WIG",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 23,
                    Modified: "2015-09-12T04:49:34Z",
                    Created: "2015-09-11T15:19:25Z",
                    AuthorId: 422,
                    EditorId: 5989,
                    OData__UIVersionString: "3.0",
                    Attachments: false,
                    GUID: "2f456bf9-227f-4b7d-973a-2ca5a9e70caa"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)",
                        etag: '"2"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(24)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 24,
                    Title: "Food Protection",
                    Icon: "coffee",
                    Section: "Comm",
                    Program: "Food",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: [ {
                            Label: "food",
                            TermGuid: "55e99f3e-e1dc-446c-be90-fefabe862f23",
                            WssId: 1289
                        } ]
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "**Protect that meal**\n\n> Delish.",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 24,
                    Modified: "2015-09-19T06:53:05Z",
                    Created: "2015-09-12T04:39:30Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "14387e55-1dc6-4ac5-84c1-7cdcaef9a43e"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)",
                        etag: '"2"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(25)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 25,
                    Title: "General Sanitation",
                    Icon: "drop",
                    Section: "Comm",
                    Program: "Sanitation",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Sanitized",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 25,
                    Modified: "2015-09-19T06:53:22Z",
                    Created: "2015-09-12T11:29:27Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "fcbbf5f9-9729-4c2e-861f-048105879ac9"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(26)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 26,
                    Title: "Local Approval Sources",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Safety",
                    rabbitHole: "Local",
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "`When you just gotta have that local source at on speed dial.`",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 26,
                    Modified: "2015-09-12T21:54:33Z",
                    Created: "2015-09-12T21:54:33Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "d573c3e9-4a08-444b-8e73-67fa6353082f"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(27)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 27,
                    Title: "Food Facility Sanitation",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Safety",
                    rabbitHole: "Facility",
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Make sure they clean!",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 27,
                    Modified: "2015-09-12T22:24:20Z",
                    Created: "2015-09-12T22:24:20Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "1dd219ae-232e-4e2e-8901-baefbeea6495"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(28)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 28,
                    Title: "Food Inspection",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Safety",
                    rabbitHole: "Inspection",
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "### IG",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 28,
                    Modified: "2015-09-12T22:25:04Z",
                    Created: "2015-09-12T22:25:04Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "653dea69-99ce-438e-b238-df88f8132988"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(29)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 29,
                    Title: "Rations",
                    Icon: null,
                    Section: "Comm",
                    Program: "Food",
                    Page: "Safety",
                    rabbitHole: "Rations",
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "Less is more.",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 29,
                    Modified: "2015-09-12T22:25:29Z",
                    Created: "2015-09-12T22:25:29Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "0499c494-7fb2-4ec7-840c-c62853a7a5d2"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(30)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 30,
                    Title: "Field Sanitation",
                    Icon: null,
                    Section: "Comm",
                    Program: "Sanitation",
                    Page: "Field",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "> Makes me think of **The Sield**",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 30,
                    Modified: "2015-09-12T22:27:35Z",
                    Created: "2015-09-12T22:27:35Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "d115215e-99ec-4044-ae06-bf4f295cd1eb"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)",
                        etag: '"2"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(31)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 31,
                    Title: "Surveillance Data",
                    Icon: null,
                    Section: "Comm",
                    Program: "Ento",
                    Page: "Surveys",
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "View the current [Surveillance Data](https://gumbo2.area52.afnoapps.usaf.mil/epi-consult/entomology/).",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 31,
                    Modified: "2015-09-17T04:17:25Z",
                    Created: "2015-09-13T01:23:48Z",
                    AuthorId: 5989,
                    EditorId: 5989,
                    OData__UIVersionString: "2.0",
                    Attachments: false,
                    GUID: "778a7a3c-0761-4058-aec7-8a87956dde73"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(33)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 33,
                    Title: "Research",
                    Icon: null,
                    Section: "Research",
                    Program: null,
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "### New Page :)\n#### Joy",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 33,
                    Modified: "2015-09-21T18:06:43Z",
                    Created: "2015-09-21T18:06:43Z",
                    AuthorId: 20950,
                    EditorId: 20950,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "c4f0e91b-aec6-4f05-952b-4cbe42efb8dc"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(34)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 34,
                    Title: "ResearchPg1",
                    Icon: null,
                    Section: "Research",
                    Program: "RSpg1",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "### New Page :)\n#### Joy",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 34,
                    Modified: "2015-09-21T18:16:01Z",
                    Created: "2015-09-21T18:16:01Z",
                    AuthorId: 20950,
                    EditorId: 20950,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "ca8f224d-1342-4925-a231-7ae28b3c9d96"
                }, {
                    __metadata: {
                        id: "Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)",
                        uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)",
                        etag: '"1"',
                        type: "SP.Data.ContentListItem"
                    },
                    FirstUniqueAncestorSecurableObject: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/FirstUniqueAncestorSecurableObject"
                        }
                    },
                    RoleAssignments: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/RoleAssignments"
                        }
                    },
                    AttachmentFiles: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/AttachmentFiles"
                        }
                    },
                    ContentType: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/ContentType"
                        }
                    },
                    FieldValuesAsHtml: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/FieldValuesAsHtml"
                        }
                    },
                    FieldValuesAsText: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/FieldValuesAsText"
                        }
                    },
                    FieldValuesForEdit: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/FieldValuesForEdit"
                        }
                    },
                    File: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/File"
                        }
                    },
                    Folder: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/Folder"
                        }
                    },
                    ParentList: {
                        __deferred: {
                            uri: "https://kx.afms.mil/kj/kx7/PublicHealth/_api/Web/Lists(guid'4522f7f9-1b5c-4990-9704-991725def693')/Items(35)/ParentList"
                        }
                    },
                    FileSystemObjectType: 0,
                    Id: 35,
                    Title: "Test",
                    Icon: null,
                    Section: "Research",
                    Program: "Test",
                    Page: null,
                    rabbitHole: null,
                    Keywords: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    References: {
                        __metadata: {
                            type: "Collection(SP.Taxonomy.TaxonomyFieldValue)"
                        },
                        results: []
                    },
                    Overview: "### New Page :)\n#### Joy",
                    Policy: null,
                    Training: null,
                    Resources: null,
                    Tools: null,
                    Contributions: null,
                    ContentTypeId: "0x0100B2D3D6C931BB534D9AF1CB0299E7F31B",
                    Link: null,
                    ID: 35,
                    Modified: "2015-09-22T14:35:00Z",
                    Created: "2015-09-22T14:35:00Z",
                    AuthorId: 20950,
                    EditorId: 20950,
                    OData__UIVersionString: "1.0",
                    Attachments: false,
                    GUID: "03579edf-b717-419a-a367-b3b4b34e2669"
                } ]
            }
        }, data_ = reduce(data.d.results, function(obj, item) {
            obj[item.ID] = {
                d: item
            };
            return obj;
        }, {}), _spPageContextInfo = {
            webAbsoluteUrl: "https://kx.afms.mil/kj/kx7/PublicHealth"
        }, baseURL = _spPageContextInfo.webAbsoluteUrl, sitePath = baseURL + "/_api/lists/getByTitle('Content')", digest = document.getElementById("__REQUESTDIGEST").value;
        events.on("list.loading", function() {
            setTimeout(function() {
                events.emit("list.success", data);
            }, 250);
        });
        events.on("page.loading", function(path) {
            console.log("Begin loadPage...");
            if (!pages[path]) {
                events.emit("missing", path);
                return false;
            }
            setTimeout(function() {
                events.emit("page.loaded", data_[pages[path].ID]);
            }, 250);
        });
        module.exports = {
            data: data,
            baseURL: baseURL,
            sitePath: sitePath,
            digest: digest
        };
    }, {
        "./store": 103,
        "lodash/collection/map": 17,
        "lodash/collection/reduce": 18
    } ],
    2: [ function(require, module, exports) {
        function DOMRef() {
            if (!(this instanceof DOMRef)) {
                return new DOMRef();
            }
            this.content = document.getElementById("ph-content");
            this.title = document.getElementById("ph-title");
            this.buttons = document.getElementById("ph-buttons");
            this.titleField = document.getElementById("titleField");
            this.contentWrap = document.getElementById("ph-contentWrap");
            this.cheatSheet = document.getElementById("cheatSheet");
            this.input = document.getElementById("ph-input");
            this.textarea = document.getElementById("ph-textarea");
            this.editor = null;
            this.output = document.getElementById("ph-output");
        }
        DOMRef.prototype.set = function(data) {
            var name;
            for (name in data) {
                if (this.hasOwnProperty(name)) {
                    this[name] = data[name];
                }
            }
            return this;
        };
        var domRefs = new DOMRef();
        module.exports = {
            DOMRef: DOMRef,
            domRefs: domRefs
        };
    }, {} ],
    3: [ function(require, module, exports) {
        function addEvent(evt, element, fnc) {
            return element.addEventListener ? element.addEventListener(evt, fnc, false) : element.attachEvent("on" + evt, fnc);
        }
        function removeEvent(evt, element, fnc) {
            return element.removeEventListener ? element.removeEventListener(evt, fnc, false) : element.detachEvent("on" + evt, fnc);
        }
        var regFullPage = / ?fullPage/gi, regCheatSheet = / ?cheatSheet/gi, regNoChange = / ?nochange/gi, regNormalize = /[^a-zA-Z0-9_-]/g, md = markdownit({
            xhtmlOut: true,
            typographer: true,
            quotes: "“”‘’",
            highlight: function(code, lang) {
                if (lang && hljs.getLanguage(lang)) {
                    try {
                        return hljs.highlight(lang, code).value;
                    } catch (e) {}
                }
                return "";
            }
        }), codeMirror;
        try {
            codeMirror = CodeMirror;
        } catch (e) {
            codeMirror = null;
        }
        module.exports = {
            addEvent: addEvent,
            removeEvent: removeEvent,
            regFullPage: regFullPage,
            regCheatSheet: regCheatSheet,
            regNoChange: regNoChange,
            regNormalize: regNormalize,
            md: md,
            codeMirror: codeMirror
        };
    }, {} ],
    4: [ function(require, module, exports) {
        var h = require("virtual-dom/h"), diff = require("virtual-dom/diff"), patch = require("virtual-dom/patch"), createElement = require("virtual-dom/create-element"), reqwest = require("reqwest"), Router = require("director/build/director").Router, console = console || require("console"), sweetAlert = require("sweetalert"), misc = require("./helpers"), codeMirror = misc.codeMirror, data = require("./data"), baseURL = data.baseURL, sitePath = "", digest = data.digest, pages = require("./store").pages, events = require("./store").events, current = pages.current, DOMRef = require("./domStore").DOMRef, domRefs = require("./domStore").domRefs, dirtyDOM = null, rootNode = null, navDOM = null, renderNav = require("./nav"), renderTabs = require("./tabs"), tabsDOM = renderTabs([ {
            title: "Overview",
            icon: "home"
        } ], {
            style: {
                display: "none"
            }
        }, handleTab), inTransition = {}, router = Router({
            "/": {
                on: function() {
                    events.emit("page.loading", "/");
                }
            },
            "/(\\w+)": {
                on: function(section) {
                    events.emit("page.loading", "/" + section.replace(/\s/g, ""));
                },
                "/(\\w+)": {
                    on: function(section, program) {
                        events.emit("page.loading", "/" + section.replace(/\s/g, "") + "/" + program.replace(/\s/g, ""));
                    },
                    "/(\\w+)": {
                        on: function(section, program, page) {
                            events.emit("page.loading", "/" + section.replace(/\s/g, "") + "/" + program.replace(/\s/g, "") + "/" + page.replace(/\s/g, ""));
                        },
                        "/(\\w+)": {
                            on: function(section, program, page, rabbitHole) {
                                events.emit("page.loading", "/" + section.replace(/\s/g, "") + "/" + program.replace(/\s/g, "") + "/" + page.replace(/\s/g, "") + "/" + rabbitHole.replace(/\s/g, ""));
                            }
                        }
                    }
                }
            }
        }).configure({
            strict: false,
            after: resetPage,
            notfound: function() {
                sweetAlert({
                    title: "Oops",
                    text: "Page doesn't exist.  Sorry :(\n\nI'll redirect you to the homepage instead.",
                    timer: 2e3,
                    showConfirmButton: false,
                    showCancelButton: false,
                    allowOutsideClick: true
                }, function() {
                    router.setRoute("/");
                });
            }
        });
        sweetAlert.setDefaults({
            allowOutsideClick: true,
            showCancelButton: true,
            cancelButtonText: "Nope.",
            confirmButtonText: "Yes!"
        });
        events.on("*.loading", function() {
            var regLoading = / ?loading/gi;
            var target = domRefs.output;
            if (inTransition.output === true) {
                return false;
            }
            inTransition[target.id] = true;
            if (regLoading.test(target.className) === false) {
                inTransition.tmp = target.innerHTML;
                target.innerHTML = "<div class='loader-group'><div class='bigSqr'><div class='square first'></div><div class='square second'></div><div class='square third'></div><div class='square fourth'></div></div>loading...</div>";
                target.className += " loading";
            }
        });
        events.on("*.loaded", function() {
            var regLoading = / ?loading/gi;
            var target = domRefs.output;
            inTransition.output = false;
            target.className = target.className.replace(regLoading, "");
        });
        events.on("list.success", function(data) {
            pages.init(data);
            navDOM = renderNav(pages.sections);
            pageSetup();
        });
        events.on("missing", function(path) {
            sweetAlert({
                title: "Uh oh",
                text: path + " doesn't seem to match any of our pages.  Try the search!  For now I'll just load the homepage for you.",
                confirmButtonText: "OK!",
                allowOutsideClick: false,
                allowEscapeKey: false,
                showCancelButton: false
            }, function() {
                router.setRoute("/");
            });
        });
        events.on("page.loaded", function(data) {
            console.log("page data: ", data);
            var obj = data.d;
            if (!obj) {
                router.setRoute("/");
                return false;
            }
            if (obj.Link) {
                sweetAlert({
                    title: "See ya!",
                    text: "You are now leaving the Public Health Kx.  Bye!",
                    type: "warning",
                    cancelButtonText: "Nah I'll stay",
                    confirmButtonText: "Go!",
                    closeOnConfirm: false,
                    showCancelButton: true,
                    showLoaderOnConfirm: true
                }, function() {
                    window.open(obj.Link, "_blank");
                    return false;
                });
            }
            var subLinks = document.querySelectorAll(".ph-page.link, .ph-rabbit-hole.link");
            var tabCurrent = document.querySelector(".tab-current");
            var i = 0;
            total = subLinks.length;
            for (;i < total; ++i) {
                subLinks[i].style.display = "none";
            }
            if (tabCurrent) {
                tabCurrent.className = tabCurrent.className.replace(/ ?tab\-current/gi, "");
            }
            current.set({
                id: obj.ID,
                title: obj.Title || "",
                _title: obj.Title || "",
                icon: obj.Icon || "",
                text: obj.Overview || "",
                overview: obj.Overview || "",
                policy: obj.Policy || "",
                training: obj.Training || "",
                resources: obj.Resources || "",
                tools: obj.Tools || "",
                contributions: obj.Contributions || "",
                section: obj.Section || "",
                program: obj.Program || "",
                page: obj.Page || "",
                rabbitHole: obj.rabbitHole || "",
                type: "Overview",
                listItemType: obj.__metadata.type,
                timestamp: Date && Date.now() || new Date()
            });
            var tabsStyle = current.program !== "" ? null : {
                style: {
                    display: "none"
                }
            };
            tabsDOM = renderTabs([ {
                title: "Overview",
                icon: "home"
            }, {
                title: "Policy",
                icon: "notebook"
            }, {
                title: "Training",
                icon: "display1"
            }, {
                title: "Resources",
                icon: "cloud-upload"
            }, {
                title: "Tools",
                icon: "tools"
            }, {
                title: "Contributions",
                icon: "users"
            } ], tabsStyle, handleTab);
            resetPage();
            insertContent(current.text, current.type);
            var activeLink = document.querySelector("#ph-nav a[href='" + window.location.hash + "']");
            var currentTab = document.querySelector("#ph-tabs a.icon-overview");
            if (activeLink) {
                activeLink.className += " active";
            }
            if (currentTab) {
                currentTab.parentNode.className += " tab-current";
            }
            var hashArray = window.location.hash.slice(2).split(/\//), total;
            if (hashArray.length > 1) {
                var phPage = document.querySelectorAll("#ph-nav a[href^='#/" + hashArray[0] + "/" + hashArray[1] + "/']");
                if (phPage) {
                    i = 0;
                    total = phPage.length;
                    for (;i < total; ++i) {
                        phPage[i].removeAttribute("style");
                        phPage[i].parentNode.removeAttribute("style");
                    }
                }
            }
            document.title = current.title;
        });
        function handleTab(page) {
            var content = {};
            content[current.type.toLowerCase()] = current.text;
            content.text = current[page.toLowerCase()];
            content.type = page;
            current.set(content);
            insertContent(current.text, current.type);
            if (codeMirror) {
                setupEditor();
            }
        }
        function render(navDOM, tabsDOM, title) {
            return h("#ph-wrapper", [ h("#ph-side-nav", [ navDOM ]), h("#ph-content.fullPage", [ tabsDOM, h("h1#ph-title", [ String(title || "") ]), h("#ph-contentWrap", [ h("#ph-output") ]) ]) ]);
        }
        function renderEditor(navDOM, tabsDOM, title, text) {
            return h("#ph-wrapper", [ h("#ph-side-nav", [ navDOM ]), h("#ph-content.fullPage", [ h("#ph-buttons", [ h("button#toggleButton.ph-btn", {
                onclick: editPage,
                style: {
                    display: "none"
                }
            }, [ "Edit page" ]), h("div.clearfix"), h("button#cheatSheetButton.ph-btn", {
                onclick: toggleCheatSheet,
                type: "button"
            }, [ "Markdown help" ]), h("button#saveButton.ph-btn", {
                onclick: savePage,
                type: "button"
            }, [ "Save" ]), h("button#createButton.ph-btn", {
                onclick: createPage,
                type: "button"
            }, [ "New" ]) ]), tabsDOM, h("h1#ph-title", [ String(title || "") ]), h("#cheatSheet", {
                style: {
                    display: "none"
                }
            }, [ "This will be a cheat-sheet for markdown" ]), h("#ph-contentWrap", [ h("#ph-input", [ h("textarea#ph-textarea", [ String(text || "") ]) ]), h("#ph-output") ]) ]) ]);
        }
        function savePage(event) {
            var self = this;
            event = event || window.event;
            if (event.preventDefault) event.preventDefault(); else event.returnValue = false;
            current.set({
                title: current.title.trim(),
                text: current.text.trim()
            });
            current[current.type.toLowerCase()] = current.text;
            self.innerHTML = "...saving...";
            var data = {
                __metadata: {
                    type: current.listItemType
                },
                Title: current.title,
                Overview: current.overview,
                Policy: current.policy,
                Training: current.training,
                Resources: current.resources,
                Tools: current.tools,
                Contributions: current.contributions
            };
            reqwest({
                url: sitePath + "/items(" + current.id + ")",
                method: "POST",
                data: JSON.stringify(data),
                type: "json",
                contentType: "application/json",
                withCredentials: true,
                headers: {
                    "X-HTTP-Method": "MERGE",
                    Accept: "application/json;odata=verbose",
                    "text-Type": "application/json;odata=verbose",
                    "Content-Type": "application/json;odata=verbose",
                    "X-RequestDigest": digest,
                    "IF-MATCH": "*"
                },
                success: function() {
                    self.style.fontWeight = "bold";
                    self.innerHTML = "Saved!";
                    events.emit("list.loading");
                },
                error: function() {
                    self.style.color = "#FF2222";
                    self.style.fontWeight = "bold";
                    self.innerHTML = "Connection error - try again.";
                },
                complete: function() {
                    if (!inTransition.tempSaveText) {
                        inTransition.tempSaveText = setTimeout(function() {
                            self.removeAttribute("style");
                            self.innerHTML = "Save";
                        }, 1500);
                    }
                }
            });
            return false;
        }
        function createPage(event) {
            event = event || window.event;
            if (event.preventDefault) event.preventDefault(); else event.returnValue = false;
            var location = window.location.hash.slice(1);
            sweetAlert({
                title: "New page",
                text: "Give it a name:",
                type: "input",
                closeOnConfirm: false,
                showCancelButton: true
            }, function(title) {
                if (title === false) {
                    return false;
                }
                if (title === "") {
                    sweetAlert.showInputError("Please enter a page title!");
                    return false;
                }
                var firstTry = title.replace(misc.regNormalize, "");
                sweetAlert({
                    title: "Perfect!",
                    text: "What a great name.  Can you shorten it at all to make the URL easier to manage?  If not, just hit continue!",
                    type: "input",
                    closeOnConfirm: false,
                    showCancelButton: true,
                    inputValue: firstTry,
                    confirmButtonText: "Continue",
                    cancelButtonText: "I want off this ride"
                }, function(newName) {
                    if (newName === false) {
                        return false;
                    }
                    if (newName === "") {
                        sweetAlert.showInputError("Are you trying to cancel or do you just want me to use what we already have so far?");
                        return false;
                    }
                    var name = newName.replace(misc.regNormalize, ""), path = "", section = "", program = "", page = "", rabbitHole = "";
                    if (current.section !== "") {
                        section = current.section;
                        path += "/" + current.section;
                        if (current.program !== "") {
                            program = current.program;
                            path += "/" + current.program;
                            if (current.page !== "") {
                                page = current.page;
                                rabbitHole = name;
                                path += "/" + current.page + "/" + name;
                            } else {
                                page = name;
                                path += "/" + name;
                            }
                        } else {
                            program = name;
                            path += "/" + name;
                        }
                    } else {
                        section = name;
                        path += "/" + name;
                    }
                    sweetAlert({
                        title: "Confirm",
                        text: misc.md.render("Your page will have the title:\n\n**`" + title + "`**\n\nPage location: **`" + path + "`**\n"),
                        closeOnConfirm: false,
                        showCancelButton: true,
                        showLoaderOnConfirm: true,
                        html: true,
                        type: "warning"
                    }, function() {
                        reqwest({
                            url: sitePath + "/items",
                            method: "POST",
                            data: JSON.stringify({
                                __metadata: {
                                    type: current.listItemType
                                },
                                Title: title,
                                Overview: "### New Page :)\n#### Joy",
                                Section: section,
                                Program: program,
                                Page: page,
                                rabbitHole: rabbitHole
                            }),
                            type: "json",
                            contentType: "application/json",
                            withCredentials: true,
                            headers: {
                                Accept: "application/json;odata=verbose",
                                "text-Type": "application/json;odata=verbose",
                                "Content-Type": "application/json;odata=verbose",
                                "X-RequestDigest": digest
                            },
                            success: function() {
                                sweetAlert({
                                    title: "Success!",
                                    text: title + " was created at " + path,
                                    type: "success",
                                    showCancelButton: true,
                                    cancelButtonText: "Stay here",
                                    confirmButtonText: "Visit new page"
                                }, function() {
                                    router.setRoute(path);
                                    return false;
                                });
                            },
                            error: function(error) {
                                console.log("error connecting:", error);
                            }
                        });
                    });
                });
            });
        }
        function editPage() {
            if (misc.regFullPage.test(domRefs.content.className)) {
                domRefs.content.className = domRefs.content.className.replace(misc.regFullPage, "");
            } else {
                domRefs.content.className += " fullPage";
            }
            domRefs.editor.refresh();
            return false;
        }
        function toggleCheatSheet() {
            if (domRefs.cheatSheet.style.display === "none") {
                domRefs.cheatSheet.removeAttribute("style");
            } else {
                domRefs.cheatSheet.style.display = "none";
            }
            return false;
        }
        function update(e) {
            var val = e.getValue();
            insertContent(val, current.type);
            current.set({
                text: val
            });
        }
        function insertContent(text, type) {
            domRefs.output.innerHTML = misc.md.render("## " + type + "\n" + text);
        }
        function pageSetup() {
            dirtyDOM = !codeMirror ? render(navDOM, tabsDOM, current.title) : renderEditor(navDOM, tabsDOM, current.title, current.text);
            rootNode = createElement(dirtyDOM);
            phWrapper.parentNode.replaceChild(rootNode, phWrapper);
            domRefs = new DOMRef();
            var activeLink = document.querySelector("#ph-nav a[href='" + window.location.hash + "']");
            var tabCurrent = document.querySelector("#ph-tabs a.icon-overview");
            if (activeLink) {
                activeLink.className += " active";
            }
            if (tabCurrent) {
                tabCurrent.parentNode.className += " tab-current";
            }
            var hashArray = window.location.hash.slice(2).split(/\//), i, total;
            if (hashArray.length > 1) {
                var phPage = document.querySelectorAll("#ph-nav a[href^='#/" + hashArray[0] + "/" + hashArray[1] + "/']");
                if (phPage) {
                    i = 0;
                    total = phPage.length;
                    for (;i < total; ++i) {
                        phPage[i].removeAttribute("style");
                        phPage[i].parentNode.removeAttribute("style");
                    }
                }
            }
            if (window.location.hash) {
                router.init();
            } else {
                router.init("/");
            }
        }
        events.on("page.rendered", function() {
            console.log("Loading editor...");
            if (domRefs.editor) {
                var wrap = domRefs.editor.getWrapperElement();
                wrap.parentNode.removeChild(wrap);
                domRefs.set({
                    editor: null
                });
            }
            var refreshDOM = renderEditor(navDOM, tabsDOM, current.title, current.text);
            var patches = diff(dirtyDOM, refreshDOM);
            rootNode = patch(rootNode, patches);
            dirtyDOM = refreshDOM;
            domRefs.set({
                editor: codeMirror.fromTextArea(domRefs.textarea, {
                    mode: "gfm",
                    lineNumbers: false,
                    matchBrackets: true,
                    lineWrapping: true,
                    theme: "mdn-like",
                    extraKeys: {
                        Enter: "newlineAndIndentContinueMarkdownList"
                    }
                })
            });
            domRefs.editor.on("change", update);
            domRefs.editor.refresh();
            domRefs.buttons.childNodes[0].removeAttribute("style");
            console.log("Editor loaded");
        });
        function resetPage() {
            console.log("Page reset");
            var oldActive = document.querySelectorAll("a.active"), i = 0, total = oldActive.length;
            for (;i < total; ++i) {
                oldActive[i].className = oldActive[i].className.replace(/ ?active/gi, "");
            }
            if (codeMirror) {
                if (domRefs.editor) {
                    var wrap = domRefs.editor.getWrapperElement();
                    wrap.parentNode.removeChild(wrap);
                    domRefs.set({
                        editor: null
                    });
                }
                var refreshDOM = renderEditor(navDOM, tabsDOM, current.title, current.text);
            } else {
                refreshDOM = render(navDOM, tabsDOM, current.title);
            }
            var patches = diff(dirtyDOM, refreshDOM);
            rootNode = patch(rootNode, patches);
            dirtyDOM = refreshDOM;
            domRefs = new DOMRef();
        }
        events.emit("list.loading");
    }, {
        "./data": 1,
        "./domStore": 2,
        "./helpers": 3,
        "./nav": 5,
        "./store": 103,
        "./tabs": 104,
        console: 10,
        "director/build/director": 6,
        reqwest: 68,
        sweetalert: 69,
        "virtual-dom/create-element": 70,
        "virtual-dom/diff": 71,
        "virtual-dom/h": 72,
        "virtual-dom/patch": 80
    } ],
    5: [ function(require, module, exports) {
        var h = require("virtual-dom/h");
        function renderLink(link) {
            return h("li#ph-link-" + link.id + link.level, link.attr, [ h("a", {
                href: link.href,
                target: link.href.charAt(0) !== "#" ? "_blank" : ""
            }, [ !link.icon ? null : h("i.icon.icon-" + link.icon), String(link.title), h("span.place") ]), link.hr ]);
        }
        function renderSection(section) {
            var links = [], i = 0, count = section.links.length;
            for (;i < count; ++i) {
                links[i] = renderLink(section.links[i]);
            }
            return h("li.ph-section.link", [ h("p", [ h("a", {
                href: section.path
            }, [ String(section.title) ]) ]), h("hr"), h("ul", links) ]);
        }
        function renderNav(sections) {
            var links = [], name;
            for (name in sections) {
                if (sections.hasOwnProperty(name)) {
                    links.push(renderSection(sections[name]));
                }
            }
            return h("#ph-nav", [ h(".header", [ h("a", {
                href: "#/"
            }, [ h(".logo", [ h("img", {
                src: "/kj/kx7/PublicHealth/SiteAssets/Images/phLogo64-gs.png",
                alt: "Public Health Home",
                height: "64",
                width: "64"
            }) ]), h("p.text", [ "Public Health", h("br"), h("small", [ "US Air Force" ]) ]) ]) ]), h("#ph-site-pages", [ h("div", [ h("a.site-page", {
                href: "#/leaders"
            }, [ "Leaders" ]), h("a.site-page", {
                href: "#/news"
            }, [ "News" ]), h("a.site-page", {
                href: "#/contact"
            }, [ "Address Book" ]) ]) ]), h("ul.nav", links) ]);
        }
        module.exports = renderNav;
    }, {
        "virtual-dom/h": 72
    } ],
    6: [ function(require, module, exports) {
        (function(exports) {
            var dloc = document.location;
            function dlocHashEmpty() {
                return dloc.hash === "" || dloc.hash === "#";
            }
            var listener = {
                mode: "modern",
                hash: dloc.hash,
                history: false,
                check: function() {
                    var h = dloc.hash;
                    if (h != this.hash) {
                        this.hash = h;
                        this.onHashChanged();
                    }
                },
                fire: function() {
                    if (this.mode === "modern") {
                        this.history === true ? window.onpopstate() : window.onhashchange();
                    } else {
                        this.onHashChanged();
                    }
                },
                init: function(fn, history) {
                    var self = this;
                    this.history = history;
                    if (!Router.listeners) {
                        Router.listeners = [];
                    }
                    function onchange(onChangeEvent) {
                        for (var i = 0, l = Router.listeners.length; i < l; i++) {
                            Router.listeners[i](onChangeEvent);
                        }
                    }
                    if ("onhashchange" in window && (document.documentMode === undefined || document.documentMode > 7)) {
                        if (this.history === true) {
                            setTimeout(function() {
                                window.onpopstate = onchange;
                            }, 500);
                        } else {
                            window.onhashchange = onchange;
                        }
                        this.mode = "modern";
                    } else {
                        var frame = document.createElement("iframe");
                        frame.id = "state-frame";
                        frame.style.display = "none";
                        document.body.appendChild(frame);
                        this.writeFrame("");
                        if ("onpropertychange" in document && "attachEvent" in document) {
                            document.attachEvent("onpropertychange", function() {
                                if (event.propertyName === "location") {
                                    self.check();
                                }
                            });
                        }
                        window.setInterval(function() {
                            self.check();
                        }, 50);
                        this.onHashChanged = onchange;
                        this.mode = "legacy";
                    }
                    Router.listeners.push(fn);
                    return this.mode;
                },
                destroy: function(fn) {
                    if (!Router || !Router.listeners) {
                        return;
                    }
                    var listeners = Router.listeners;
                    for (var i = listeners.length - 1; i >= 0; i--) {
                        if (listeners[i] === fn) {
                            listeners.splice(i, 1);
                        }
                    }
                },
                setHash: function(s) {
                    if (this.mode === "legacy") {
                        this.writeFrame(s);
                    }
                    if (this.history === true) {
                        window.history.pushState({}, document.title, s);
                        this.fire();
                    } else {
                        dloc.hash = s[0] === "/" ? s : "/" + s;
                    }
                    return this;
                },
                writeFrame: function(s) {
                    var f = document.getElementById("state-frame");
                    var d = f.contentDocument || f.contentWindow.document;
                    d.open();
                    d.write("<script>_hash = '" + s + "'; onload = parent.listener.syncHash;<script>");
                    d.close();
                },
                syncHash: function() {
                    var s = this._hash;
                    if (s != dloc.hash) {
                        dloc.hash = s;
                    }
                    return this;
                },
                onHashChanged: function() {}
            };
            var Router = exports.Router = function(routes) {
                if (!(this instanceof Router)) return new Router(routes);
                this.params = {};
                this.routes = {};
                this.methods = [ "on", "once", "after", "before" ];
                this.scope = [];
                this._methods = {};
                this._insert = this.insert;
                this.insert = this.insertEx;
                this.historySupport = (window.history != null ? window.history.pushState : null) != null;
                this.configure();
                this.mount(routes || {});
            };
            Router.prototype.init = function(r) {
                var self = this, routeTo;
                this.handler = function(onChangeEvent) {
                    var newURL = onChangeEvent && onChangeEvent.newURL || window.location.hash;
                    var url = self.history === true ? self.getPath() : newURL.replace(/.*#/, "");
                    self.dispatch("on", url.charAt(0) === "/" ? url : "/" + url);
                };
                listener.init(this.handler, this.history);
                if (this.history === false) {
                    if (dlocHashEmpty() && r) {
                        dloc.hash = r;
                    } else if (!dlocHashEmpty()) {
                        self.dispatch("on", "/" + dloc.hash.replace(/^(#\/|#|\/)/, ""));
                    }
                } else {
                    if (this.convert_hash_in_init) {
                        routeTo = dlocHashEmpty() && r ? r : !dlocHashEmpty() ? dloc.hash.replace(/^#/, "") : null;
                        if (routeTo) {
                            window.history.replaceState({}, document.title, routeTo);
                        }
                    } else {
                        routeTo = this.getPath();
                    }
                    if (routeTo || this.run_in_init === true) {
                        this.handler();
                    }
                }
                return this;
            };
            Router.prototype.explode = function() {
                var v = this.history === true ? this.getPath() : dloc.hash;
                if (v.charAt(1) === "/") {
                    v = v.slice(1);
                }
                return v.slice(1, v.length).split("/");
            };
            Router.prototype.setRoute = function(i, v, val) {
                var url = this.explode();
                if (typeof i === "number" && typeof v === "string") {
                    url[i] = v;
                } else if (typeof val === "string") {
                    url.splice(i, v, s);
                } else {
                    url = [ i ];
                }
                listener.setHash(url.join("/"));
                return url;
            };
            Router.prototype.insertEx = function(method, path, route, parent) {
                if (method === "once") {
                    method = "on";
                    route = function(route) {
                        var once = false;
                        return function() {
                            if (once) return;
                            once = true;
                            return route.apply(this, arguments);
                        };
                    }(route);
                }
                return this._insert(method, path, route, parent);
            };
            Router.prototype.getRoute = function(v) {
                var ret = v;
                if (typeof v === "number") {
                    ret = this.explode()[v];
                } else if (typeof v === "string") {
                    var h = this.explode();
                    ret = h.indexOf(v);
                } else {
                    ret = this.explode();
                }
                return ret;
            };
            Router.prototype.destroy = function() {
                listener.destroy(this.handler);
                return this;
            };
            Router.prototype.getPath = function() {
                var path = window.location.pathname;
                if (path.substr(0, 1) !== "/") {
                    path = "/" + path;
                }
                return path;
            };
            function _every(arr, iterator) {
                for (var i = 0; i < arr.length; i += 1) {
                    if (iterator(arr[i], i, arr) === false) {
                        return;
                    }
                }
            }
            function _flatten(arr) {
                var flat = [];
                for (var i = 0, n = arr.length; i < n; i++) {
                    flat = flat.concat(arr[i]);
                }
                return flat;
            }
            function _asyncEverySeries(arr, iterator, callback) {
                if (!arr.length) {
                    return callback();
                }
                var completed = 0;
                (function iterate() {
                    iterator(arr[completed], function(err) {
                        if (err || err === false) {
                            callback(err);
                            callback = function() {};
                        } else {
                            completed += 1;
                            if (completed === arr.length) {
                                callback();
                            } else {
                                iterate();
                            }
                        }
                    });
                })();
            }
            function paramifyString(str, params, mod) {
                mod = str;
                for (var param in params) {
                    if (params.hasOwnProperty(param)) {
                        mod = params[param](str);
                        if (mod !== str) {
                            break;
                        }
                    }
                }
                return mod === str ? "([._a-zA-Z0-9-%()]+)" : mod;
            }
            function regifyString(str, params) {
                var matches, last = 0, out = "";
                while (matches = str.substr(last).match(/[^\w\d\- %@&]*\*[^\w\d\- %@&]*/)) {
                    last = matches.index + matches[0].length;
                    matches[0] = matches[0].replace(/^\*/, "([_.()!\\ %@&a-zA-Z0-9-]+)");
                    out += str.substr(0, matches.index) + matches[0];
                }
                str = out += str.substr(last);
                var captures = str.match(/:([^\/]+)/gi), capture, length;
                if (captures) {
                    length = captures.length;
                    for (var i = 0; i < length; i++) {
                        capture = captures[i];
                        if (capture.slice(0, 2) === "::") {
                            str = capture.slice(1);
                        } else {
                            str = str.replace(capture, paramifyString(capture, params));
                        }
                    }
                }
                return str;
            }
            function terminator(routes, delimiter, start, stop) {
                var last = 0, left = 0, right = 0, start = (start || "(").toString(), stop = (stop || ")").toString(), i;
                for (i = 0; i < routes.length; i++) {
                    var chunk = routes[i];
                    if (chunk.indexOf(start, last) > chunk.indexOf(stop, last) || ~chunk.indexOf(start, last) && !~chunk.indexOf(stop, last) || !~chunk.indexOf(start, last) && ~chunk.indexOf(stop, last)) {
                        left = chunk.indexOf(start, last);
                        right = chunk.indexOf(stop, last);
                        if (~left && !~right || !~left && ~right) {
                            var tmp = routes.slice(0, (i || 1) + 1).join(delimiter);
                            routes = [ tmp ].concat(routes.slice((i || 1) + 1));
                        }
                        last = (right > left ? right : left) + 1;
                        i = 0;
                    } else {
                        last = 0;
                    }
                }
                return routes;
            }
            var QUERY_SEPARATOR = /\?.*/;
            Router.prototype.configure = function(options) {
                options = options || {};
                for (var i = 0; i < this.methods.length; i++) {
                    this._methods[this.methods[i]] = true;
                }
                this.recurse = options.recurse || this.recurse || false;
                this.async = options.async || false;
                this.delimiter = options.delimiter || "/";
                this.strict = typeof options.strict === "undefined" ? true : options.strict;
                this.notfound = options.notfound;
                this.resource = options.resource;
                this.history = options.html5history && this.historySupport || false;
                this.run_in_init = this.history === true && options.run_handler_in_init !== false;
                this.convert_hash_in_init = this.history === true && options.convert_hash_in_init !== false;
                this.every = {
                    after: options.after || null,
                    before: options.before || null,
                    on: options.on || null
                };
                return this;
            };
            Router.prototype.param = function(token, matcher) {
                if (token[0] !== ":") {
                    token = ":" + token;
                }
                var compiled = new RegExp(token, "g");
                this.params[token] = function(str) {
                    return str.replace(compiled, matcher.source || matcher);
                };
                return this;
            };
            Router.prototype.on = Router.prototype.route = function(method, path, route) {
                var self = this;
                if (!route && typeof path == "function") {
                    route = path;
                    path = method;
                    method = "on";
                }
                if (Array.isArray(path)) {
                    return path.forEach(function(p) {
                        self.on(method, p, route);
                    });
                }
                if (path.source) {
                    path = path.source.replace(/\\\//gi, "/");
                }
                if (Array.isArray(method)) {
                    return method.forEach(function(m) {
                        self.on(m.toLowerCase(), path, route);
                    });
                }
                path = path.split(new RegExp(this.delimiter));
                path = terminator(path, this.delimiter);
                this.insert(method, this.scope.concat(path), route);
            };
            Router.prototype.path = function(path, routesFn) {
                var self = this, length = this.scope.length;
                if (path.source) {
                    path = path.source.replace(/\\\//gi, "/");
                }
                path = path.split(new RegExp(this.delimiter));
                path = terminator(path, this.delimiter);
                this.scope = this.scope.concat(path);
                routesFn.call(this, this);
                this.scope.splice(length, path.length);
            };
            Router.prototype.dispatch = function(method, path, callback) {
                var self = this, fns = this.traverse(method, path.replace(QUERY_SEPARATOR, ""), this.routes, ""), invoked = this._invoked, after;
                this._invoked = true;
                if (!fns || fns.length === 0) {
                    this.last = [];
                    if (typeof this.notfound === "function") {
                        this.invoke([ this.notfound ], {
                            method: method,
                            path: path
                        }, callback);
                    }
                    return false;
                }
                if (this.recurse === "forward") {
                    fns = fns.reverse();
                }
                function updateAndInvoke() {
                    self.last = fns.after;
                    self.invoke(self.runlist(fns), self, callback);
                }
                after = this.every && this.every.after ? [ this.every.after ].concat(this.last) : [ this.last ];
                if (after && after.length > 0 && invoked) {
                    if (this.async) {
                        this.invoke(after, this, updateAndInvoke);
                    } else {
                        this.invoke(after, this);
                        updateAndInvoke();
                    }
                    return true;
                }
                updateAndInvoke();
                return true;
            };
            Router.prototype.invoke = function(fns, thisArg, callback) {
                var self = this;
                var apply;
                if (this.async) {
                    apply = function(fn, next) {
                        if (Array.isArray(fn)) {
                            return _asyncEverySeries(fn, apply, next);
                        } else if (typeof fn == "function") {
                            fn.apply(thisArg, (fns.captures || []).concat(next));
                        }
                    };
                    _asyncEverySeries(fns, apply, function() {
                        if (callback) {
                            callback.apply(thisArg, arguments);
                        }
                    });
                } else {
                    apply = function(fn) {
                        if (Array.isArray(fn)) {
                            return _every(fn, apply);
                        } else if (typeof fn === "function") {
                            return fn.apply(thisArg, fns.captures || []);
                        } else if (typeof fn === "string" && self.resource) {
                            self.resource[fn].apply(thisArg, fns.captures || []);
                        }
                    };
                    _every(fns, apply);
                }
            };
            Router.prototype.traverse = function(method, path, routes, regexp, filter) {
                var fns = [], current, exact, match, next, that;
                function filterRoutes(routes) {
                    if (!filter) {
                        return routes;
                    }
                    function deepCopy(source) {
                        var result = [];
                        for (var i = 0; i < source.length; i++) {
                            result[i] = Array.isArray(source[i]) ? deepCopy(source[i]) : source[i];
                        }
                        return result;
                    }
                    function applyFilter(fns) {
                        for (var i = fns.length - 1; i >= 0; i--) {
                            if (Array.isArray(fns[i])) {
                                applyFilter(fns[i]);
                                if (fns[i].length === 0) {
                                    fns.splice(i, 1);
                                }
                            } else {
                                if (!filter(fns[i])) {
                                    fns.splice(i, 1);
                                }
                            }
                        }
                    }
                    var newRoutes = deepCopy(routes);
                    newRoutes.matched = routes.matched;
                    newRoutes.captures = routes.captures;
                    newRoutes.after = routes.after.filter(filter);
                    applyFilter(newRoutes);
                    return newRoutes;
                }
                if (path === this.delimiter && routes[method]) {
                    next = [ [ routes.before, routes[method] ].filter(Boolean) ];
                    next.after = [ routes.after ].filter(Boolean);
                    next.matched = true;
                    next.captures = [];
                    return filterRoutes(next);
                }
                for (var r in routes) {
                    if (routes.hasOwnProperty(r) && (!this._methods[r] || this._methods[r] && typeof routes[r] === "object" && !Array.isArray(routes[r]))) {
                        current = exact = regexp + this.delimiter + r;
                        if (!this.strict) {
                            exact += "[" + this.delimiter + "]?";
                        }
                        match = path.match(new RegExp("^" + exact));
                        if (!match) {
                            continue;
                        }
                        if (match[0] && match[0] == path && routes[r][method]) {
                            next = [ [ routes[r].before, routes[r][method] ].filter(Boolean) ];
                            next.after = [ routes[r].after ].filter(Boolean);
                            next.matched = true;
                            next.captures = match.slice(1);
                            if (this.recurse && routes === this.routes) {
                                next.push([ routes.before, routes.on ].filter(Boolean));
                                next.after = next.after.concat([ routes.after ].filter(Boolean));
                            }
                            return filterRoutes(next);
                        }
                        next = this.traverse(method, path, routes[r], current);
                        if (next.matched) {
                            if (next.length > 0) {
                                fns = fns.concat(next);
                            }
                            if (this.recurse) {
                                fns.push([ routes[r].before, routes[r].on ].filter(Boolean));
                                next.after = next.after.concat([ routes[r].after ].filter(Boolean));
                                if (routes === this.routes) {
                                    fns.push([ routes["before"], routes["on"] ].filter(Boolean));
                                    next.after = next.after.concat([ routes["after"] ].filter(Boolean));
                                }
                            }
                            fns.matched = true;
                            fns.captures = next.captures;
                            fns.after = next.after;
                            return filterRoutes(fns);
                        }
                    }
                }
                return false;
            };
            Router.prototype.insert = function(method, path, route, parent) {
                var methodType, parentType, isArray, nested, part;
                path = path.filter(function(p) {
                    return p && p.length > 0;
                });
                parent = parent || this.routes;
                part = path.shift();
                if (/\:|\*/.test(part) && !/\\d|\\w/.test(part)) {
                    part = regifyString(part, this.params);
                }
                if (path.length > 0) {
                    parent[part] = parent[part] || {};
                    return this.insert(method, path, route, parent[part]);
                }
                if (!part && !path.length && parent === this.routes) {
                    methodType = typeof parent[method];
                    switch (methodType) {
                      case "function":
                        parent[method] = [ parent[method], route ];
                        return;

                      case "object":
                        parent[method].push(route);
                        return;

                      case "undefined":
                        parent[method] = route;
                        return;
                    }
                    return;
                }
                parentType = typeof parent[part];
                isArray = Array.isArray(parent[part]);
                if (parent[part] && !isArray && parentType == "object") {
                    methodType = typeof parent[part][method];
                    switch (methodType) {
                      case "function":
                        parent[part][method] = [ parent[part][method], route ];
                        return;

                      case "object":
                        parent[part][method].push(route);
                        return;

                      case "undefined":
                        parent[part][method] = route;
                        return;
                    }
                } else if (parentType == "undefined") {
                    nested = {};
                    nested[method] = route;
                    parent[part] = nested;
                    return;
                }
                throw new Error("Invalid route context: " + parentType);
            };
            Router.prototype.extend = function(methods) {
                var self = this, len = methods.length, i;
                function extend(method) {
                    self._methods[method] = true;
                    self[method] = function() {
                        var extra = arguments.length === 1 ? [ method, "" ] : [ method ];
                        self.on.apply(self, extra.concat(Array.prototype.slice.call(arguments)));
                    };
                }
                for (i = 0; i < len; i++) {
                    extend(methods[i]);
                }
            };
            Router.prototype.runlist = function(fns) {
                var runlist = this.every && this.every.before ? [ this.every.before ].concat(_flatten(fns)) : _flatten(fns);
                if (this.every && this.every.on) {
                    runlist.push(this.every.on);
                }
                runlist.captures = fns.captures;
                runlist.source = fns.source;
                return runlist;
            };
            Router.prototype.mount = function(routes, path) {
                if (!routes || typeof routes !== "object" || Array.isArray(routes)) {
                    return;
                }
                var self = this;
                path = path || [];
                if (!Array.isArray(path)) {
                    path = path.split(self.delimiter);
                }
                function insertOrMount(route, local) {
                    var rename = route, parts = route.split(self.delimiter), routeType = typeof routes[route], isRoute = parts[0] === "" || !self._methods[parts[0]], event = isRoute ? "on" : rename;
                    if (isRoute) {
                        rename = rename.slice((rename.match(new RegExp("^" + self.delimiter)) || [ "" ])[0].length);
                        parts.shift();
                    }
                    if (isRoute && routeType === "object" && !Array.isArray(routes[route])) {
                        local = local.concat(parts);
                        self.mount(routes[route], local);
                        return;
                    }
                    if (isRoute) {
                        local = local.concat(rename.split(self.delimiter));
                        local = terminator(local, self.delimiter);
                    }
                    self.insert(event, local, routes[route]);
                }
                for (var route in routes) {
                    if (routes.hasOwnProperty(route)) {
                        insertOrMount(route, path.slice(0));
                    }
                }
            };
        })(typeof exports === "object" ? exports : window);
    }, {} ],
    7: [ function(require, module, exports) {
        !function(undefined) {
            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {
                return Object.prototype.toString.call(obj) === "[object Array]";
            };
            var defaultMaxListeners = 10;
            function init() {
                this._events = {};
                if (this._conf) {
                    configure.call(this, this._conf);
                }
            }
            function configure(conf) {
                if (conf) {
                    this._conf = conf;
                    conf.delimiter && (this.delimiter = conf.delimiter);
                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);
                    conf.wildcard && (this.wildcard = conf.wildcard);
                    conf.newListener && (this.newListener = conf.newListener);
                    if (this.wildcard) {
                        this.listenerTree = {};
                    }
                }
            }
            function EventEmitter(conf) {
                this._events = {};
                this.newListener = false;
                configure.call(this, conf);
            }
            function searchListenerTree(handlers, type, tree, i) {
                if (!tree) {
                    return [];
                }
                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];
                if (i === typeLength && tree._listeners) {
                    if (typeof tree._listeners === "function") {
                        handlers && handlers.push(tree._listeners);
                        return [ tree ];
                    } else {
                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {
                            handlers && handlers.push(tree._listeners[leaf]);
                        }
                        return [ tree ];
                    }
                }
                if (currentType === "*" || currentType === "**" || tree[currentType]) {
                    if (currentType === "*") {
                        for (branch in tree) {
                            if (branch !== "_listeners" && tree.hasOwnProperty(branch)) {
                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));
                            }
                        }
                        return listeners;
                    } else if (currentType === "**") {
                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === "*";
                        if (endReached && tree._listeners) {
                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));
                        }
                        for (branch in tree) {
                            if (branch !== "_listeners" && tree.hasOwnProperty(branch)) {
                                if (branch === "*" || branch === "**") {
                                    if (tree[branch]._listeners && !endReached) {
                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));
                                    }
                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));
                                } else if (branch === nextType) {
                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));
                                } else {
                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));
                                }
                            }
                        }
                        return listeners;
                    }
                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));
                }
                xTree = tree["*"];
                if (xTree) {
                    searchListenerTree(handlers, type, xTree, i + 1);
                }
                xxTree = tree["**"];
                if (xxTree) {
                    if (i < typeLength) {
                        if (xxTree._listeners) {
                            searchListenerTree(handlers, type, xxTree, typeLength);
                        }
                        for (branch in xxTree) {
                            if (branch !== "_listeners" && xxTree.hasOwnProperty(branch)) {
                                if (branch === nextType) {
                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);
                                } else if (branch === currentType) {
                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);
                                } else {
                                    isolatedBranch = {};
                                    isolatedBranch[branch] = xxTree[branch];
                                    searchListenerTree(handlers, type, {
                                        "**": isolatedBranch
                                    }, i + 1);
                                }
                            }
                        }
                    } else if (xxTree._listeners) {
                        searchListenerTree(handlers, type, xxTree, typeLength);
                    } else if (xxTree["*"] && xxTree["*"]._listeners) {
                        searchListenerTree(handlers, type, xxTree["*"], typeLength);
                    }
                }
                return listeners;
            }
            function growListenerTree(type, listener) {
                type = typeof type === "string" ? type.split(this.delimiter) : type.slice();
                for (var i = 0, len = type.length; i + 1 < len; i++) {
                    if (type[i] === "**" && type[i + 1] === "**") {
                        return;
                    }
                }
                var tree = this.listenerTree;
                var name = type.shift();
                while (name) {
                    if (!tree[name]) {
                        tree[name] = {};
                    }
                    tree = tree[name];
                    if (type.length === 0) {
                        if (!tree._listeners) {
                            tree._listeners = listener;
                        } else if (typeof tree._listeners === "function") {
                            tree._listeners = [ tree._listeners, listener ];
                        } else if (isArray(tree._listeners)) {
                            tree._listeners.push(listener);
                            if (!tree._listeners.warned) {
                                var m = defaultMaxListeners;
                                if (typeof this._events.maxListeners !== "undefined") {
                                    m = this._events.maxListeners;
                                }
                                if (m > 0 && tree._listeners.length > m) {
                                    tree._listeners.warned = true;
                                    console.error("(node) warning: possible EventEmitter memory " + "leak detected. %d listeners added. " + "Use emitter.setMaxListeners() to increase limit.", tree._listeners.length);
                                    console.trace();
                                }
                            }
                        }
                        return true;
                    }
                    name = type.shift();
                }
                return true;
            }
            EventEmitter.prototype.delimiter = ".";
            EventEmitter.prototype.setMaxListeners = function(n) {
                this._events || init.call(this);
                this._events.maxListeners = n;
                if (!this._conf) this._conf = {};
                this._conf.maxListeners = n;
            };
            EventEmitter.prototype.event = "";
            EventEmitter.prototype.once = function(event, fn) {
                this.many(event, 1, fn);
                return this;
            };
            EventEmitter.prototype.many = function(event, ttl, fn) {
                var self = this;
                if (typeof fn !== "function") {
                    throw new Error("many only accepts instances of Function");
                }
                function listener() {
                    if (--ttl === 0) {
                        self.off(event, listener);
                    }
                    fn.apply(this, arguments);
                }
                listener._origin = fn;
                this.on(event, listener);
                return self;
            };
            EventEmitter.prototype.emit = function() {
                this._events || init.call(this);
                var type = arguments[0];
                if (type === "newListener" && !this.newListener) {
                    if (!this._events.newListener) {
                        return false;
                    }
                }
                if (this._all) {
                    var l = arguments.length;
                    var args = new Array(l - 1);
                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];
                    for (i = 0, l = this._all.length; i < l; i++) {
                        this.event = type;
                        this._all[i].apply(this, args);
                    }
                }
                if (type === "error") {
                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {
                        if (arguments[1] instanceof Error) {
                            throw arguments[1];
                        } else {
                            throw new Error("Uncaught, unspecified 'error' event.");
                        }
                        return false;
                    }
                }
                var handler;
                if (this.wildcard) {
                    handler = [];
                    var ns = typeof type === "string" ? type.split(this.delimiter) : type.slice();
                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);
                } else {
                    handler = this._events[type];
                }
                if (typeof handler === "function") {
                    this.event = type;
                    if (arguments.length === 1) {
                        handler.call(this);
                    } else if (arguments.length > 1) switch (arguments.length) {
                      case 2:
                        handler.call(this, arguments[1]);
                        break;

                      case 3:
                        handler.call(this, arguments[1], arguments[2]);
                        break;

                      default:
                        var l = arguments.length;
                        var args = new Array(l - 1);
                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];
                        handler.apply(this, args);
                    }
                    return true;
                } else if (handler) {
                    var l = arguments.length;
                    var args = new Array(l - 1);
                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];
                    var listeners = handler.slice();
                    for (var i = 0, l = listeners.length; i < l; i++) {
                        this.event = type;
                        listeners[i].apply(this, args);
                    }
                    return listeners.length > 0 || !!this._all;
                } else {
                    return !!this._all;
                }
            };
            EventEmitter.prototype.on = function(type, listener) {
                if (typeof type === "function") {
                    this.onAny(type);
                    return this;
                }
                if (typeof listener !== "function") {
                    throw new Error("on only accepts instances of Function");
                }
                this._events || init.call(this);
                this.emit("newListener", type, listener);
                if (this.wildcard) {
                    growListenerTree.call(this, type, listener);
                    return this;
                }
                if (!this._events[type]) {
                    this._events[type] = listener;
                } else if (typeof this._events[type] === "function") {
                    this._events[type] = [ this._events[type], listener ];
                } else if (isArray(this._events[type])) {
                    this._events[type].push(listener);
                    if (!this._events[type].warned) {
                        var m = defaultMaxListeners;
                        if (typeof this._events.maxListeners !== "undefined") {
                            m = this._events.maxListeners;
                        }
                        if (m > 0 && this._events[type].length > m) {
                            this._events[type].warned = true;
                            console.error("(node) warning: possible EventEmitter memory " + "leak detected. %d listeners added. " + "Use emitter.setMaxListeners() to increase limit.", this._events[type].length);
                            console.trace();
                        }
                    }
                }
                return this;
            };
            EventEmitter.prototype.onAny = function(fn) {
                if (typeof fn !== "function") {
                    throw new Error("onAny only accepts instances of Function");
                }
                if (!this._all) {
                    this._all = [];
                }
                this._all.push(fn);
                return this;
            };
            EventEmitter.prototype.addListener = EventEmitter.prototype.on;
            EventEmitter.prototype.off = function(type, listener) {
                if (typeof listener !== "function") {
                    throw new Error("removeListener only takes instances of Function");
                }
                var handlers, leafs = [];
                if (this.wildcard) {
                    var ns = typeof type === "string" ? type.split(this.delimiter) : type.slice();
                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);
                } else {
                    if (!this._events[type]) return this;
                    handlers = this._events[type];
                    leafs.push({
                        _listeners: handlers
                    });
                }
                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {
                    var leaf = leafs[iLeaf];
                    handlers = leaf._listeners;
                    if (isArray(handlers)) {
                        var position = -1;
                        for (var i = 0, length = handlers.length; i < length; i++) {
                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {
                                position = i;
                                break;
                            }
                        }
                        if (position < 0) {
                            continue;
                        }
                        if (this.wildcard) {
                            leaf._listeners.splice(position, 1);
                        } else {
                            this._events[type].splice(position, 1);
                        }
                        if (handlers.length === 0) {
                            if (this.wildcard) {
                                delete leaf._listeners;
                            } else {
                                delete this._events[type];
                            }
                        }
                        return this;
                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {
                        if (this.wildcard) {
                            delete leaf._listeners;
                        } else {
                            delete this._events[type];
                        }
                    }
                }
                return this;
            };
            EventEmitter.prototype.offAny = function(fn) {
                var i = 0, l = 0, fns;
                if (fn && this._all && this._all.length > 0) {
                    fns = this._all;
                    for (i = 0, l = fns.length; i < l; i++) {
                        if (fn === fns[i]) {
                            fns.splice(i, 1);
                            return this;
                        }
                    }
                } else {
                    this._all = [];
                }
                return this;
            };
            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;
            EventEmitter.prototype.removeAllListeners = function(type) {
                if (arguments.length === 0) {
                    !this._events || init.call(this);
                    return this;
                }
                if (this.wildcard) {
                    var ns = typeof type === "string" ? type.split(this.delimiter) : type.slice();
                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);
                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {
                        var leaf = leafs[iLeaf];
                        leaf._listeners = null;
                    }
                } else {
                    if (!this._events[type]) return this;
                    this._events[type] = null;
                }
                return this;
            };
            EventEmitter.prototype.listeners = function(type) {
                if (this.wildcard) {
                    var handlers = [];
                    var ns = typeof type === "string" ? type.split(this.delimiter) : type.slice();
                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);
                    return handlers;
                }
                this._events || init.call(this);
                if (!this._events[type]) this._events[type] = [];
                if (!isArray(this._events[type])) {
                    this._events[type] = [ this._events[type] ];
                }
                return this._events[type];
            };
            EventEmitter.prototype.listenersAny = function() {
                if (this._all) {
                    return this._all;
                } else {
                    return [];
                }
            };
            if (typeof define === "function" && define.amd) {
                define(function() {
                    return EventEmitter;
                });
            } else if (typeof exports === "object") {
                exports.EventEmitter2 = EventEmitter;
            } else {
                window.EventEmitter2 = EventEmitter;
            }
        }();
    }, {} ],
    8: [ function(require, module, exports) {
        var util = require("util/");
        var pSlice = Array.prototype.slice;
        var hasOwn = Object.prototype.hasOwnProperty;
        var assert = module.exports = ok;
        assert.AssertionError = function AssertionError(options) {
            this.name = "AssertionError";
            this.actual = options.actual;
            this.expected = options.expected;
            this.operator = options.operator;
            if (options.message) {
                this.message = options.message;
                this.generatedMessage = false;
            } else {
                this.message = getMessage(this);
                this.generatedMessage = true;
            }
            var stackStartFunction = options.stackStartFunction || fail;
            if (Error.captureStackTrace) {
                Error.captureStackTrace(this, stackStartFunction);
            } else {
                var err = new Error();
                if (err.stack) {
                    var out = err.stack;
                    var fn_name = stackStartFunction.name;
                    var idx = out.indexOf("\n" + fn_name);
                    if (idx >= 0) {
                        var next_line = out.indexOf("\n", idx + 1);
                        out = out.substring(next_line + 1);
                    }
                    this.stack = out;
                }
            }
        };
        util.inherits(assert.AssertionError, Error);
        function replacer(key, value) {
            if (util.isUndefined(value)) {
                return "" + value;
            }
            if (util.isNumber(value) && !isFinite(value)) {
                return value.toString();
            }
            if (util.isFunction(value) || util.isRegExp(value)) {
                return value.toString();
            }
            return value;
        }
        function truncate(s, n) {
            if (util.isString(s)) {
                return s.length < n ? s : s.slice(0, n);
            } else {
                return s;
            }
        }
        function getMessage(self) {
            return truncate(JSON.stringify(self.actual, replacer), 128) + " " + self.operator + " " + truncate(JSON.stringify(self.expected, replacer), 128);
        }
        function fail(actual, expected, message, operator, stackStartFunction) {
            throw new assert.AssertionError({
                message: message,
                actual: actual,
                expected: expected,
                operator: operator,
                stackStartFunction: stackStartFunction
            });
        }
        assert.fail = fail;
        function ok(value, message) {
            if (!value) fail(value, true, message, "==", assert.ok);
        }
        assert.ok = ok;
        assert.equal = function equal(actual, expected, message) {
            if (actual != expected) fail(actual, expected, message, "==", assert.equal);
        };
        assert.notEqual = function notEqual(actual, expected, message) {
            if (actual == expected) {
                fail(actual, expected, message, "!=", assert.notEqual);
            }
        };
        assert.deepEqual = function deepEqual(actual, expected, message) {
            if (!_deepEqual(actual, expected)) {
                fail(actual, expected, message, "deepEqual", assert.deepEqual);
            }
        };
        function _deepEqual(actual, expected) {
            if (actual === expected) {
                return true;
            } else if (util.isBuffer(actual) && util.isBuffer(expected)) {
                if (actual.length != expected.length) return false;
                for (var i = 0; i < actual.length; i++) {
                    if (actual[i] !== expected[i]) return false;
                }
                return true;
            } else if (util.isDate(actual) && util.isDate(expected)) {
                return actual.getTime() === expected.getTime();
            } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
                return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase;
            } else if (!util.isObject(actual) && !util.isObject(expected)) {
                return actual == expected;
            } else {
                return objEquiv(actual, expected);
            }
        }
        function isArguments(object) {
            return Object.prototype.toString.call(object) == "[object Arguments]";
        }
        function objEquiv(a, b) {
            if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b)) return false;
            if (a.prototype !== b.prototype) return false;
            if (util.isPrimitive(a) || util.isPrimitive(b)) {
                return a === b;
            }
            var aIsArgs = isArguments(a), bIsArgs = isArguments(b);
            if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;
            if (aIsArgs) {
                a = pSlice.call(a);
                b = pSlice.call(b);
                return _deepEqual(a, b);
            }
            var ka = objectKeys(a), kb = objectKeys(b), key, i;
            if (ka.length != kb.length) return false;
            ka.sort();
            kb.sort();
            for (i = ka.length - 1; i >= 0; i--) {
                if (ka[i] != kb[i]) return false;
            }
            for (i = ka.length - 1; i >= 0; i--) {
                key = ka[i];
                if (!_deepEqual(a[key], b[key])) return false;
            }
            return true;
        }
        assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
            if (_deepEqual(actual, expected)) {
                fail(actual, expected, message, "notDeepEqual", assert.notDeepEqual);
            }
        };
        assert.strictEqual = function strictEqual(actual, expected, message) {
            if (actual !== expected) {
                fail(actual, expected, message, "===", assert.strictEqual);
            }
        };
        assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
            if (actual === expected) {
                fail(actual, expected, message, "!==", assert.notStrictEqual);
            }
        };
        function expectedException(actual, expected) {
            if (!actual || !expected) {
                return false;
            }
            if (Object.prototype.toString.call(expected) == "[object RegExp]") {
                return expected.test(actual);
            } else if (actual instanceof expected) {
                return true;
            } else if (expected.call({}, actual) === true) {
                return true;
            }
            return false;
        }
        function _throws(shouldThrow, block, expected, message) {
            var actual;
            if (util.isString(expected)) {
                message = expected;
                expected = null;
            }
            try {
                block();
            } catch (e) {
                actual = e;
            }
            message = (expected && expected.name ? " (" + expected.name + ")." : ".") + (message ? " " + message : ".");
            if (shouldThrow && !actual) {
                fail(actual, expected, "Missing expected exception" + message);
            }
            if (!shouldThrow && expectedException(actual, expected)) {
                fail(actual, expected, "Got unwanted exception" + message);
            }
            if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {
                throw actual;
            }
        }
        assert.throws = function(block, error, message) {
            _throws.apply(this, [ true ].concat(pSlice.call(arguments)));
        };
        assert.doesNotThrow = function(block, message) {
            _throws.apply(this, [ false ].concat(pSlice.call(arguments)));
        };
        assert.ifError = function(err) {
            if (err) {
                throw err;
            }
        };
        var objectKeys = Object.keys || function(obj) {
            var keys = [];
            for (var key in obj) {
                if (hasOwn.call(obj, key)) keys.push(key);
            }
            return keys;
        };
    }, {
        "util/": 15
    } ],
    9: [ function(require, module, exports) {}, {} ],
    10: [ function(require, module, exports) {
        (function(global) {
            var util = require("util");
            var assert = require("assert");
            var now = require("date-now");
            var slice = Array.prototype.slice;
            var console;
            var times = {};
            if (typeof global !== "undefined" && global.console) {
                console = global.console;
            } else if (typeof window !== "undefined" && window.console) {
                console = window.console;
            } else {
                console = {};
            }
            var functions = [ [ log, "log" ], [ info, "info" ], [ warn, "warn" ], [ error, "error" ], [ time, "time" ], [ timeEnd, "timeEnd" ], [ trace, "trace" ], [ dir, "dir" ], [ consoleAssert, "assert" ] ];
            for (var i = 0; i < functions.length; i++) {
                var tuple = functions[i];
                var f = tuple[0];
                var name = tuple[1];
                if (!console[name]) {
                    console[name] = f;
                }
            }
            module.exports = console;
            function log() {}
            function info() {
                console.log.apply(console, arguments);
            }
            function warn() {
                console.log.apply(console, arguments);
            }
            function error() {
                console.warn.apply(console, arguments);
            }
            function time(label) {
                times[label] = now();
            }
            function timeEnd(label) {
                var time = times[label];
                if (!time) {
                    throw new Error("No such label: " + label);
                }
                var duration = now() - time;
                console.log(label + ": " + duration + "ms");
            }
            function trace() {
                var err = new Error();
                err.name = "Trace";
                err.message = util.format.apply(null, arguments);
                console.error(err.stack);
            }
            function dir(object) {
                console.log(util.inspect(object) + "\n");
            }
            function consoleAssert(expression) {
                if (!expression) {
                    var arr = slice.call(arguments, 1);
                    assert.ok(false, util.format.apply(null, arr));
                }
            }
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {
        assert: 8,
        "date-now": 11,
        util: 15
    } ],
    11: [ function(require, module, exports) {
        module.exports = now;
        function now() {
            return new Date().getTime();
        }
    }, {} ],
    12: [ function(require, module, exports) {
        if (typeof Object.create === "function") {
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor;
                ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                        value: ctor,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
            };
        } else {
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor;
                var TempCtor = function() {};
                TempCtor.prototype = superCtor.prototype;
                ctor.prototype = new TempCtor();
                ctor.prototype.constructor = ctor;
            };
        }
    }, {} ],
    13: [ function(require, module, exports) {
        var process = module.exports = {};
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;
        function cleanUpNextTick() {
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }
        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = setTimeout(cleanUpNextTick);
            draining = true;
            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            clearTimeout(timeout);
        }
        process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                setTimeout(drainQueue, 0);
            }
        };
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }
        Item.prototype.run = function() {
            this.fun.apply(null, this.array);
        };
        process.title = "browser";
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = "";
        process.versions = {};
        function noop() {}
        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.binding = function(name) {
            throw new Error("process.binding is not supported");
        };
        process.cwd = function() {
            return "/";
        };
        process.chdir = function(dir) {
            throw new Error("process.chdir is not supported");
        };
        process.umask = function() {
            return 0;
        };
    }, {} ],
    14: [ function(require, module, exports) {
        module.exports = function isBuffer(arg) {
            return arg && typeof arg === "object" && typeof arg.copy === "function" && typeof arg.fill === "function" && typeof arg.readUInt8 === "function";
        };
    }, {} ],
    15: [ function(require, module, exports) {
        (function(process, global) {
            var formatRegExp = /%[sdj%]/g;
            exports.format = function(f) {
                if (!isString(f)) {
                    var objects = [];
                    for (var i = 0; i < arguments.length; i++) {
                        objects.push(inspect(arguments[i]));
                    }
                    return objects.join(" ");
                }
                var i = 1;
                var args = arguments;
                var len = args.length;
                var str = String(f).replace(formatRegExp, function(x) {
                    if (x === "%%") return "%";
                    if (i >= len) return x;
                    switch (x) {
                      case "%s":
                        return String(args[i++]);

                      case "%d":
                        return Number(args[i++]);

                      case "%j":
                        try {
                            return JSON.stringify(args[i++]);
                        } catch (_) {
                            return "[Circular]";
                        }

                      default:
                        return x;
                    }
                });
                for (var x = args[i]; i < len; x = args[++i]) {
                    if (isNull(x) || !isObject(x)) {
                        str += " " + x;
                    } else {
                        str += " " + inspect(x);
                    }
                }
                return str;
            };
            exports.deprecate = function(fn, msg) {
                if (isUndefined(global.process)) {
                    return function() {
                        return exports.deprecate(fn, msg).apply(this, arguments);
                    };
                }
                if (process.noDeprecation === true) {
                    return fn;
                }
                var warned = false;
                function deprecated() {
                    if (!warned) {
                        if (process.throwDeprecation) {
                            throw new Error(msg);
                        } else if (process.traceDeprecation) {
                            console.trace(msg);
                        } else {
                            console.error(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }
                return deprecated;
            };
            var debugs = {};
            var debugEnviron;
            exports.debuglog = function(set) {
                if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || "";
                set = set.toUpperCase();
                if (!debugs[set]) {
                    if (new RegExp("\\b" + set + "\\b", "i").test(debugEnviron)) {
                        var pid = process.pid;
                        debugs[set] = function() {
                            var msg = exports.format.apply(exports, arguments);
                            console.error("%s %d: %s", set, pid, msg);
                        };
                    } else {
                        debugs[set] = function() {};
                    }
                }
                return debugs[set];
            };
            function inspect(obj, opts) {
                var ctx = {
                    seen: [],
                    stylize: stylizeNoColor
                };
                if (arguments.length >= 3) ctx.depth = arguments[2];
                if (arguments.length >= 4) ctx.colors = arguments[3];
                if (isBoolean(opts)) {
                    ctx.showHidden = opts;
                } else if (opts) {
                    exports._extend(ctx, opts);
                }
                if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
                if (isUndefined(ctx.depth)) ctx.depth = 2;
                if (isUndefined(ctx.colors)) ctx.colors = false;
                if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
                if (ctx.colors) ctx.stylize = stylizeWithColor;
                return formatValue(ctx, obj, ctx.depth);
            }
            exports.inspect = inspect;
            inspect.colors = {
                bold: [ 1, 22 ],
                italic: [ 3, 23 ],
                underline: [ 4, 24 ],
                inverse: [ 7, 27 ],
                white: [ 37, 39 ],
                grey: [ 90, 39 ],
                black: [ 30, 39 ],
                blue: [ 34, 39 ],
                cyan: [ 36, 39 ],
                green: [ 32, 39 ],
                magenta: [ 35, 39 ],
                red: [ 31, 39 ],
                yellow: [ 33, 39 ]
            };
            inspect.styles = {
                special: "cyan",
                number: "yellow",
                "boolean": "yellow",
                undefined: "grey",
                "null": "bold",
                string: "green",
                date: "magenta",
                regexp: "red"
            };
            function stylizeWithColor(str, styleType) {
                var style = inspect.styles[styleType];
                if (style) {
                    return "[" + inspect.colors[style][0] + "m" + str + "[" + inspect.colors[style][1] + "m";
                } else {
                    return str;
                }
            }
            function stylizeNoColor(str, styleType) {
                return str;
            }
            function arrayToHash(array) {
                var hash = {};
                array.forEach(function(val, idx) {
                    hash[val] = true;
                });
                return hash;
            }
            function formatValue(ctx, value, recurseTimes) {
                if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {
                    var ret = value.inspect(recurseTimes, ctx);
                    if (!isString(ret)) {
                        ret = formatValue(ctx, ret, recurseTimes);
                    }
                    return ret;
                }
                var primitive = formatPrimitive(ctx, value);
                if (primitive) {
                    return primitive;
                }
                var keys = Object.keys(value);
                var visibleKeys = arrayToHash(keys);
                if (ctx.showHidden) {
                    keys = Object.getOwnPropertyNames(value);
                }
                if (isError(value) && (keys.indexOf("message") >= 0 || keys.indexOf("description") >= 0)) {
                    return formatError(value);
                }
                if (keys.length === 0) {
                    if (isFunction(value)) {
                        var name = value.name ? ": " + value.name : "";
                        return ctx.stylize("[Function" + name + "]", "special");
                    }
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                    }
                    if (isDate(value)) {
                        return ctx.stylize(Date.prototype.toString.call(value), "date");
                    }
                    if (isError(value)) {
                        return formatError(value);
                    }
                }
                var base = "", array = false, braces = [ "{", "}" ];
                if (isArray(value)) {
                    array = true;
                    braces = [ "[", "]" ];
                }
                if (isFunction(value)) {
                    var n = value.name ? ": " + value.name : "";
                    base = " [Function" + n + "]";
                }
                if (isRegExp(value)) {
                    base = " " + RegExp.prototype.toString.call(value);
                }
                if (isDate(value)) {
                    base = " " + Date.prototype.toUTCString.call(value);
                }
                if (isError(value)) {
                    base = " " + formatError(value);
                }
                if (keys.length === 0 && (!array || value.length == 0)) {
                    return braces[0] + base + braces[1];
                }
                if (recurseTimes < 0) {
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                    } else {
                        return ctx.stylize("[Object]", "special");
                    }
                }
                ctx.seen.push(value);
                var output;
                if (array) {
                    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
                } else {
                    output = keys.map(function(key) {
                        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
                    });
                }
                ctx.seen.pop();
                return reduceToSingleString(output, base, braces);
            }
            function formatPrimitive(ctx, value) {
                if (isUndefined(value)) return ctx.stylize("undefined", "undefined");
                if (isString(value)) {
                    var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return ctx.stylize(simple, "string");
                }
                if (isNumber(value)) return ctx.stylize("" + value, "number");
                if (isBoolean(value)) return ctx.stylize("" + value, "boolean");
                if (isNull(value)) return ctx.stylize("null", "null");
            }
            function formatError(value) {
                return "[" + Error.prototype.toString.call(value) + "]";
            }
            function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
                var output = [];
                for (var i = 0, l = value.length; i < l; ++i) {
                    if (hasOwnProperty(value, String(i))) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
                    } else {
                        output.push("");
                    }
                }
                keys.forEach(function(key) {
                    if (!key.match(/^\d+$/)) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
                    }
                });
                return output;
            }
            function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
                var name, str, desc;
                desc = Object.getOwnPropertyDescriptor(value, key) || {
                    value: value[key]
                };
                if (desc.get) {
                    if (desc.set) {
                        str = ctx.stylize("[Getter/Setter]", "special");
                    } else {
                        str = ctx.stylize("[Getter]", "special");
                    }
                } else {
                    if (desc.set) {
                        str = ctx.stylize("[Setter]", "special");
                    }
                }
                if (!hasOwnProperty(visibleKeys, key)) {
                    name = "[" + key + "]";
                }
                if (!str) {
                    if (ctx.seen.indexOf(desc.value) < 0) {
                        if (isNull(recurseTimes)) {
                            str = formatValue(ctx, desc.value, null);
                        } else {
                            str = formatValue(ctx, desc.value, recurseTimes - 1);
                        }
                        if (str.indexOf("\n") > -1) {
                            if (array) {
                                str = str.split("\n").map(function(line) {
                                    return "  " + line;
                                }).join("\n").substr(2);
                            } else {
                                str = "\n" + str.split("\n").map(function(line) {
                                    return "   " + line;
                                }).join("\n");
                            }
                        }
                    } else {
                        str = ctx.stylize("[Circular]", "special");
                    }
                }
                if (isUndefined(name)) {
                    if (array && key.match(/^\d+$/)) {
                        return str;
                    }
                    name = JSON.stringify("" + key);
                    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                        name = name.substr(1, name.length - 2);
                        name = ctx.stylize(name, "name");
                    } else {
                        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
                        name = ctx.stylize(name, "string");
                    }
                }
                return name + ": " + str;
            }
            function reduceToSingleString(output, base, braces) {
                var numLinesEst = 0;
                var length = output.reduce(function(prev, cur) {
                    numLinesEst++;
                    if (cur.indexOf("\n") >= 0) numLinesEst++;
                    return prev + cur.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                if (length > 60) {
                    return braces[0] + (base === "" ? "" : base + "\n ") + " " + output.join(",\n  ") + " " + braces[1];
                }
                return braces[0] + base + " " + output.join(", ") + " " + braces[1];
            }
            function isArray(ar) {
                return Array.isArray(ar);
            }
            exports.isArray = isArray;
            function isBoolean(arg) {
                return typeof arg === "boolean";
            }
            exports.isBoolean = isBoolean;
            function isNull(arg) {
                return arg === null;
            }
            exports.isNull = isNull;
            function isNullOrUndefined(arg) {
                return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;
            function isNumber(arg) {
                return typeof arg === "number";
            }
            exports.isNumber = isNumber;
            function isString(arg) {
                return typeof arg === "string";
            }
            exports.isString = isString;
            function isSymbol(arg) {
                return typeof arg === "symbol";
            }
            exports.isSymbol = isSymbol;
            function isUndefined(arg) {
                return arg === void 0;
            }
            exports.isUndefined = isUndefined;
            function isRegExp(re) {
                return isObject(re) && objectToString(re) === "[object RegExp]";
            }
            exports.isRegExp = isRegExp;
            function isObject(arg) {
                return typeof arg === "object" && arg !== null;
            }
            exports.isObject = isObject;
            function isDate(d) {
                return isObject(d) && objectToString(d) === "[object Date]";
            }
            exports.isDate = isDate;
            function isError(e) {
                return isObject(e) && (objectToString(e) === "[object Error]" || e instanceof Error);
            }
            exports.isError = isError;
            function isFunction(arg) {
                return typeof arg === "function";
            }
            exports.isFunction = isFunction;
            function isPrimitive(arg) {
                return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || typeof arg === "undefined";
            }
            exports.isPrimitive = isPrimitive;
            exports.isBuffer = require("./support/isBuffer");
            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }
            function pad(n) {
                return n < 10 ? "0" + n.toString(10) : n.toString(10);
            }
            var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
            function timestamp() {
                var d = new Date();
                var time = [ pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds()) ].join(":");
                return [ d.getDate(), months[d.getMonth()], time ].join(" ");
            }
            exports.log = function() {
                console.log("%s - %s", timestamp(), exports.format.apply(exports, arguments));
            };
            exports.inherits = require("inherits");
            exports._extend = function(origin, add) {
                if (!add || !isObject(add)) return origin;
                var keys = Object.keys(add);
                var i = keys.length;
                while (i--) {
                    origin[keys[i]] = add[keys[i]];
                }
                return origin;
            };
            function hasOwnProperty(obj, prop) {
                return Object.prototype.hasOwnProperty.call(obj, prop);
            }
        }).call(this, require("_process"), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {
        "./support/isBuffer": 14,
        _process: 13,
        inherits: 12
    } ],
    16: [ function(require, module, exports) {
        function last(array) {
            var length = array ? array.length : 0;
            return length ? array[length - 1] : undefined;
        }
        module.exports = last;
    }, {} ],
    17: [ function(require, module, exports) {
        var arrayMap = require("../internal/arrayMap"), baseCallback = require("../internal/baseCallback"), baseMap = require("../internal/baseMap"), isArray = require("../lang/isArray");
        function map(collection, iteratee, thisArg) {
            var func = isArray(collection) ? arrayMap : baseMap;
            iteratee = baseCallback(iteratee, thisArg, 3);
            return func(collection, iteratee);
        }
        module.exports = map;
    }, {
        "../internal/arrayMap": 19,
        "../internal/baseCallback": 22,
        "../internal/baseMap": 30,
        "../lang/isArray": 58
    } ],
    18: [ function(require, module, exports) {
        var arrayReduce = require("../internal/arrayReduce"), baseEach = require("../internal/baseEach"), createReduce = require("../internal/createReduce");
        var reduce = createReduce(arrayReduce, baseEach);
        module.exports = reduce;
    }, {
        "../internal/arrayReduce": 20,
        "../internal/baseEach": 23,
        "../internal/createReduce": 41
    } ],
    19: [ function(require, module, exports) {
        function arrayMap(array, iteratee) {
            var index = -1, length = array.length, result = Array(length);
            while (++index < length) {
                result[index] = iteratee(array[index], index, array);
            }
            return result;
        }
        module.exports = arrayMap;
    }, {} ],
    20: [ function(require, module, exports) {
        function arrayReduce(array, iteratee, accumulator, initFromArray) {
            var index = -1, length = array.length;
            if (initFromArray && length) {
                accumulator = array[++index];
            }
            while (++index < length) {
                accumulator = iteratee(accumulator, array[index], index, array);
            }
            return accumulator;
        }
        module.exports = arrayReduce;
    }, {} ],
    21: [ function(require, module, exports) {
        function arraySome(array, predicate) {
            var index = -1, length = array.length;
            while (++index < length) {
                if (predicate(array[index], index, array)) {
                    return true;
                }
            }
            return false;
        }
        module.exports = arraySome;
    }, {} ],
    22: [ function(require, module, exports) {
        var baseMatches = require("./baseMatches"), baseMatchesProperty = require("./baseMatchesProperty"), bindCallback = require("./bindCallback"), identity = require("../utility/identity"), property = require("../utility/property");
        function baseCallback(func, thisArg, argCount) {
            var type = typeof func;
            if (type == "function") {
                return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);
            }
            if (func == null) {
                return identity;
            }
            if (type == "object") {
                return baseMatches(func);
            }
            return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);
        }
        module.exports = baseCallback;
    }, {
        "../utility/identity": 66,
        "../utility/property": 67,
        "./baseMatches": 31,
        "./baseMatchesProperty": 32,
        "./bindCallback": 38
    } ],
    23: [ function(require, module, exports) {
        var baseForOwn = require("./baseForOwn"), createBaseEach = require("./createBaseEach");
        var baseEach = createBaseEach(baseForOwn);
        module.exports = baseEach;
    }, {
        "./baseForOwn": 25,
        "./createBaseEach": 39
    } ],
    24: [ function(require, module, exports) {
        var createBaseFor = require("./createBaseFor");
        var baseFor = createBaseFor();
        module.exports = baseFor;
    }, {
        "./createBaseFor": 40
    } ],
    25: [ function(require, module, exports) {
        var baseFor = require("./baseFor"), keys = require("../object/keys");
        function baseForOwn(object, iteratee) {
            return baseFor(object, iteratee, keys);
        }
        module.exports = baseForOwn;
    }, {
        "../object/keys": 63,
        "./baseFor": 24
    } ],
    26: [ function(require, module, exports) {
        var toObject = require("./toObject");
        function baseGet(object, path, pathKey) {
            if (object == null) {
                return;
            }
            if (pathKey !== undefined && pathKey in toObject(object)) {
                path = [ pathKey ];
            }
            var index = 0, length = path.length;
            while (object != null && index < length) {
                object = object[path[index++]];
            }
            return index && index == length ? object : undefined;
        }
        module.exports = baseGet;
    }, {
        "./toObject": 55
    } ],
    27: [ function(require, module, exports) {
        var baseIsEqualDeep = require("./baseIsEqualDeep"), isObject = require("../lang/isObject"), isObjectLike = require("./isObjectLike");
        function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {
            if (value === other) {
                return true;
            }
            if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {
                return value !== value && other !== other;
            }
            return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);
        }
        module.exports = baseIsEqual;
    }, {
        "../lang/isObject": 61,
        "./baseIsEqualDeep": 28,
        "./isObjectLike": 52
    } ],
    28: [ function(require, module, exports) {
        var equalArrays = require("./equalArrays"), equalByTag = require("./equalByTag"), equalObjects = require("./equalObjects"), isArray = require("../lang/isArray"), isTypedArray = require("../lang/isTypedArray");
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var objToString = objectProto.toString;
        function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = arrayTag, othTag = arrayTag;
            if (!objIsArr) {
                objTag = objToString.call(object);
                if (objTag == argsTag) {
                    objTag = objectTag;
                } else if (objTag != objectTag) {
                    objIsArr = isTypedArray(object);
                }
            }
            if (!othIsArr) {
                othTag = objToString.call(other);
                if (othTag == argsTag) {
                    othTag = objectTag;
                } else if (othTag != objectTag) {
                    othIsArr = isTypedArray(other);
                }
            }
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && !(objIsArr || objIsObj)) {
                return equalByTag(object, other, objTag);
            }
            if (!isLoose) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                if (objIsWrapped || othIsWrapped) {
                    return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);
                }
            }
            if (!isSameTag) {
                return false;
            }
            stackA || (stackA = []);
            stackB || (stackB = []);
            var length = stackA.length;
            while (length--) {
                if (stackA[length] == object) {
                    return stackB[length] == other;
                }
            }
            stackA.push(object);
            stackB.push(other);
            var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);
            stackA.pop();
            stackB.pop();
            return result;
        }
        module.exports = baseIsEqualDeep;
    }, {
        "../lang/isArray": 58,
        "../lang/isTypedArray": 62,
        "./equalArrays": 42,
        "./equalByTag": 43,
        "./equalObjects": 44
    } ],
    29: [ function(require, module, exports) {
        var baseIsEqual = require("./baseIsEqual"), toObject = require("./toObject");
        function baseIsMatch(object, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (object == null) {
                return !length;
            }
            object = toObject(object);
            while (index--) {
                var data = matchData[index];
                if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
                    return false;
                }
            }
            while (++index < length) {
                data = matchData[index];
                var key = data[0], objValue = object[key], srcValue = data[1];
                if (noCustomizer && data[2]) {
                    if (objValue === undefined && !(key in object)) {
                        return false;
                    }
                } else {
                    var result = customizer ? customizer(objValue, srcValue, key) : undefined;
                    if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {
                        return false;
                    }
                }
            }
            return true;
        }
        module.exports = baseIsMatch;
    }, {
        "./baseIsEqual": 27,
        "./toObject": 55
    } ],
    30: [ function(require, module, exports) {
        var baseEach = require("./baseEach"), isArrayLike = require("./isArrayLike");
        function baseMap(collection, iteratee) {
            var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
            baseEach(collection, function(value, key, collection) {
                result[++index] = iteratee(value, key, collection);
            });
            return result;
        }
        module.exports = baseMap;
    }, {
        "./baseEach": 23,
        "./isArrayLike": 48
    } ],
    31: [ function(require, module, exports) {
        var baseIsMatch = require("./baseIsMatch"), getMatchData = require("./getMatchData"), toObject = require("./toObject");
        function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) {
                var key = matchData[0][0], value = matchData[0][1];
                return function(object) {
                    if (object == null) {
                        return false;
                    }
                    return object[key] === value && (value !== undefined || key in toObject(object));
                };
            }
            return function(object) {
                return baseIsMatch(object, matchData);
            };
        }
        module.exports = baseMatches;
    }, {
        "./baseIsMatch": 29,
        "./getMatchData": 46,
        "./toObject": 55
    } ],
    32: [ function(require, module, exports) {
        var baseGet = require("./baseGet"), baseIsEqual = require("./baseIsEqual"), baseSlice = require("./baseSlice"), isArray = require("../lang/isArray"), isKey = require("./isKey"), isStrictComparable = require("./isStrictComparable"), last = require("../array/last"), toObject = require("./toObject"), toPath = require("./toPath");
        function baseMatchesProperty(path, srcValue) {
            var isArr = isArray(path), isCommon = isKey(path) && isStrictComparable(srcValue), pathKey = path + "";
            path = toPath(path);
            return function(object) {
                if (object == null) {
                    return false;
                }
                var key = pathKey;
                object = toObject(object);
                if ((isArr || !isCommon) && !(key in object)) {
                    object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
                    if (object == null) {
                        return false;
                    }
                    key = last(path);
                    object = toObject(object);
                }
                return object[key] === srcValue ? srcValue !== undefined || key in object : baseIsEqual(srcValue, object[key], undefined, true);
            };
        }
        module.exports = baseMatchesProperty;
    }, {
        "../array/last": 16,
        "../lang/isArray": 58,
        "./baseGet": 26,
        "./baseIsEqual": 27,
        "./baseSlice": 36,
        "./isKey": 50,
        "./isStrictComparable": 53,
        "./toObject": 55,
        "./toPath": 56
    } ],
    33: [ function(require, module, exports) {
        function baseProperty(key) {
            return function(object) {
                return object == null ? undefined : object[key];
            };
        }
        module.exports = baseProperty;
    }, {} ],
    34: [ function(require, module, exports) {
        var baseGet = require("./baseGet"), toPath = require("./toPath");
        function basePropertyDeep(path) {
            var pathKey = path + "";
            path = toPath(path);
            return function(object) {
                return baseGet(object, path, pathKey);
            };
        }
        module.exports = basePropertyDeep;
    }, {
        "./baseGet": 26,
        "./toPath": 56
    } ],
    35: [ function(require, module, exports) {
        function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {
            eachFunc(collection, function(value, index, collection) {
                accumulator = initFromCollection ? (initFromCollection = false, value) : iteratee(accumulator, value, index, collection);
            });
            return accumulator;
        }
        module.exports = baseReduce;
    }, {} ],
    36: [ function(require, module, exports) {
        function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            start = start == null ? 0 : +start || 0;
            if (start < 0) {
                start = -start > length ? 0 : length + start;
            }
            end = end === undefined || end > length ? length : +end || 0;
            if (end < 0) {
                end += length;
            }
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result = Array(length);
            while (++index < length) {
                result[index] = array[index + start];
            }
            return result;
        }
        module.exports = baseSlice;
    }, {} ],
    37: [ function(require, module, exports) {
        function baseToString(value) {
            return value == null ? "" : value + "";
        }
        module.exports = baseToString;
    }, {} ],
    38: [ function(require, module, exports) {
        var identity = require("../utility/identity");
        function bindCallback(func, thisArg, argCount) {
            if (typeof func != "function") {
                return identity;
            }
            if (thisArg === undefined) {
                return func;
            }
            switch (argCount) {
              case 1:
                return function(value) {
                    return func.call(thisArg, value);
                };

              case 3:
                return function(value, index, collection) {
                    return func.call(thisArg, value, index, collection);
                };

              case 4:
                return function(accumulator, value, index, collection) {
                    return func.call(thisArg, accumulator, value, index, collection);
                };

              case 5:
                return function(value, other, key, object, source) {
                    return func.call(thisArg, value, other, key, object, source);
                };
            }
            return function() {
                return func.apply(thisArg, arguments);
            };
        }
        module.exports = bindCallback;
    }, {
        "../utility/identity": 66
    } ],
    39: [ function(require, module, exports) {
        var getLength = require("./getLength"), isLength = require("./isLength"), toObject = require("./toObject");
        function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                var length = collection ? getLength(collection) : 0;
                if (!isLength(length)) {
                    return eachFunc(collection, iteratee);
                }
                var index = fromRight ? length : -1, iterable = toObject(collection);
                while (fromRight ? index-- : ++index < length) {
                    if (iteratee(iterable[index], index, iterable) === false) {
                        break;
                    }
                }
                return collection;
            };
        }
        module.exports = createBaseEach;
    }, {
        "./getLength": 45,
        "./isLength": 51,
        "./toObject": 55
    } ],
    40: [ function(require, module, exports) {
        var toObject = require("./toObject");
        function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var iterable = toObject(object), props = keysFunc(object), length = props.length, index = fromRight ? length : -1;
                while (fromRight ? index-- : ++index < length) {
                    var key = props[index];
                    if (iteratee(iterable[key], key, iterable) === false) {
                        break;
                    }
                }
                return object;
            };
        }
        module.exports = createBaseFor;
    }, {
        "./toObject": 55
    } ],
    41: [ function(require, module, exports) {
        var baseCallback = require("./baseCallback"), baseReduce = require("./baseReduce"), isArray = require("../lang/isArray");
        function createReduce(arrayFunc, eachFunc) {
            return function(collection, iteratee, accumulator, thisArg) {
                var initFromArray = arguments.length < 3;
                return typeof iteratee == "function" && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee, accumulator, initFromArray) : baseReduce(collection, baseCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);
            };
        }
        module.exports = createReduce;
    }, {
        "../lang/isArray": 58,
        "./baseCallback": 22,
        "./baseReduce": 35
    } ],
    42: [ function(require, module, exports) {
        var arraySome = require("./arraySome");
        function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {
            var index = -1, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isLoose && othLength > arrLength)) {
                return false;
            }
            while (++index < arrLength) {
                var arrValue = array[index], othValue = other[index], result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;
                if (result !== undefined) {
                    if (result) {
                        continue;
                    }
                    return false;
                }
                if (isLoose) {
                    if (!arraySome(other, function(othValue) {
                        return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);
                    })) {
                        return false;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {
                    return false;
                }
            }
            return true;
        }
        module.exports = equalArrays;
    }, {
        "./arraySome": 21
    } ],
    43: [ function(require, module, exports) {
        var boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", numberTag = "[object Number]", regexpTag = "[object RegExp]", stringTag = "[object String]";
        function equalByTag(object, other, tag) {
            switch (tag) {
              case boolTag:
              case dateTag:
                return +object == +other;

              case errorTag:
                return object.name == other.name && object.message == other.message;

              case numberTag:
                return object != +object ? other != +other : object == +other;

              case regexpTag:
              case stringTag:
                return object == other + "";
            }
            return false;
        }
        module.exports = equalByTag;
    }, {} ],
    44: [ function(require, module, exports) {
        var keys = require("../object/keys");
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
            var objProps = keys(object), objLength = objProps.length, othProps = keys(other), othLength = othProps.length;
            if (objLength != othLength && !isLoose) {
                return false;
            }
            var index = objLength;
            while (index--) {
                var key = objProps[index];
                if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {
                    return false;
                }
            }
            var skipCtor = isLoose;
            while (++index < objLength) {
                key = objProps[index];
                var objValue = object[key], othValue = other[key], result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined;
                if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {
                    return false;
                }
                skipCtor || (skipCtor = key == "constructor");
            }
            if (!skipCtor) {
                var objCtor = object.constructor, othCtor = other.constructor;
                if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
                    return false;
                }
            }
            return true;
        }
        module.exports = equalObjects;
    }, {
        "../object/keys": 63
    } ],
    45: [ function(require, module, exports) {
        var baseProperty = require("./baseProperty");
        var getLength = baseProperty("length");
        module.exports = getLength;
    }, {
        "./baseProperty": 33
    } ],
    46: [ function(require, module, exports) {
        var isStrictComparable = require("./isStrictComparable"), pairs = require("../object/pairs");
        function getMatchData(object) {
            var result = pairs(object), length = result.length;
            while (length--) {
                result[length][2] = isStrictComparable(result[length][1]);
            }
            return result;
        }
        module.exports = getMatchData;
    }, {
        "../object/pairs": 65,
        "./isStrictComparable": 53
    } ],
    47: [ function(require, module, exports) {
        var isNative = require("../lang/isNative");
        function getNative(object, key) {
            var value = object == null ? undefined : object[key];
            return isNative(value) ? value : undefined;
        }
        module.exports = getNative;
    }, {
        "../lang/isNative": 60
    } ],
    48: [ function(require, module, exports) {
        var getLength = require("./getLength"), isLength = require("./isLength");
        function isArrayLike(value) {
            return value != null && isLength(getLength(value));
        }
        module.exports = isArrayLike;
    }, {
        "./getLength": 45,
        "./isLength": 51
    } ],
    49: [ function(require, module, exports) {
        var reIsUint = /^\d+$/;
        var MAX_SAFE_INTEGER = 9007199254740991;
        function isIndex(value, length) {
            value = typeof value == "number" || reIsUint.test(value) ? +value : -1;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return value > -1 && value % 1 == 0 && value < length;
        }
        module.exports = isIndex;
    }, {} ],
    50: [ function(require, module, exports) {
        var isArray = require("../lang/isArray"), toObject = require("./toObject");
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
        function isKey(value, object) {
            var type = typeof value;
            if (type == "string" && reIsPlainProp.test(value) || type == "number") {
                return true;
            }
            if (isArray(value)) {
                return false;
            }
            var result = !reIsDeepProp.test(value);
            return result || object != null && value in toObject(object);
        }
        module.exports = isKey;
    }, {
        "../lang/isArray": 58,
        "./toObject": 55
    } ],
    51: [ function(require, module, exports) {
        var MAX_SAFE_INTEGER = 9007199254740991;
        function isLength(value) {
            return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        module.exports = isLength;
    }, {} ],
    52: [ function(require, module, exports) {
        function isObjectLike(value) {
            return !!value && typeof value == "object";
        }
        module.exports = isObjectLike;
    }, {} ],
    53: [ function(require, module, exports) {
        var isObject = require("../lang/isObject");
        function isStrictComparable(value) {
            return value === value && !isObject(value);
        }
        module.exports = isStrictComparable;
    }, {
        "../lang/isObject": 61
    } ],
    54: [ function(require, module, exports) {
        var isArguments = require("../lang/isArguments"), isArray = require("../lang/isArray"), isIndex = require("./isIndex"), isLength = require("./isLength"), keysIn = require("../object/keysIn");
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function shimKeys(object) {
            var props = keysIn(object), propsLength = props.length, length = propsLength && object.length;
            var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));
            var index = -1, result = [];
            while (++index < propsLength) {
                var key = props[index];
                if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {
                    result.push(key);
                }
            }
            return result;
        }
        module.exports = shimKeys;
    }, {
        "../lang/isArguments": 57,
        "../lang/isArray": 58,
        "../object/keysIn": 64,
        "./isIndex": 49,
        "./isLength": 51
    } ],
    55: [ function(require, module, exports) {
        var isObject = require("../lang/isObject");
        function toObject(value) {
            return isObject(value) ? value : Object(value);
        }
        module.exports = toObject;
    }, {
        "../lang/isObject": 61
    } ],
    56: [ function(require, module, exports) {
        var baseToString = require("./baseToString"), isArray = require("../lang/isArray");
        var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;
        var reEscapeChar = /\\(\\)?/g;
        function toPath(value) {
            if (isArray(value)) {
                return value;
            }
            var result = [];
            baseToString(value).replace(rePropName, function(match, number, quote, string) {
                result.push(quote ? string.replace(reEscapeChar, "$1") : number || match);
            });
            return result;
        }
        module.exports = toPath;
    }, {
        "../lang/isArray": 58,
        "./baseToString": 37
    } ],
    57: [ function(require, module, exports) {
        var isArrayLike = require("../internal/isArrayLike"), isObjectLike = require("../internal/isObjectLike");
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;
        function isArguments(value) {
            return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        }
        module.exports = isArguments;
    }, {
        "../internal/isArrayLike": 48,
        "../internal/isObjectLike": 52
    } ],
    58: [ function(require, module, exports) {
        var getNative = require("../internal/getNative"), isLength = require("../internal/isLength"), isObjectLike = require("../internal/isObjectLike");
        var arrayTag = "[object Array]";
        var objectProto = Object.prototype;
        var objToString = objectProto.toString;
        var nativeIsArray = getNative(Array, "isArray");
        var isArray = nativeIsArray || function(value) {
            return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
        };
        module.exports = isArray;
    }, {
        "../internal/getNative": 47,
        "../internal/isLength": 51,
        "../internal/isObjectLike": 52
    } ],
    59: [ function(require, module, exports) {
        var isObject = require("./isObject");
        var funcTag = "[object Function]";
        var objectProto = Object.prototype;
        var objToString = objectProto.toString;
        function isFunction(value) {
            return isObject(value) && objToString.call(value) == funcTag;
        }
        module.exports = isFunction;
    }, {
        "./isObject": 61
    } ],
    60: [ function(require, module, exports) {
        var isFunction = require("./isFunction"), isObjectLike = require("../internal/isObjectLike");
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var objectProto = Object.prototype;
        var fnToString = Function.prototype.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var reIsNative = RegExp("^" + fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        function isNative(value) {
            if (value == null) {
                return false;
            }
            if (isFunction(value)) {
                return reIsNative.test(fnToString.call(value));
            }
            return isObjectLike(value) && reIsHostCtor.test(value);
        }
        module.exports = isNative;
    }, {
        "../internal/isObjectLike": 52,
        "./isFunction": 59
    } ],
    61: [ function(require, module, exports) {
        function isObject(value) {
            var type = typeof value;
            return !!value && (type == "object" || type == "function");
        }
        module.exports = isObject;
    }, {} ],
    62: [ function(require, module, exports) {
        var isLength = require("../internal/isLength"), isObjectLike = require("../internal/isObjectLike");
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", mapTag = "[object Map]", numberTag = "[object Number]", objectTag = "[object Object]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", weakMapTag = "[object WeakMap]";
        var arrayBufferTag = "[object ArrayBuffer]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
        var objectProto = Object.prototype;
        var objToString = objectProto.toString;
        function isTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
        }
        module.exports = isTypedArray;
    }, {
        "../internal/isLength": 51,
        "../internal/isObjectLike": 52
    } ],
    63: [ function(require, module, exports) {
        var getNative = require("../internal/getNative"), isArrayLike = require("../internal/isArrayLike"), isObject = require("../lang/isObject"), shimKeys = require("../internal/shimKeys");
        var nativeKeys = getNative(Object, "keys");
        var keys = !nativeKeys ? shimKeys : function(object) {
            var Ctor = object == null ? undefined : object.constructor;
            if (typeof Ctor == "function" && Ctor.prototype === object || typeof object != "function" && isArrayLike(object)) {
                return shimKeys(object);
            }
            return isObject(object) ? nativeKeys(object) : [];
        };
        module.exports = keys;
    }, {
        "../internal/getNative": 47,
        "../internal/isArrayLike": 48,
        "../internal/shimKeys": 54,
        "../lang/isObject": 61
    } ],
    64: [ function(require, module, exports) {
        var isArguments = require("../lang/isArguments"), isArray = require("../lang/isArray"), isIndex = require("../internal/isIndex"), isLength = require("../internal/isLength"), isObject = require("../lang/isObject");
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function keysIn(object) {
            if (object == null) {
                return [];
            }
            if (!isObject(object)) {
                object = Object(object);
            }
            var length = object.length;
            length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;
            var Ctor = object.constructor, index = -1, isProto = typeof Ctor == "function" && Ctor.prototype === object, result = Array(length), skipIndexes = length > 0;
            while (++index < length) {
                result[index] = index + "";
            }
            for (var key in object) {
                if (!(skipIndexes && isIndex(key, length)) && !(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
                    result.push(key);
                }
            }
            return result;
        }
        module.exports = keysIn;
    }, {
        "../internal/isIndex": 49,
        "../internal/isLength": 51,
        "../lang/isArguments": 57,
        "../lang/isArray": 58,
        "../lang/isObject": 61
    } ],
    65: [ function(require, module, exports) {
        var keys = require("./keys"), toObject = require("../internal/toObject");
        function pairs(object) {
            object = toObject(object);
            var index = -1, props = keys(object), length = props.length, result = Array(length);
            while (++index < length) {
                var key = props[index];
                result[index] = [ key, object[key] ];
            }
            return result;
        }
        module.exports = pairs;
    }, {
        "../internal/toObject": 55,
        "./keys": 63
    } ],
    66: [ function(require, module, exports) {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    }, {} ],
    67: [ function(require, module, exports) {
        var baseProperty = require("../internal/baseProperty"), basePropertyDeep = require("../internal/basePropertyDeep"), isKey = require("../internal/isKey");
        function property(path) {
            return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
        }
        module.exports = property;
    }, {
        "../internal/baseProperty": 33,
        "../internal/basePropertyDeep": 34,
        "../internal/isKey": 50
    } ],
    68: [ function(require, module, exports) {
        !function(name, context, definition) {
            if (typeof module != "undefined" && module.exports) module.exports = definition(); else if (typeof define == "function" && define.amd) define(definition); else context[name] = definition();
        }("reqwest", this, function() {
            var context = this;
            if ("window" in context) {
                var doc = document, byTag = "getElementsByTagName", head = doc[byTag]("head")[0];
            } else {
                var XHR2;
                try {
                    var xhr2 = "xhr2";
                    XHR2 = require(xhr2);
                } catch (ex) {
                    throw new Error("Peer dependency `xhr2` required! Please npm install xhr2");
                }
            }
            var httpsRe = /^http/, protocolRe = /(^\w+):\/\//, twoHundo = /^(20\d|1223)$/, readyState = "readyState", contentType = "Content-Type", requestedWith = "X-Requested-With", uniqid = 0, callbackPrefix = "reqwest_" + +new Date(), lastValue, xmlHttpRequest = "XMLHttpRequest", xDomainRequest = "XDomainRequest", noop = function() {}, isArray = typeof Array.isArray == "function" ? Array.isArray : function(a) {
                return a instanceof Array;
            }, defaultHeaders = {
                contentType: "application/x-www-form-urlencoded",
                requestedWith: xmlHttpRequest,
                accept: {
                    "*": "text/javascript, text/html, application/xml, text/xml, */*",
                    xml: "application/xml, text/xml",
                    html: "text/html",
                    text: "text/plain",
                    json: "application/json, text/javascript",
                    js: "application/javascript, text/javascript"
                }
            }, xhr = function(o) {
                if (o["crossOrigin"] === true) {
                    var xhr = context[xmlHttpRequest] ? new XMLHttpRequest() : null;
                    if (xhr && "withCredentials" in xhr) {
                        return xhr;
                    } else if (context[xDomainRequest]) {
                        return new XDomainRequest();
                    } else {
                        throw new Error("Browser does not support cross-origin requests");
                    }
                } else if (context[xmlHttpRequest]) {
                    return new XMLHttpRequest();
                } else if (XHR2) {
                    return new XHR2();
                } else {
                    return new ActiveXObject("Microsoft.XMLHTTP");
                }
            }, globalSetupOptions = {
                dataFilter: function(data) {
                    return data;
                }
            };
            function succeed(r) {
                var protocol = protocolRe.exec(r.url);
                protocol = protocol && protocol[1] || context.location.protocol;
                return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response;
            }
            function handleReadyState(r, success, error) {
                return function() {
                    if (r._aborted) return error(r.request);
                    if (r._timedOut) return error(r.request, "Request is aborted: timeout");
                    if (r.request && r.request[readyState] == 4) {
                        r.request.onreadystatechange = noop;
                        if (succeed(r)) success(r.request); else error(r.request);
                    }
                };
            }
            function setHeaders(http, o) {
                var headers = o["headers"] || {}, h;
                headers["Accept"] = headers["Accept"] || defaultHeaders["accept"][o["type"]] || defaultHeaders["accept"]["*"];
                var isAFormData = typeof FormData === "function" && o["data"] instanceof FormData;
                if (!o["crossOrigin"] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders["requestedWith"];
                if (!headers[contentType] && !isAFormData) headers[contentType] = o["contentType"] || defaultHeaders["contentType"];
                for (h in headers) headers.hasOwnProperty(h) && "setRequestHeader" in http && http.setRequestHeader(h, headers[h]);
            }
            function setCredentials(http, o) {
                if (typeof o["withCredentials"] !== "undefined" && typeof http.withCredentials !== "undefined") {
                    http.withCredentials = !!o["withCredentials"];
                }
            }
            function generalCallback(data) {
                lastValue = data;
            }
            function urlappend(url, s) {
                return url + (/\?/.test(url) ? "&" : "?") + s;
            }
            function handleJsonp(o, fn, err, url) {
                var reqId = uniqid++, cbkey = o["jsonpCallback"] || "callback", cbval = o["jsonpCallbackName"] || reqwest.getcallbackPrefix(reqId), cbreg = new RegExp("((^|\\?|&)" + cbkey + ")=([^&]+)"), match = url.match(cbreg), script = doc.createElement("script"), loaded = 0, isIE10 = navigator.userAgent.indexOf("MSIE 10.0") !== -1;
                if (match) {
                    if (match[3] === "?") {
                        url = url.replace(cbreg, "$1=" + cbval);
                    } else {
                        cbval = match[3];
                    }
                } else {
                    url = urlappend(url, cbkey + "=" + cbval);
                }
                context[cbval] = generalCallback;
                script.type = "text/javascript";
                script.src = url;
                script.async = true;
                if (typeof script.onreadystatechange !== "undefined" && !isIE10) {
                    script.htmlFor = script.id = "_reqwest_" + reqId;
                }
                script.onload = script.onreadystatechange = function() {
                    if (script[readyState] && script[readyState] !== "complete" && script[readyState] !== "loaded" || loaded) {
                        return false;
                    }
                    script.onload = script.onreadystatechange = null;
                    script.onclick && script.onclick();
                    fn(lastValue);
                    lastValue = undefined;
                    head.removeChild(script);
                    loaded = 1;
                };
                head.appendChild(script);
                return {
                    abort: function() {
                        script.onload = script.onreadystatechange = null;
                        err({}, "Request is aborted: timeout", {});
                        lastValue = undefined;
                        head.removeChild(script);
                        loaded = 1;
                    }
                };
            }
            function getRequest(fn, err) {
                var o = this.o, method = (o["method"] || "GET").toUpperCase(), url = typeof o === "string" ? o : o["url"], data = o["processData"] !== false && o["data"] && typeof o["data"] !== "string" ? reqwest.toQueryString(o["data"]) : o["data"] || null, http, sendWait = false;
                if ((o["type"] == "jsonp" || method == "GET") && data) {
                    url = urlappend(url, data);
                    data = null;
                }
                if (o["type"] == "jsonp") return handleJsonp(o, fn, err, url);
                http = o.xhr && o.xhr(o) || xhr(o);
                http.open(method, url, o["async"] === false ? false : true);
                setHeaders(http, o);
                setCredentials(http, o);
                if (context[xDomainRequest] && http instanceof context[xDomainRequest]) {
                    http.onload = fn;
                    http.onerror = err;
                    http.onprogress = function() {};
                    sendWait = true;
                } else {
                    http.onreadystatechange = handleReadyState(this, fn, err);
                }
                o["before"] && o["before"](http);
                if (sendWait) {
                    setTimeout(function() {
                        http.send(data);
                    }, 200);
                } else {
                    http.send(data);
                }
                return http;
            }
            function Reqwest(o, fn) {
                this.o = o;
                this.fn = fn;
                init.apply(this, arguments);
            }
            function setType(header) {
                if (header === null) return undefined;
                if (header.match("json")) return "json";
                if (header.match("javascript")) return "js";
                if (header.match("text")) return "html";
                if (header.match("xml")) return "xml";
            }
            function init(o, fn) {
                this.url = typeof o == "string" ? o : o["url"];
                this.timeout = null;
                this._fulfilled = false;
                this._successHandler = function() {};
                this._fulfillmentHandlers = [];
                this._errorHandlers = [];
                this._completeHandlers = [];
                this._erred = false;
                this._responseArgs = {};
                var self = this;
                fn = fn || function() {};
                if (o["timeout"]) {
                    this.timeout = setTimeout(function() {
                        timedOut();
                    }, o["timeout"]);
                }
                if (o["success"]) {
                    this._successHandler = function() {
                        o["success"].apply(o, arguments);
                    };
                }
                if (o["error"]) {
                    this._errorHandlers.push(function() {
                        o["error"].apply(o, arguments);
                    });
                }
                if (o["complete"]) {
                    this._completeHandlers.push(function() {
                        o["complete"].apply(o, arguments);
                    });
                }
                function complete(resp) {
                    o["timeout"] && clearTimeout(self.timeout);
                    self.timeout = null;
                    while (self._completeHandlers.length > 0) {
                        self._completeHandlers.shift()(resp);
                    }
                }
                function success(resp) {
                    var type = o["type"] || resp && setType(resp.getResponseHeader("Content-Type"));
                    resp = type !== "jsonp" ? self.request : resp;
                    var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type), r = filteredResponse;
                    try {
                        resp.responseText = r;
                    } catch (e) {}
                    if (r) {
                        switch (type) {
                          case "json":
                            try {
                                resp = context.JSON ? context.JSON.parse(r) : eval("(" + r + ")");
                            } catch (err) {
                                return error(resp, "Could not parse JSON in response", err);
                            }
                            break;

                          case "js":
                            resp = eval(r);
                            break;

                          case "html":
                            resp = r;
                            break;

                          case "xml":
                            resp = resp.responseXML && resp.responseXML.parseError && resp.responseXML.parseError.errorCode && resp.responseXML.parseError.reason ? null : resp.responseXML;
                            break;
                        }
                    }
                    self._responseArgs.resp = resp;
                    self._fulfilled = true;
                    fn(resp);
                    self._successHandler(resp);
                    while (self._fulfillmentHandlers.length > 0) {
                        resp = self._fulfillmentHandlers.shift()(resp);
                    }
                    complete(resp);
                }
                function timedOut() {
                    self._timedOut = true;
                    self.request.abort();
                }
                function error(resp, msg, t) {
                    resp = self.request;
                    self._responseArgs.resp = resp;
                    self._responseArgs.msg = msg;
                    self._responseArgs.t = t;
                    self._erred = true;
                    while (self._errorHandlers.length > 0) {
                        self._errorHandlers.shift()(resp, msg, t);
                    }
                    complete(resp);
                }
                this.request = getRequest.call(this, success, error);
            }
            Reqwest.prototype = {
                abort: function() {
                    this._aborted = true;
                    this.request.abort();
                },
                retry: function() {
                    init.call(this, this.o, this.fn);
                },
                then: function(success, fail) {
                    success = success || function() {};
                    fail = fail || function() {};
                    if (this._fulfilled) {
                        this._responseArgs.resp = success(this._responseArgs.resp);
                    } else if (this._erred) {
                        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t);
                    } else {
                        this._fulfillmentHandlers.push(success);
                        this._errorHandlers.push(fail);
                    }
                    return this;
                },
                always: function(fn) {
                    if (this._fulfilled || this._erred) {
                        fn(this._responseArgs.resp);
                    } else {
                        this._completeHandlers.push(fn);
                    }
                    return this;
                },
                fail: function(fn) {
                    if (this._erred) {
                        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t);
                    } else {
                        this._errorHandlers.push(fn);
                    }
                    return this;
                },
                "catch": function(fn) {
                    return this.fail(fn);
                }
            };
            function reqwest(o, fn) {
                return new Reqwest(o, fn);
            }
            function normalize(s) {
                return s ? s.replace(/\r?\n/g, "\r\n") : "";
            }
            function serial(el, cb) {
                var n = el.name, t = el.tagName.toLowerCase(), optCb = function(o) {
                    if (o && !o["disabled"]) cb(n, normalize(o["attributes"]["value"] && o["attributes"]["value"]["specified"] ? o["value"] : o["text"]));
                }, ch, ra, val, i;
                if (el.disabled || !n) return;
                switch (t) {
                  case "input":
                    if (!/reset|button|image|file/i.test(el.type)) {
                        ch = /checkbox/i.test(el.type);
                        ra = /radio/i.test(el.type);
                        val = el.value;
                        (!(ch || ra) || el.checked) && cb(n, normalize(ch && val === "" ? "on" : val));
                    }
                    break;

                  case "textarea":
                    cb(n, normalize(el.value));
                    break;

                  case "select":
                    if (el.type.toLowerCase() === "select-one") {
                        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null);
                    } else {
                        for (i = 0; el.length && i < el.length; i++) {
                            el.options[i].selected && optCb(el.options[i]);
                        }
                    }
                    break;
                }
            }
            function eachFormElement() {
                var cb = this, e, i, serializeSubtags = function(e, tags) {
                    var i, j, fa;
                    for (i = 0; i < tags.length; i++) {
                        fa = e[byTag](tags[i]);
                        for (j = 0; j < fa.length; j++) serial(fa[j], cb);
                    }
                };
                for (i = 0; i < arguments.length; i++) {
                    e = arguments[i];
                    if (/input|select|textarea/i.test(e.tagName)) serial(e, cb);
                    serializeSubtags(e, [ "input", "select", "textarea" ]);
                }
            }
            function serializeQueryString() {
                return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments));
            }
            function serializeHash() {
                var hash = {};
                eachFormElement.apply(function(name, value) {
                    if (name in hash) {
                        hash[name] && !isArray(hash[name]) && (hash[name] = [ hash[name] ]);
                        hash[name].push(value);
                    } else hash[name] = value;
                }, arguments);
                return hash;
            }
            reqwest.serializeArray = function() {
                var arr = [];
                eachFormElement.apply(function(name, value) {
                    arr.push({
                        name: name,
                        value: value
                    });
                }, arguments);
                return arr;
            };
            reqwest.serialize = function() {
                if (arguments.length === 0) return "";
                var opt, fn, args = Array.prototype.slice.call(arguments, 0);
                opt = args.pop();
                opt && opt.nodeType && args.push(opt) && (opt = null);
                opt && (opt = opt.type);
                if (opt == "map") fn = serializeHash; else if (opt == "array") fn = reqwest.serializeArray; else fn = serializeQueryString;
                return fn.apply(null, args);
            };
            reqwest.toQueryString = function(o, trad) {
                var prefix, i, traditional = trad || false, s = [], enc = encodeURIComponent, add = function(key, value) {
                    value = "function" === typeof value ? value() : value == null ? "" : value;
                    s[s.length] = enc(key) + "=" + enc(value);
                };
                if (isArray(o)) {
                    for (i = 0; o && i < o.length; i++) add(o[i]["name"], o[i]["value"]);
                } else {
                    for (prefix in o) {
                        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add);
                    }
                }
                return s.join("&").replace(/%20/g, "+");
            };
            function buildParams(prefix, obj, traditional, add) {
                var name, i, v, rbracket = /\[\]$/;
                if (isArray(obj)) {
                    for (i = 0; obj && i < obj.length; i++) {
                        v = obj[i];
                        if (traditional || rbracket.test(prefix)) {
                            add(prefix, v);
                        } else {
                            buildParams(prefix + "[" + (typeof v === "object" ? i : "") + "]", v, traditional, add);
                        }
                    }
                } else if (obj && obj.toString() === "[object Object]") {
                    for (name in obj) {
                        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
                    }
                } else {
                    add(prefix, obj);
                }
            }
            reqwest.getcallbackPrefix = function() {
                return callbackPrefix;
            };
            reqwest.compat = function(o, fn) {
                if (o) {
                    o["type"] && (o["method"] = o["type"]) && delete o["type"];
                    o["dataType"] && (o["type"] = o["dataType"]);
                    o["jsonpCallback"] && (o["jsonpCallbackName"] = o["jsonpCallback"]) && delete o["jsonpCallback"];
                    o["jsonp"] && (o["jsonpCallback"] = o["jsonp"]);
                }
                return new Reqwest(o, fn);
            };
            reqwest.ajaxSetup = function(options) {
                options = options || {};
                for (var k in options) {
                    globalSetupOptions[k] = options[k];
                }
            };
            return reqwest;
        });
    }, {} ],
    69: [ function(require, module, exports) {
        !function(e, t, n) {
            "use strict";
            !function o(e, t, n) {
                function a(s, l) {
                    if (!t[s]) {
                        if (!e[s]) {
                            var i = "function" == typeof require && require;
                            if (!l && i) return i(s, !0);
                            if (r) return r(s, !0);
                            var u = new Error("Cannot find module '" + s + "'");
                            throw u.code = "MODULE_NOT_FOUND", u;
                        }
                        var c = t[s] = {
                            exports: {}
                        };
                        e[s][0].call(c.exports, function(t) {
                            var n = e[s][1][t];
                            return a(n ? n : t);
                        }, c, c.exports, o, e, t, n);
                    }
                    return t[s].exports;
                }
                for (var r = "function" == typeof require && require, s = 0; s < n.length; s++) a(n[s]);
                return a;
            }({
                1: [ function(o) {
                    var a, r, s, l, i = function(e) {
                        return e && e.__esModule ? e : {
                            "default": e
                        };
                    }, u = o("./modules/handle-dom"), c = o("./modules/utils"), d = o("./modules/handle-swal-dom"), f = o("./modules/handle-click"), p = o("./modules/handle-key"), m = i(p), v = o("./modules/default-params"), y = i(v), h = o("./modules/set-params"), g = i(h);
                    s = l = function() {
                        function o(e) {
                            var t = s;
                            return t[e] === n ? y["default"][e] : t[e];
                        }
                        var s = arguments[0];
                        if (u.addClass(t.body, "stop-scrolling"), d.resetInput(), s === n) return c.logStr("SweetAlert expects at least 1 attribute!"), 
                        !1;
                        var i = c.extend({}, y["default"]);
                        switch (typeof s) {
                          case "string":
                            i.title = s, i.text = arguments[1] || "", i.type = arguments[2] || "";
                            break;

                          case "object":
                            if (s.title === n) return c.logStr('Missing "title" argument!'), !1;
                            i.title = s.title;
                            for (var p in y["default"]) i[p] = o(p);
                            i.confirmButtonText = i.showCancelButton ? "Confirm" : y["default"].confirmButtonText, 
                            i.confirmButtonText = o("confirmButtonText"), i.doneFunction = arguments[1] || null;
                            break;

                          default:
                            return c.logStr('Unexpected type of argument! Expected "string" or "object", got ' + typeof s), 
                            !1;
                        }
                        g["default"](i), d.fixVerticalPosition(), d.openModal(arguments[1]);
                        for (var v = d.getModal(), h = v.querySelectorAll("button"), b = [ "onclick", "onmouseover", "onmouseout", "onmousedown", "onmouseup", "onfocus" ], w = function(e) {
                            return f.handleButton(e, i, v);
                        }, C = 0; C < h.length; C++) for (var S = 0; S < b.length; S++) {
                            var x = b[S];
                            h[C][x] = w;
                        }
                        d.getOverlay().onclick = w, a = e.onkeydown;
                        var k = function(e) {
                            return m["default"](e, i, v);
                        };
                        e.onkeydown = k, e.onfocus = function() {
                            setTimeout(function() {
                                r !== n && (r.focus(), r = n);
                            }, 0);
                        }, l.enableButtons();
                    }, s.setDefaults = l.setDefaults = function(e) {
                        if (!e) throw new Error("userParams is required");
                        if ("object" != typeof e) throw new Error("userParams has to be a object");
                        c.extend(y["default"], e);
                    }, s.close = l.close = function() {
                        var o = d.getModal();
                        u.fadeOut(d.getOverlay(), 5), u.fadeOut(o, 5), u.removeClass(o, "showSweetAlert"), 
                        u.addClass(o, "hideSweetAlert"), u.removeClass(o, "visible");
                        var s = o.querySelector(".sa-icon.sa-success");
                        u.removeClass(s, "animate"), u.removeClass(s.querySelector(".sa-tip"), "animateSuccessTip"), 
                        u.removeClass(s.querySelector(".sa-long"), "animateSuccessLong");
                        var l = o.querySelector(".sa-icon.sa-error");
                        u.removeClass(l, "animateErrorIcon"), u.removeClass(l.querySelector(".sa-x-mark"), "animateXMark");
                        var i = o.querySelector(".sa-icon.sa-warning");
                        return u.removeClass(i, "pulseWarning"), u.removeClass(i.querySelector(".sa-body"), "pulseWarningIns"), 
                        u.removeClass(i.querySelector(".sa-dot"), "pulseWarningIns"), setTimeout(function() {
                            var e = o.getAttribute("data-custom-class");
                            u.removeClass(o, e);
                        }, 300), u.removeClass(t.body, "stop-scrolling"), e.onkeydown = a, e.previousActiveElement && e.previousActiveElement.focus(), 
                        r = n, clearTimeout(o.timeout), !0;
                    }, s.showInputError = l.showInputError = function(e) {
                        var t = d.getModal(), n = t.querySelector(".sa-input-error");
                        u.addClass(n, "show");
                        var o = t.querySelector(".sa-error-container");
                        u.addClass(o, "show"), o.querySelector("p").innerHTML = e, setTimeout(function() {
                            s.enableButtons();
                        }, 1), t.querySelector("input").focus();
                    }, s.resetInputError = l.resetInputError = function(e) {
                        if (e && 13 === e.keyCode) return !1;
                        var t = d.getModal(), n = t.querySelector(".sa-input-error");
                        u.removeClass(n, "show");
                        var o = t.querySelector(".sa-error-container");
                        u.removeClass(o, "show");
                    }, s.disableButtons = l.disableButtons = function() {
                        var e = d.getModal(), t = e.querySelector("button.confirm"), n = e.querySelector("button.cancel");
                        t.disabled = !0, n.disabled = !0;
                    }, s.enableButtons = l.enableButtons = function() {
                        var e = d.getModal(), t = e.querySelector("button.confirm"), n = e.querySelector("button.cancel");
                        t.disabled = !1, n.disabled = !1;
                    }, "undefined" != typeof e ? e.sweetAlert = e.swal = s : c.logStr("SweetAlert is a frontend module!");
                }, {
                    "./modules/default-params": 2,
                    "./modules/handle-click": 3,
                    "./modules/handle-dom": 4,
                    "./modules/handle-key": 5,
                    "./modules/handle-swal-dom": 6,
                    "./modules/set-params": 8,
                    "./modules/utils": 9
                } ],
                2: [ function(e, t, n) {
                    Object.defineProperty(n, "__esModule", {
                        value: !0
                    });
                    var o = {
                        title: "",
                        text: "",
                        type: null,
                        allowOutsideClick: !1,
                        showConfirmButton: !0,
                        showCancelButton: !1,
                        closeOnConfirm: !0,
                        closeOnCancel: !0,
                        confirmButtonText: "OK",
                        confirmButtonColor: "#8CD4F5",
                        cancelButtonText: "Cancel",
                        imageUrl: null,
                        imageSize: null,
                        timer: null,
                        customClass: "",
                        html: !1,
                        animation: !0,
                        allowEscapeKey: !0,
                        inputType: "text",
                        inputPlaceholder: "",
                        inputValue: "",
                        showLoaderOnConfirm: !1
                    };
                    n["default"] = o, t.exports = n["default"];
                }, {} ],
                3: [ function(t, n, o) {
                    Object.defineProperty(o, "__esModule", {
                        value: !0
                    });
                    var a = t("./utils"), r = (t("./handle-swal-dom"), t("./handle-dom")), s = function(t, n, o) {
                        function s(e) {
                            m && n.confirmButtonColor && (p.style.backgroundColor = e);
                        }
                        var u, c, d, f = t || e.event, p = f.target || f.srcElement, m = -1 !== p.className.indexOf("confirm"), v = -1 !== p.className.indexOf("sweet-overlay"), y = r.hasClass(o, "visible"), h = n.doneFunction && "true" === o.getAttribute("data-has-done-function");
                        switch (m && n.confirmButtonColor && (u = n.confirmButtonColor, c = a.colorLuminance(u, -.04), 
                        d = a.colorLuminance(u, -.14)), f.type) {
                          case "mouseover":
                            s(c);
                            break;

                          case "mouseout":
                            s(u);
                            break;

                          case "mousedown":
                            s(d);
                            break;

                          case "mouseup":
                            s(c);
                            break;

                          case "focus":
                            var g = o.querySelector("button.confirm"), b = o.querySelector("button.cancel");
                            m ? b.style.boxShadow = "none" : g.style.boxShadow = "none";
                            break;

                          case "click":
                            var w = o === p, C = r.isDescendant(o, p);
                            if (!w && !C && y && !n.allowOutsideClick) break;
                            m && h && y ? l(o, n) : h && y || v ? i(o, n) : r.isDescendant(o, p) && "BUTTON" === p.tagName && sweetAlert.close();
                        }
                    }, l = function(e, t) {
                        var n = !0;
                        r.hasClass(e, "show-input") && (n = e.querySelector("input").value, n || (n = "")), 
                        t.doneFunction(n), t.closeOnConfirm && sweetAlert.close(), t.showLoaderOnConfirm && sweetAlert.disableButtons();
                    }, i = function(e, t) {
                        var n = String(t.doneFunction).replace(/\s/g, ""), o = "function(" === n.substring(0, 9) && ")" !== n.substring(9, 10);
                        o && t.doneFunction(!1), t.closeOnCancel && sweetAlert.close();
                    };
                    o["default"] = {
                        handleButton: s,
                        handleConfirm: l,
                        handleCancel: i
                    }, n.exports = o["default"];
                }, {
                    "./handle-dom": 4,
                    "./handle-swal-dom": 6,
                    "./utils": 9
                } ],
                4: [ function(n, o, a) {
                    Object.defineProperty(a, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t) {
                        return new RegExp(" " + t + " ").test(" " + e.className + " ");
                    }, s = function(e, t) {
                        r(e, t) || (e.className += " " + t);
                    }, l = function(e, t) {
                        var n = " " + e.className.replace(/[\t\r\n]/g, " ") + " ";
                        if (r(e, t)) {
                            for (;n.indexOf(" " + t + " ") >= 0; ) n = n.replace(" " + t + " ", " ");
                            e.className = n.replace(/^\s+|\s+$/g, "");
                        }
                    }, i = function(e) {
                        var n = t.createElement("div");
                        return n.appendChild(t.createTextNode(e)), n.innerHTML;
                    }, u = function(e) {
                        e.style.opacity = "", e.style.display = "block";
                    }, c = function(e) {
                        if (e && !e.length) return u(e);
                        for (var t = 0; t < e.length; ++t) u(e[t]);
                    }, d = function(e) {
                        e.style.opacity = "", e.style.display = "none";
                    }, f = function(e) {
                        if (e && !e.length) return d(e);
                        for (var t = 0; t < e.length; ++t) d(e[t]);
                    }, p = function(e, t) {
                        for (var n = t.parentNode; null !== n; ) {
                            if (n === e) return !0;
                            n = n.parentNode;
                        }
                        return !1;
                    }, m = function(e) {
                        e.style.left = "-9999px", e.style.display = "block";
                        var t, n = e.clientHeight;
                        return t = "undefined" != typeof getComputedStyle ? parseInt(getComputedStyle(e).getPropertyValue("padding-top"), 10) : parseInt(e.currentStyle.padding), 
                        e.style.left = "", e.style.display = "none", "-" + parseInt((n + t) / 2) + "px";
                    }, v = function(e, t) {
                        if (+e.style.opacity < 1) {
                            t = t || 16, e.style.opacity = 0, e.style.display = "block";
                            var n = +new Date(), o = function(e) {
                                function t() {
                                    return e.apply(this, arguments);
                                }
                                return t.toString = function() {
                                    return e.toString();
                                }, t;
                            }(function() {
                                e.style.opacity = +e.style.opacity + (new Date() - n) / 100, n = +new Date(), +e.style.opacity < 1 && setTimeout(o, t);
                            });
                            o();
                        }
                        e.style.display = "block";
                    }, y = function(e, t) {
                        t = t || 16, e.style.opacity = 1;
                        var n = +new Date(), o = function(e) {
                            function t() {
                                return e.apply(this, arguments);
                            }
                            return t.toString = function() {
                                return e.toString();
                            }, t;
                        }(function() {
                            e.style.opacity = +e.style.opacity - (new Date() - n) / 100, n = +new Date(), +e.style.opacity > 0 ? setTimeout(o, t) : e.style.display = "none";
                        });
                        o();
                    }, h = function(n) {
                        if ("function" == typeof MouseEvent) {
                            var o = new MouseEvent("click", {
                                view: e,
                                bubbles: !1,
                                cancelable: !0
                            });
                            n.dispatchEvent(o);
                        } else if (t.createEvent) {
                            var a = t.createEvent("MouseEvents");
                            a.initEvent("click", !1, !1), n.dispatchEvent(a);
                        } else t.createEventObject ? n.fireEvent("onclick") : "function" == typeof n.onclick && n.onclick();
                    }, g = function(t) {
                        "function" == typeof t.stopPropagation ? (t.stopPropagation(), t.preventDefault()) : e.event && e.event.hasOwnProperty("cancelBubble") && (e.event.cancelBubble = !0);
                    };
                    a.hasClass = r, a.addClass = s, a.removeClass = l, a.escapeHtml = i, a._show = u, 
                    a.show = c, a._hide = d, a.hide = f, a.isDescendant = p, a.getTopMargin = m, a.fadeIn = v, 
                    a.fadeOut = y, a.fireClick = h, a.stopEventPropagation = g;
                }, {} ],
                5: [ function(t, o, a) {
                    Object.defineProperty(a, "__esModule", {
                        value: !0
                    });
                    var r = t("./handle-dom"), s = t("./handle-swal-dom"), l = function(t, o, a) {
                        var l = t || e.event, i = l.keyCode || l.which, u = a.querySelector("button.confirm"), c = a.querySelector("button.cancel"), d = a.querySelectorAll("button[tabindex]");
                        if (-1 !== [ 9, 13, 32, 27 ].indexOf(i)) {
                            for (var f = l.target || l.srcElement, p = -1, m = 0; m < d.length; m++) if (f === d[m]) {
                                p = m;
                                break;
                            }
                            9 === i ? (f = -1 === p ? u : p === d.length - 1 ? d[0] : d[p + 1], r.stopEventPropagation(l), 
                            f.focus(), o.confirmButtonColor && s.setFocusStyle(f, o.confirmButtonColor)) : 13 === i ? ("INPUT" === f.tagName && (f = u, 
                            u.focus()), f = -1 === p ? u : n) : 27 === i && o.allowEscapeKey === !0 ? (f = c, 
                            r.fireClick(f, l)) : f = n;
                        }
                    };
                    a["default"] = l, o.exports = a["default"];
                }, {
                    "./handle-dom": 4,
                    "./handle-swal-dom": 6
                } ],
                6: [ function(n, o, a) {
                    var r = function(e) {
                        return e && e.__esModule ? e : {
                            "default": e
                        };
                    };
                    Object.defineProperty(a, "__esModule", {
                        value: !0
                    });
                    var s = n("./utils"), l = n("./handle-dom"), i = n("./default-params"), u = r(i), c = n("./injected-html"), d = r(c), f = ".sweet-alert", p = ".sweet-overlay", m = function() {
                        var e = t.createElement("div");
                        for (e.innerHTML = d["default"]; e.firstChild; ) t.body.appendChild(e.firstChild);
                    }, v = function(e) {
                        function t() {
                            return e.apply(this, arguments);
                        }
                        return t.toString = function() {
                            return e.toString();
                        }, t;
                    }(function() {
                        var e = t.querySelector(f);
                        return e || (m(), e = v()), e;
                    }), y = function() {
                        var e = v();
                        return e ? e.querySelector("input") : void 0;
                    }, h = function() {
                        return t.querySelector(p);
                    }, g = function(e, t) {
                        var n = s.hexToRgb(t);
                        e.style.boxShadow = "0 0 2px rgba(" + n + ", 0.8), inset 0 0 0 1px rgba(0, 0, 0, 0.05)";
                    }, b = function(n) {
                        var o = v();
                        l.fadeIn(h(), 10), l.show(o), l.addClass(o, "showSweetAlert"), l.removeClass(o, "hideSweetAlert"), 
                        e.previousActiveElement = t.activeElement;
                        var a = o.querySelector("button.confirm");
                        a.focus(), setTimeout(function() {
                            l.addClass(o, "visible");
                        }, 500);
                        var r = o.getAttribute("data-timer");
                        if ("null" !== r && "" !== r) {
                            var s = n;
                            o.timeout = setTimeout(function() {
                                var e = (s || null) && "true" === o.getAttribute("data-has-done-function");
                                e ? s(null) : sweetAlert.close();
                            }, r);
                        }
                    }, w = function() {
                        var e = v(), t = y();
                        l.removeClass(e, "show-input"), t.value = u["default"].inputValue, t.setAttribute("type", u["default"].inputType), 
                        t.setAttribute("placeholder", u["default"].inputPlaceholder), C();
                    }, C = function(e) {
                        if (e && 13 === e.keyCode) return !1;
                        var t = v(), n = t.querySelector(".sa-input-error");
                        l.removeClass(n, "show");
                        var o = t.querySelector(".sa-error-container");
                        l.removeClass(o, "show");
                    }, S = function() {
                        var e = v();
                        e.style.marginTop = l.getTopMargin(v());
                    };
                    a.sweetAlertInitialize = m, a.getModal = v, a.getOverlay = h, a.getInput = y, a.setFocusStyle = g, 
                    a.openModal = b, a.resetInput = w, a.resetInputError = C, a.fixVerticalPosition = S;
                }, {
                    "./default-params": 2,
                    "./handle-dom": 4,
                    "./injected-html": 7,
                    "./utils": 9
                } ],
                7: [ function(e, t, n) {
                    Object.defineProperty(n, "__esModule", {
                        value: !0
                    });
                    var o = '<div class="sweet-overlay" tabIndex="-1"></div><div class="sweet-alert"><div class="sa-icon sa-error">\n      <span class="sa-x-mark">\n        <span class="sa-line sa-left"></span>\n        <span class="sa-line sa-right"></span>\n      </span>\n    </div><div class="sa-icon sa-warning">\n      <span class="sa-body"></span>\n      <span class="sa-dot"></span>\n    </div><div class="sa-icon sa-info"></div><div class="sa-icon sa-success">\n      <span class="sa-line sa-tip"></span>\n      <span class="sa-line sa-long"></span>\n\n      <div class="sa-placeholder"></div>\n      <div class="sa-fix"></div>\n    </div><div class="sa-icon sa-custom"></div><h2>Title</h2>\n    <p>Text</p>\n    <fieldset>\n      <input type="text" tabIndex="3" />\n      <div class="sa-input-error"></div>\n    </fieldset><div class="sa-error-container">\n      <div class="icon">!</div>\n      <p>Not valid!</p>\n    </div><div class="sa-button-container">\n      <button class="cancel" tabIndex="2">Cancel</button>\n      <div class="sa-confirm-button-container">\n        <button class="confirm" tabIndex="1">OK</button><div class="la-ball-fall">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div></div>';
                    n["default"] = o, t.exports = n["default"];
                }, {} ],
                8: [ function(e, t, o) {
                    Object.defineProperty(o, "__esModule", {
                        value: !0
                    });
                    var a = e("./utils"), r = e("./handle-swal-dom"), s = e("./handle-dom"), l = [ "error", "warning", "info", "success", "input", "prompt" ], i = function(e) {
                        var t = r.getModal(), o = t.querySelector("h2"), i = t.querySelector("p"), u = t.querySelector("button.cancel"), c = t.querySelector("button.confirm");
                        if (o.innerHTML = e.html ? e.title : s.escapeHtml(e.title).split("\n").join("<br>"), 
                        i.innerHTML = e.html ? e.text : s.escapeHtml(e.text || "").split("\n").join("<br>"), 
                        e.text && s.show(i), e.customClass) s.addClass(t, e.customClass), t.setAttribute("data-custom-class", e.customClass); else {
                            var d = t.getAttribute("data-custom-class");
                            s.removeClass(t, d), t.setAttribute("data-custom-class", "");
                        }
                        if (s.hide(t.querySelectorAll(".sa-icon")), e.type && !a.isIE8()) {
                            var f = function() {
                                for (var o = !1, a = 0; a < l.length; a++) if (e.type === l[a]) {
                                    o = !0;
                                    break;
                                }
                                if (!o) return logStr("Unknown alert type: " + e.type), {
                                    v: !1
                                };
                                var i = [ "success", "error", "warning", "info" ], u = n;
                                -1 !== i.indexOf(e.type) && (u = t.querySelector(".sa-icon.sa-" + e.type), s.show(u));
                                var c = r.getInput();
                                switch (e.type) {
                                  case "success":
                                    s.addClass(u, "animate"), s.addClass(u.querySelector(".sa-tip"), "animateSuccessTip"), 
                                    s.addClass(u.querySelector(".sa-long"), "animateSuccessLong");
                                    break;

                                  case "error":
                                    s.addClass(u, "animateErrorIcon"), s.addClass(u.querySelector(".sa-x-mark"), "animateXMark");
                                    break;

                                  case "warning":
                                    s.addClass(u, "pulseWarning"), s.addClass(u.querySelector(".sa-body"), "pulseWarningIns"), 
                                    s.addClass(u.querySelector(".sa-dot"), "pulseWarningIns");
                                    break;

                                  case "input":
                                  case "prompt":
                                    c.setAttribute("type", e.inputType), c.value = e.inputValue, c.setAttribute("placeholder", e.inputPlaceholder), 
                                    s.addClass(t, "show-input"), setTimeout(function() {
                                        c.focus(), c.addEventListener("keyup", swal.resetInputError);
                                    }, 400);
                                }
                            }();
                            if ("object" == typeof f) return f.v;
                        }
                        if (e.imageUrl) {
                            var p = t.querySelector(".sa-icon.sa-custom");
                            p.style.backgroundImage = "url(" + e.imageUrl + ")", s.show(p);
                            var m = 80, v = 80;
                            if (e.imageSize) {
                                var y = e.imageSize.toString().split("x"), h = y[0], g = y[1];
                                h && g ? (m = h, v = g) : logStr("Parameter imageSize expects value with format WIDTHxHEIGHT, got " + e.imageSize);
                            }
                            p.setAttribute("style", p.getAttribute("style") + "width:" + m + "px; height:" + v + "px");
                        }
                        t.setAttribute("data-has-cancel-button", e.showCancelButton), e.showCancelButton ? u.style.display = "inline-block" : s.hide(u), 
                        t.setAttribute("data-has-confirm-button", e.showConfirmButton), e.showConfirmButton ? c.style.display = "inline-block" : s.hide(c), 
                        e.cancelButtonText && (u.innerHTML = s.escapeHtml(e.cancelButtonText)), e.confirmButtonText && (c.innerHTML = s.escapeHtml(e.confirmButtonText)), 
                        e.confirmButtonColor && (c.style.backgroundColor = e.confirmButtonColor, c.style.borderLeftColor = e.confirmLoadingButtonColor, 
                        c.style.borderRightColor = e.confirmLoadingButtonColor, r.setFocusStyle(c, e.confirmButtonColor)), 
                        t.setAttribute("data-allow-outside-click", e.allowOutsideClick);
                        var b = e.doneFunction ? !0 : !1;
                        t.setAttribute("data-has-done-function", b), e.animation ? "string" == typeof e.animation ? t.setAttribute("data-animation", e.animation) : t.setAttribute("data-animation", "pop") : t.setAttribute("data-animation", "none"), 
                        t.setAttribute("data-timer", e.timer);
                    };
                    o["default"] = i, t.exports = o["default"];
                }, {
                    "./handle-dom": 4,
                    "./handle-swal-dom": 6,
                    "./utils": 9
                } ],
                9: [ function(t, n, o) {
                    Object.defineProperty(o, "__esModule", {
                        value: !0
                    });
                    var a = function(e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                        return e;
                    }, r = function(e) {
                        var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                        return t ? parseInt(t[1], 16) + ", " + parseInt(t[2], 16) + ", " + parseInt(t[3], 16) : null;
                    }, s = function() {
                        return e.attachEvent && !e.addEventListener;
                    }, l = function(t) {
                        e.console && e.console.log("SweetAlert: " + t);
                    }, i = function(e, t) {
                        e = String(e).replace(/[^0-9a-f]/gi, ""), e.length < 6 && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]), 
                        t = t || 0;
                        var n, o, a = "#";
                        for (o = 0; 3 > o; o++) n = parseInt(e.substr(2 * o, 2), 16), n = Math.round(Math.min(Math.max(0, n + n * t), 255)).toString(16), 
                        a += ("00" + n).substr(n.length);
                        return a;
                    };
                    o.extend = a, o.hexToRgb = r, o.isIE8 = s, o.logStr = l, o.colorLuminance = i;
                }, {} ]
            }, {}, [ 1 ]), "function" == typeof define && define.amd ? define(function() {
                return sweetAlert;
            }) : "undefined" != typeof module && module.exports && (module.exports = sweetAlert);
        }(window, document);
    }, {} ],
    70: [ function(require, module, exports) {
        var createElement = require("./vdom/create-element.js");
        module.exports = createElement;
    }, {
        "./vdom/create-element.js": 82
    } ],
    71: [ function(require, module, exports) {
        var diff = require("./vtree/diff.js");
        module.exports = diff;
    }, {
        "./vtree/diff.js": 102
    } ],
    72: [ function(require, module, exports) {
        var h = require("./virtual-hyperscript/index.js");
        module.exports = h;
    }, {
        "./virtual-hyperscript/index.js": 89
    } ],
    73: [ function(require, module, exports) {
        module.exports = function split(undef) {
            var nativeSplit = String.prototype.split, compliantExecNpcg = /()??/.exec("")[1] === undef, self;
            self = function(str, separator, limit) {
                if (Object.prototype.toString.call(separator) !== "[object RegExp]") {
                    return nativeSplit.call(str, separator, limit);
                }
                var output = [], flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.extended ? "x" : "") + (separator.sticky ? "y" : ""), lastLastIndex = 0, separator = new RegExp(separator.source, flags + "g"), separator2, match, lastIndex, lastLength;
                str += "";
                if (!compliantExecNpcg) {
                    separator2 = new RegExp("^" + separator.source + "$(?!\\s)", flags);
                }
                limit = limit === undef ? -1 >>> 0 : limit >>> 0;
                while (match = separator.exec(str)) {
                    lastIndex = match.index + match[0].length;
                    if (lastIndex > lastLastIndex) {
                        output.push(str.slice(lastLastIndex, match.index));
                        if (!compliantExecNpcg && match.length > 1) {
                            match[0].replace(separator2, function() {
                                for (var i = 1; i < arguments.length - 2; i++) {
                                    if (arguments[i] === undef) {
                                        match[i] = undef;
                                    }
                                }
                            });
                        }
                        if (match.length > 1 && match.index < str.length) {
                            Array.prototype.push.apply(output, match.slice(1));
                        }
                        lastLength = match[0].length;
                        lastLastIndex = lastIndex;
                        if (output.length >= limit) {
                            break;
                        }
                    }
                    if (separator.lastIndex === match.index) {
                        separator.lastIndex++;
                    }
                }
                if (lastLastIndex === str.length) {
                    if (lastLength || !separator.test("")) {
                        output.push("");
                    }
                } else {
                    output.push(str.slice(lastLastIndex));
                }
                return output.length > limit ? output.slice(0, limit) : output;
            };
            return self;
        }();
    }, {} ],
    74: [ function(require, module, exports) {
        "use strict";
        var OneVersionConstraint = require("individual/one-version");
        var MY_VERSION = "7";
        OneVersionConstraint("ev-store", MY_VERSION);
        var hashKey = "__EV_STORE_KEY@" + MY_VERSION;
        module.exports = EvStore;
        function EvStore(elem) {
            var hash = elem[hashKey];
            if (!hash) {
                hash = elem[hashKey] = {};
            }
            return hash;
        }
    }, {
        "individual/one-version": 76
    } ],
    75: [ function(require, module, exports) {
        (function(global) {
            "use strict";
            var root = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
            module.exports = Individual;
            function Individual(key, value) {
                if (key in root) {
                    return root[key];
                }
                root[key] = value;
                return value;
            }
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {} ],
    76: [ function(require, module, exports) {
        "use strict";
        var Individual = require("./index.js");
        module.exports = OneVersion;
        function OneVersion(moduleName, version, defaultValue) {
            var key = "__INDIVIDUAL_ONE_VERSION_" + moduleName;
            var enforceKey = key + "_ENFORCE_SINGLETON";
            var versionValue = Individual(enforceKey, version);
            if (versionValue !== version) {
                throw new Error("Can only have one copy of " + moduleName + ".\n" + "You already have version " + versionValue + " installed.\n" + "This means you cannot install version " + version);
            }
            return Individual(key, defaultValue);
        }
    }, {
        "./index.js": 75
    } ],
    77: [ function(require, module, exports) {
        (function(global) {
            var topLevel = typeof global !== "undefined" ? global : typeof window !== "undefined" ? window : {};
            var minDoc = require("min-document");
            if (typeof document !== "undefined") {
                module.exports = document;
            } else {
                var doccy = topLevel["__GLOBAL_DOCUMENT_CACHE@4"];
                if (!doccy) {
                    doccy = topLevel["__GLOBAL_DOCUMENT_CACHE@4"] = minDoc;
                }
                module.exports = doccy;
            }
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {
        "min-document": 9
    } ],
    78: [ function(require, module, exports) {
        "use strict";
        module.exports = function isObject(x) {
            return typeof x === "object" && x !== null;
        };
    }, {} ],
    79: [ function(require, module, exports) {
        var nativeIsArray = Array.isArray;
        var toString = Object.prototype.toString;
        module.exports = nativeIsArray || isArray;
        function isArray(obj) {
            return toString.call(obj) === "[object Array]";
        }
    }, {} ],
    80: [ function(require, module, exports) {
        var patch = require("./vdom/patch.js");
        module.exports = patch;
    }, {
        "./vdom/patch.js": 85
    } ],
    81: [ function(require, module, exports) {
        var isObject = require("is-object");
        var isHook = require("../vnode/is-vhook.js");
        module.exports = applyProperties;
        function applyProperties(node, props, previous) {
            for (var propName in props) {
                var propValue = props[propName];
                if (propValue === undefined) {
                    removeProperty(node, propName, propValue, previous);
                } else if (isHook(propValue)) {
                    removeProperty(node, propName, propValue, previous);
                    if (propValue.hook) {
                        propValue.hook(node, propName, previous ? previous[propName] : undefined);
                    }
                } else {
                    if (isObject(propValue)) {
                        patchObject(node, props, previous, propName, propValue);
                    } else {
                        node[propName] = propValue;
                    }
                }
            }
        }
        function removeProperty(node, propName, propValue, previous) {
            if (previous) {
                var previousValue = previous[propName];
                if (!isHook(previousValue)) {
                    if (propName === "attributes") {
                        for (var attrName in previousValue) {
                            node.removeAttribute(attrName);
                        }
                    } else if (propName === "style") {
                        for (var i in previousValue) {
                            node.style[i] = "";
                        }
                    } else if (typeof previousValue === "string") {
                        node[propName] = "";
                    } else {
                        node[propName] = null;
                    }
                } else if (previousValue.unhook) {
                    previousValue.unhook(node, propName, propValue);
                }
            }
        }
        function patchObject(node, props, previous, propName, propValue) {
            var previousValue = previous ? previous[propName] : undefined;
            if (propName === "attributes") {
                for (var attrName in propValue) {
                    var attrValue = propValue[attrName];
                    if (attrValue === undefined) {
                        node.removeAttribute(attrName);
                    } else {
                        node.setAttribute(attrName, attrValue);
                    }
                }
                return;
            }
            if (previousValue && isObject(previousValue) && getPrototype(previousValue) !== getPrototype(propValue)) {
                node[propName] = propValue;
                return;
            }
            if (!isObject(node[propName])) {
                node[propName] = {};
            }
            var replacer = propName === "style" ? "" : undefined;
            for (var k in propValue) {
                var value = propValue[k];
                node[propName][k] = value === undefined ? replacer : value;
            }
        }
        function getPrototype(value) {
            if (Object.getPrototypeOf) {
                return Object.getPrototypeOf(value);
            } else if (value.__proto__) {
                return value.__proto__;
            } else if (value.constructor) {
                return value.constructor.prototype;
            }
        }
    }, {
        "../vnode/is-vhook.js": 93,
        "is-object": 78
    } ],
    82: [ function(require, module, exports) {
        var document = require("global/document");
        var applyProperties = require("./apply-properties");
        var isVNode = require("../vnode/is-vnode.js");
        var isVText = require("../vnode/is-vtext.js");
        var isWidget = require("../vnode/is-widget.js");
        var handleThunk = require("../vnode/handle-thunk.js");
        module.exports = createElement;
        function createElement(vnode, opts) {
            var doc = opts ? opts.document || document : document;
            var warn = opts ? opts.warn : null;
            vnode = handleThunk(vnode).a;
            if (isWidget(vnode)) {
                return vnode.init();
            } else if (isVText(vnode)) {
                return doc.createTextNode(vnode.text);
            } else if (!isVNode(vnode)) {
                if (warn) {
                    warn("Item is not a valid virtual dom node", vnode);
                }
                return null;
            }
            var node = vnode.namespace === null ? doc.createElement(vnode.tagName) : doc.createElementNS(vnode.namespace, vnode.tagName);
            var props = vnode.properties;
            applyProperties(node, props);
            var children = vnode.children;
            for (var i = 0; i < children.length; i++) {
                var childNode = createElement(children[i], opts);
                if (childNode) {
                    node.appendChild(childNode);
                }
            }
            return node;
        }
    }, {
        "../vnode/handle-thunk.js": 91,
        "../vnode/is-vnode.js": 94,
        "../vnode/is-vtext.js": 95,
        "../vnode/is-widget.js": 96,
        "./apply-properties": 81,
        "global/document": 77
    } ],
    83: [ function(require, module, exports) {
        var noChild = {};
        module.exports = domIndex;
        function domIndex(rootNode, tree, indices, nodes) {
            if (!indices || indices.length === 0) {
                return {};
            } else {
                indices.sort(ascending);
                return recurse(rootNode, tree, indices, nodes, 0);
            }
        }
        function recurse(rootNode, tree, indices, nodes, rootIndex) {
            nodes = nodes || {};
            if (rootNode) {
                if (indexInRange(indices, rootIndex, rootIndex)) {
                    nodes[rootIndex] = rootNode;
                }
                var vChildren = tree.children;
                if (vChildren) {
                    var childNodes = rootNode.childNodes;
                    for (var i = 0; i < tree.children.length; i++) {
                        rootIndex += 1;
                        var vChild = vChildren[i] || noChild;
                        var nextIndex = rootIndex + (vChild.count || 0);
                        if (indexInRange(indices, rootIndex, nextIndex)) {
                            recurse(childNodes[i], vChild, indices, nodes, rootIndex);
                        }
                        rootIndex = nextIndex;
                    }
                }
            }
            return nodes;
        }
        function indexInRange(indices, left, right) {
            if (indices.length === 0) {
                return false;
            }
            var minIndex = 0;
            var maxIndex = indices.length - 1;
            var currentIndex;
            var currentItem;
            while (minIndex <= maxIndex) {
                currentIndex = (maxIndex + minIndex) / 2 >> 0;
                currentItem = indices[currentIndex];
                if (minIndex === maxIndex) {
                    return currentItem >= left && currentItem <= right;
                } else if (currentItem < left) {
                    minIndex = currentIndex + 1;
                } else if (currentItem > right) {
                    maxIndex = currentIndex - 1;
                } else {
                    return true;
                }
            }
            return false;
        }
        function ascending(a, b) {
            return a > b ? 1 : -1;
        }
    }, {} ],
    84: [ function(require, module, exports) {
        var applyProperties = require("./apply-properties");
        var isWidget = require("../vnode/is-widget.js");
        var VPatch = require("../vnode/vpatch.js");
        var updateWidget = require("./update-widget");
        module.exports = applyPatch;
        function applyPatch(vpatch, domNode, renderOptions) {
            var type = vpatch.type;
            var vNode = vpatch.vNode;
            var patch = vpatch.patch;
            switch (type) {
              case VPatch.REMOVE:
                return removeNode(domNode, vNode);

              case VPatch.INSERT:
                return insertNode(domNode, patch, renderOptions);

              case VPatch.VTEXT:
                return stringPatch(domNode, vNode, patch, renderOptions);

              case VPatch.WIDGET:
                return widgetPatch(domNode, vNode, patch, renderOptions);

              case VPatch.VNODE:
                return vNodePatch(domNode, vNode, patch, renderOptions);

              case VPatch.ORDER:
                reorderChildren(domNode, patch);
                return domNode;

              case VPatch.PROPS:
                applyProperties(domNode, patch, vNode.properties);
                return domNode;

              case VPatch.THUNK:
                return replaceRoot(domNode, renderOptions.patch(domNode, patch, renderOptions));

              default:
                return domNode;
            }
        }
        function removeNode(domNode, vNode) {
            var parentNode = domNode.parentNode;
            if (parentNode) {
                parentNode.removeChild(domNode);
            }
            destroyWidget(domNode, vNode);
            return null;
        }
        function insertNode(parentNode, vNode, renderOptions) {
            var newNode = renderOptions.render(vNode, renderOptions);
            if (parentNode) {
                parentNode.appendChild(newNode);
            }
            return parentNode;
        }
        function stringPatch(domNode, leftVNode, vText, renderOptions) {
            var newNode;
            if (domNode.nodeType === 3) {
                domNode.replaceData(0, domNode.length, vText.text);
                newNode = domNode;
            } else {
                var parentNode = domNode.parentNode;
                newNode = renderOptions.render(vText, renderOptions);
                if (parentNode && newNode !== domNode) {
                    parentNode.replaceChild(newNode, domNode);
                }
            }
            return newNode;
        }
        function widgetPatch(domNode, leftVNode, widget, renderOptions) {
            var updating = updateWidget(leftVNode, widget);
            var newNode;
            if (updating) {
                newNode = widget.update(leftVNode, domNode) || domNode;
            } else {
                newNode = renderOptions.render(widget, renderOptions);
            }
            var parentNode = domNode.parentNode;
            if (parentNode && newNode !== domNode) {
                parentNode.replaceChild(newNode, domNode);
            }
            if (!updating) {
                destroyWidget(domNode, leftVNode);
            }
            return newNode;
        }
        function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
            var parentNode = domNode.parentNode;
            var newNode = renderOptions.render(vNode, renderOptions);
            if (parentNode && newNode !== domNode) {
                parentNode.replaceChild(newNode, domNode);
            }
            return newNode;
        }
        function destroyWidget(domNode, w) {
            if (typeof w.destroy === "function" && isWidget(w)) {
                w.destroy(domNode);
            }
        }
        function reorderChildren(domNode, moves) {
            var childNodes = domNode.childNodes;
            var keyMap = {};
            var node;
            var remove;
            var insert;
            for (var i = 0; i < moves.removes.length; i++) {
                remove = moves.removes[i];
                node = childNodes[remove.from];
                if (remove.key) {
                    keyMap[remove.key] = node;
                }
                domNode.removeChild(node);
            }
            var length = childNodes.length;
            for (var j = 0; j < moves.inserts.length; j++) {
                insert = moves.inserts[j];
                node = keyMap[insert.key];
                domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to]);
            }
        }
        function replaceRoot(oldRoot, newRoot) {
            if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
                oldRoot.parentNode.replaceChild(newRoot, oldRoot);
            }
            return newRoot;
        }
    }, {
        "../vnode/is-widget.js": 96,
        "../vnode/vpatch.js": 99,
        "./apply-properties": 81,
        "./update-widget": 86
    } ],
    85: [ function(require, module, exports) {
        var document = require("global/document");
        var isArray = require("x-is-array");
        var render = require("./create-element");
        var domIndex = require("./dom-index");
        var patchOp = require("./patch-op");
        module.exports = patch;
        function patch(rootNode, patches, renderOptions) {
            renderOptions = renderOptions || {};
            renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch ? renderOptions.patch : patchRecursive;
            renderOptions.render = renderOptions.render || render;
            return renderOptions.patch(rootNode, patches, renderOptions);
        }
        function patchRecursive(rootNode, patches, renderOptions) {
            var indices = patchIndices(patches);
            if (indices.length === 0) {
                return rootNode;
            }
            var index = domIndex(rootNode, patches.a, indices);
            var ownerDocument = rootNode.ownerDocument;
            if (!renderOptions.document && ownerDocument !== document) {
                renderOptions.document = ownerDocument;
            }
            for (var i = 0; i < indices.length; i++) {
                var nodeIndex = indices[i];
                rootNode = applyPatch(rootNode, index[nodeIndex], patches[nodeIndex], renderOptions);
            }
            return rootNode;
        }
        function applyPatch(rootNode, domNode, patchList, renderOptions) {
            if (!domNode) {
                return rootNode;
            }
            var newNode;
            if (isArray(patchList)) {
                for (var i = 0; i < patchList.length; i++) {
                    newNode = patchOp(patchList[i], domNode, renderOptions);
                    if (domNode === rootNode) {
                        rootNode = newNode;
                    }
                }
            } else {
                newNode = patchOp(patchList, domNode, renderOptions);
                if (domNode === rootNode) {
                    rootNode = newNode;
                }
            }
            return rootNode;
        }
        function patchIndices(patches) {
            var indices = [];
            for (var key in patches) {
                if (key !== "a") {
                    indices.push(Number(key));
                }
            }
            return indices;
        }
    }, {
        "./create-element": 82,
        "./dom-index": 83,
        "./patch-op": 84,
        "global/document": 77,
        "x-is-array": 79
    } ],
    86: [ function(require, module, exports) {
        var isWidget = require("../vnode/is-widget.js");
        module.exports = updateWidget;
        function updateWidget(a, b) {
            if (isWidget(a) && isWidget(b)) {
                if ("name" in a && "name" in b) {
                    return a.id === b.id;
                } else {
                    return a.init === b.init;
                }
            }
            return false;
        }
    }, {
        "../vnode/is-widget.js": 96
    } ],
    87: [ function(require, module, exports) {
        "use strict";
        var EvStore = require("ev-store");
        module.exports = EvHook;
        function EvHook(value) {
            if (!(this instanceof EvHook)) {
                return new EvHook(value);
            }
            this.value = value;
        }
        EvHook.prototype.hook = function(node, propertyName) {
            var es = EvStore(node);
            var propName = propertyName.substr(3);
            es[propName] = this.value;
        };
        EvHook.prototype.unhook = function(node, propertyName) {
            var es = EvStore(node);
            var propName = propertyName.substr(3);
            es[propName] = undefined;
        };
    }, {
        "ev-store": 74
    } ],
    88: [ function(require, module, exports) {
        "use strict";
        module.exports = SoftSetHook;
        function SoftSetHook(value) {
            if (!(this instanceof SoftSetHook)) {
                return new SoftSetHook(value);
            }
            this.value = value;
        }
        SoftSetHook.prototype.hook = function(node, propertyName) {
            if (node[propertyName] !== this.value) {
                node[propertyName] = this.value;
            }
        };
    }, {} ],
    89: [ function(require, module, exports) {
        "use strict";
        var isArray = require("x-is-array");
        var VNode = require("../vnode/vnode.js");
        var VText = require("../vnode/vtext.js");
        var isVNode = require("../vnode/is-vnode");
        var isVText = require("../vnode/is-vtext");
        var isWidget = require("../vnode/is-widget");
        var isHook = require("../vnode/is-vhook");
        var isVThunk = require("../vnode/is-thunk");
        var parseTag = require("./parse-tag.js");
        var softSetHook = require("./hooks/soft-set-hook.js");
        var evHook = require("./hooks/ev-hook.js");
        module.exports = h;
        function h(tagName, properties, children) {
            var childNodes = [];
            var tag, props, key, namespace;
            if (!children && isChildren(properties)) {
                children = properties;
                props = {};
            }
            props = props || properties || {};
            tag = parseTag(tagName, props);
            if (props.hasOwnProperty("key")) {
                key = props.key;
                props.key = undefined;
            }
            if (props.hasOwnProperty("namespace")) {
                namespace = props.namespace;
                props.namespace = undefined;
            }
            if (tag === "INPUT" && !namespace && props.hasOwnProperty("value") && props.value !== undefined && !isHook(props.value)) {
                props.value = softSetHook(props.value);
            }
            transformProperties(props);
            if (children !== undefined && children !== null) {
                addChild(children, childNodes, tag, props);
            }
            return new VNode(tag, props, childNodes, key, namespace);
        }
        function addChild(c, childNodes, tag, props) {
            if (typeof c === "string") {
                childNodes.push(new VText(c));
            } else if (typeof c === "number") {
                childNodes.push(new VText(String(c)));
            } else if (isChild(c)) {
                childNodes.push(c);
            } else if (isArray(c)) {
                for (var i = 0; i < c.length; i++) {
                    addChild(c[i], childNodes, tag, props);
                }
            } else if (c === null || c === undefined) {
                return;
            } else {
                throw UnexpectedVirtualElement({
                    foreignObject: c,
                    parentVnode: {
                        tagName: tag,
                        properties: props
                    }
                });
            }
        }
        function transformProperties(props) {
            for (var propName in props) {
                if (props.hasOwnProperty(propName)) {
                    var value = props[propName];
                    if (isHook(value)) {
                        continue;
                    }
                    if (propName.substr(0, 3) === "ev-") {
                        props[propName] = evHook(value);
                    }
                }
            }
        }
        function isChild(x) {
            return isVNode(x) || isVText(x) || isWidget(x) || isVThunk(x);
        }
        function isChildren(x) {
            return typeof x === "string" || isArray(x) || isChild(x);
        }
        function UnexpectedVirtualElement(data) {
            var err = new Error();
            err.type = "virtual-hyperscript.unexpected.virtual-element";
            err.message = "Unexpected virtual child passed to h().\n" + "Expected a VNode / Vthunk / VWidget / string but:\n" + "got:\n" + errorString(data.foreignObject) + ".\n" + "The parent vnode is:\n" + errorString(data.parentVnode);
            "\n" + "Suggested fix: change your `h(..., [ ... ])` callsite.";
            err.foreignObject = data.foreignObject;
            err.parentVnode = data.parentVnode;
            return err;
        }
        function errorString(obj) {
            try {
                return JSON.stringify(obj, null, "    ");
            } catch (e) {
                return String(obj);
            }
        }
    }, {
        "../vnode/is-thunk": 92,
        "../vnode/is-vhook": 93,
        "../vnode/is-vnode": 94,
        "../vnode/is-vtext": 95,
        "../vnode/is-widget": 96,
        "../vnode/vnode.js": 98,
        "../vnode/vtext.js": 100,
        "./hooks/ev-hook.js": 87,
        "./hooks/soft-set-hook.js": 88,
        "./parse-tag.js": 90,
        "x-is-array": 79
    } ],
    90: [ function(require, module, exports) {
        "use strict";
        var split = require("browser-split");
        var classIdSplit = /([\.#]?[a-zA-Z0-9\u007F-\uFFFF_:-]+)/;
        var notClassId = /^\.|#/;
        module.exports = parseTag;
        function parseTag(tag, props) {
            if (!tag) {
                return "DIV";
            }
            var noId = !props.hasOwnProperty("id");
            var tagParts = split(tag, classIdSplit);
            var tagName = null;
            if (notClassId.test(tagParts[1])) {
                tagName = "DIV";
            }
            var classes, part, type, i;
            for (i = 0; i < tagParts.length; i++) {
                part = tagParts[i];
                if (!part) {
                    continue;
                }
                type = part.charAt(0);
                if (!tagName) {
                    tagName = part;
                } else if (type === ".") {
                    classes = classes || [];
                    classes.push(part.substring(1, part.length));
                } else if (type === "#" && noId) {
                    props.id = part.substring(1, part.length);
                }
            }
            if (classes) {
                if (props.className) {
                    classes.push(props.className);
                }
                props.className = classes.join(" ");
            }
            return props.namespace ? tagName : tagName.toUpperCase();
        }
    }, {
        "browser-split": 73
    } ],
    91: [ function(require, module, exports) {
        var isVNode = require("./is-vnode");
        var isVText = require("./is-vtext");
        var isWidget = require("./is-widget");
        var isThunk = require("./is-thunk");
        module.exports = handleThunk;
        function handleThunk(a, b) {
            var renderedA = a;
            var renderedB = b;
            if (isThunk(b)) {
                renderedB = renderThunk(b, a);
            }
            if (isThunk(a)) {
                renderedA = renderThunk(a, null);
            }
            return {
                a: renderedA,
                b: renderedB
            };
        }
        function renderThunk(thunk, previous) {
            var renderedThunk = thunk.vnode;
            if (!renderedThunk) {
                renderedThunk = thunk.vnode = thunk.render(previous);
            }
            if (!(isVNode(renderedThunk) || isVText(renderedThunk) || isWidget(renderedThunk))) {
                throw new Error("thunk did not return a valid node");
            }
            return renderedThunk;
        }
    }, {
        "./is-thunk": 92,
        "./is-vnode": 94,
        "./is-vtext": 95,
        "./is-widget": 96
    } ],
    92: [ function(require, module, exports) {
        module.exports = isThunk;
        function isThunk(t) {
            return t && t.type === "Thunk";
        }
    }, {} ],
    93: [ function(require, module, exports) {
        module.exports = isHook;
        function isHook(hook) {
            return hook && (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") || typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"));
        }
    }, {} ],
    94: [ function(require, module, exports) {
        var version = require("./version");
        module.exports = isVirtualNode;
        function isVirtualNode(x) {
            return x && x.type === "VirtualNode" && x.version === version;
        }
    }, {
        "./version": 97
    } ],
    95: [ function(require, module, exports) {
        var version = require("./version");
        module.exports = isVirtualText;
        function isVirtualText(x) {
            return x && x.type === "VirtualText" && x.version === version;
        }
    }, {
        "./version": 97
    } ],
    96: [ function(require, module, exports) {
        module.exports = isWidget;
        function isWidget(w) {
            return w && w.type === "Widget";
        }
    }, {} ],
    97: [ function(require, module, exports) {
        module.exports = "2";
    }, {} ],
    98: [ function(require, module, exports) {
        var version = require("./version");
        var isVNode = require("./is-vnode");
        var isWidget = require("./is-widget");
        var isThunk = require("./is-thunk");
        var isVHook = require("./is-vhook");
        module.exports = VirtualNode;
        var noProperties = {};
        var noChildren = [];
        function VirtualNode(tagName, properties, children, key, namespace) {
            this.tagName = tagName;
            this.properties = properties || noProperties;
            this.children = children || noChildren;
            this.key = key != null ? String(key) : undefined;
            this.namespace = typeof namespace === "string" ? namespace : null;
            var count = children && children.length || 0;
            var descendants = 0;
            var hasWidgets = false;
            var hasThunks = false;
            var descendantHooks = false;
            var hooks;
            for (var propName in properties) {
                if (properties.hasOwnProperty(propName)) {
                    var property = properties[propName];
                    if (isVHook(property) && property.unhook) {
                        if (!hooks) {
                            hooks = {};
                        }
                        hooks[propName] = property;
                    }
                }
            }
            for (var i = 0; i < count; i++) {
                var child = children[i];
                if (isVNode(child)) {
                    descendants += child.count || 0;
                    if (!hasWidgets && child.hasWidgets) {
                        hasWidgets = true;
                    }
                    if (!hasThunks && child.hasThunks) {
                        hasThunks = true;
                    }
                    if (!descendantHooks && (child.hooks || child.descendantHooks)) {
                        descendantHooks = true;
                    }
                } else if (!hasWidgets && isWidget(child)) {
                    if (typeof child.destroy === "function") {
                        hasWidgets = true;
                    }
                } else if (!hasThunks && isThunk(child)) {
                    hasThunks = true;
                }
            }
            this.count = count + descendants;
            this.hasWidgets = hasWidgets;
            this.hasThunks = hasThunks;
            this.hooks = hooks;
            this.descendantHooks = descendantHooks;
        }
        VirtualNode.prototype.version = version;
        VirtualNode.prototype.type = "VirtualNode";
    }, {
        "./is-thunk": 92,
        "./is-vhook": 93,
        "./is-vnode": 94,
        "./is-widget": 96,
        "./version": 97
    } ],
    99: [ function(require, module, exports) {
        var version = require("./version");
        VirtualPatch.NONE = 0;
        VirtualPatch.VTEXT = 1;
        VirtualPatch.VNODE = 2;
        VirtualPatch.WIDGET = 3;
        VirtualPatch.PROPS = 4;
        VirtualPatch.ORDER = 5;
        VirtualPatch.INSERT = 6;
        VirtualPatch.REMOVE = 7;
        VirtualPatch.THUNK = 8;
        module.exports = VirtualPatch;
        function VirtualPatch(type, vNode, patch) {
            this.type = Number(type);
            this.vNode = vNode;
            this.patch = patch;
        }
        VirtualPatch.prototype.version = version;
        VirtualPatch.prototype.type = "VirtualPatch";
    }, {
        "./version": 97
    } ],
    100: [ function(require, module, exports) {
        var version = require("./version");
        module.exports = VirtualText;
        function VirtualText(text) {
            this.text = String(text);
        }
        VirtualText.prototype.version = version;
        VirtualText.prototype.type = "VirtualText";
    }, {
        "./version": 97
    } ],
    101: [ function(require, module, exports) {
        var isObject = require("is-object");
        var isHook = require("../vnode/is-vhook");
        module.exports = diffProps;
        function diffProps(a, b) {
            var diff;
            for (var aKey in a) {
                if (!(aKey in b)) {
                    diff = diff || {};
                    diff[aKey] = undefined;
                }
                var aValue = a[aKey];
                var bValue = b[aKey];
                if (aValue === bValue) {
                    continue;
                } else if (isObject(aValue) && isObject(bValue)) {
                    if (getPrototype(bValue) !== getPrototype(aValue)) {
                        diff = diff || {};
                        diff[aKey] = bValue;
                    } else if (isHook(bValue)) {
                        diff = diff || {};
                        diff[aKey] = bValue;
                    } else {
                        var objectDiff = diffProps(aValue, bValue);
                        if (objectDiff) {
                            diff = diff || {};
                            diff[aKey] = objectDiff;
                        }
                    }
                } else {
                    diff = diff || {};
                    diff[aKey] = bValue;
                }
            }
            for (var bKey in b) {
                if (!(bKey in a)) {
                    diff = diff || {};
                    diff[bKey] = b[bKey];
                }
            }
            return diff;
        }
        function getPrototype(value) {
            if (Object.getPrototypeOf) {
                return Object.getPrototypeOf(value);
            } else if (value.__proto__) {
                return value.__proto__;
            } else if (value.constructor) {
                return value.constructor.prototype;
            }
        }
    }, {
        "../vnode/is-vhook": 93,
        "is-object": 78
    } ],
    102: [ function(require, module, exports) {
        var isArray = require("x-is-array");
        var VPatch = require("../vnode/vpatch");
        var isVNode = require("../vnode/is-vnode");
        var isVText = require("../vnode/is-vtext");
        var isWidget = require("../vnode/is-widget");
        var isThunk = require("../vnode/is-thunk");
        var handleThunk = require("../vnode/handle-thunk");
        var diffProps = require("./diff-props");
        module.exports = diff;
        function diff(a, b) {
            var patch = {
                a: a
            };
            walk(a, b, patch, 0);
            return patch;
        }
        function walk(a, b, patch, index) {
            if (a === b) {
                return;
            }
            var apply = patch[index];
            var applyClear = false;
            if (isThunk(a) || isThunk(b)) {
                thunks(a, b, patch, index);
            } else if (b == null) {
                if (!isWidget(a)) {
                    clearState(a, patch, index);
                    apply = patch[index];
                }
                apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b));
            } else if (isVNode(b)) {
                if (isVNode(a)) {
                    if (a.tagName === b.tagName && a.namespace === b.namespace && a.key === b.key) {
                        var propsPatch = diffProps(a.properties, b.properties);
                        if (propsPatch) {
                            apply = appendPatch(apply, new VPatch(VPatch.PROPS, a, propsPatch));
                        }
                        apply = diffChildren(a, b, patch, apply, index);
                    } else {
                        apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b));
                        applyClear = true;
                    }
                } else {
                    apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b));
                    applyClear = true;
                }
            } else if (isVText(b)) {
                if (!isVText(a)) {
                    apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b));
                    applyClear = true;
                } else if (a.text !== b.text) {
                    apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b));
                }
            } else if (isWidget(b)) {
                if (!isWidget(a)) {
                    applyClear = true;
                }
                apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b));
            }
            if (apply) {
                patch[index] = apply;
            }
            if (applyClear) {
                clearState(a, patch, index);
            }
        }
        function diffChildren(a, b, patch, apply, index) {
            var aChildren = a.children;
            var orderedSet = reorder(aChildren, b.children);
            var bChildren = orderedSet.children;
            var aLen = aChildren.length;
            var bLen = bChildren.length;
            var len = aLen > bLen ? aLen : bLen;
            for (var i = 0; i < len; i++) {
                var leftNode = aChildren[i];
                var rightNode = bChildren[i];
                index += 1;
                if (!leftNode) {
                    if (rightNode) {
                        apply = appendPatch(apply, new VPatch(VPatch.INSERT, null, rightNode));
                    }
                } else {
                    walk(leftNode, rightNode, patch, index);
                }
                if (isVNode(leftNode) && leftNode.count) {
                    index += leftNode.count;
                }
            }
            if (orderedSet.moves) {
                apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, orderedSet.moves));
            }
            return apply;
        }
        function clearState(vNode, patch, index) {
            unhook(vNode, patch, index);
            destroyWidgets(vNode, patch, index);
        }
        function destroyWidgets(vNode, patch, index) {
            if (isWidget(vNode)) {
                if (typeof vNode.destroy === "function") {
                    patch[index] = appendPatch(patch[index], new VPatch(VPatch.REMOVE, vNode, null));
                }
            } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
                var children = vNode.children;
                var len = children.length;
                for (var i = 0; i < len; i++) {
                    var child = children[i];
                    index += 1;
                    destroyWidgets(child, patch, index);
                    if (isVNode(child) && child.count) {
                        index += child.count;
                    }
                }
            } else if (isThunk(vNode)) {
                thunks(vNode, null, patch, index);
            }
        }
        function thunks(a, b, patch, index) {
            var nodes = handleThunk(a, b);
            var thunkPatch = diff(nodes.a, nodes.b);
            if (hasPatches(thunkPatch)) {
                patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch);
            }
        }
        function hasPatches(patch) {
            for (var index in patch) {
                if (index !== "a") {
                    return true;
                }
            }
            return false;
        }
        function unhook(vNode, patch, index) {
            if (isVNode(vNode)) {
                if (vNode.hooks) {
                    patch[index] = appendPatch(patch[index], new VPatch(VPatch.PROPS, vNode, undefinedKeys(vNode.hooks)));
                }
                if (vNode.descendantHooks || vNode.hasThunks) {
                    var children = vNode.children;
                    var len = children.length;
                    for (var i = 0; i < len; i++) {
                        var child = children[i];
                        index += 1;
                        unhook(child, patch, index);
                        if (isVNode(child) && child.count) {
                            index += child.count;
                        }
                    }
                }
            } else if (isThunk(vNode)) {
                thunks(vNode, null, patch, index);
            }
        }
        function undefinedKeys(obj) {
            var result = {};
            for (var key in obj) {
                result[key] = undefined;
            }
            return result;
        }
        function reorder(aChildren, bChildren) {
            var bChildIndex = keyIndex(bChildren);
            var bKeys = bChildIndex.keys;
            var bFree = bChildIndex.free;
            if (bFree.length === bChildren.length) {
                return {
                    children: bChildren,
                    moves: null
                };
            }
            var aChildIndex = keyIndex(aChildren);
            var aKeys = aChildIndex.keys;
            var aFree = aChildIndex.free;
            if (aFree.length === aChildren.length) {
                return {
                    children: bChildren,
                    moves: null
                };
            }
            var newChildren = [];
            var freeIndex = 0;
            var freeCount = bFree.length;
            var deletedItems = 0;
            for (var i = 0; i < aChildren.length; i++) {
                var aItem = aChildren[i];
                var itemIndex;
                if (aItem.key) {
                    if (bKeys.hasOwnProperty(aItem.key)) {
                        itemIndex = bKeys[aItem.key];
                        newChildren.push(bChildren[itemIndex]);
                    } else {
                        itemIndex = i - deletedItems++;
                        newChildren.push(null);
                    }
                } else {
                    if (freeIndex < freeCount) {
                        itemIndex = bFree[freeIndex++];
                        newChildren.push(bChildren[itemIndex]);
                    } else {
                        itemIndex = i - deletedItems++;
                        newChildren.push(null);
                    }
                }
            }
            var lastFreeIndex = freeIndex >= bFree.length ? bChildren.length : bFree[freeIndex];
            for (var j = 0; j < bChildren.length; j++) {
                var newItem = bChildren[j];
                if (newItem.key) {
                    if (!aKeys.hasOwnProperty(newItem.key)) {
                        newChildren.push(newItem);
                    }
                } else if (j >= lastFreeIndex) {
                    newChildren.push(newItem);
                }
            }
            var simulate = newChildren.slice();
            var simulateIndex = 0;
            var removes = [];
            var inserts = [];
            var simulateItem;
            for (var k = 0; k < bChildren.length; ) {
                var wantedItem = bChildren[k];
                simulateItem = simulate[simulateIndex];
                while (simulateItem === null && simulate.length) {
                    removes.push(remove(simulate, simulateIndex, null));
                    simulateItem = simulate[simulateIndex];
                }
                if (!simulateItem || simulateItem.key !== wantedItem.key) {
                    if (wantedItem.key) {
                        if (simulateItem && simulateItem.key) {
                            if (bKeys[simulateItem.key] !== k + 1) {
                                removes.push(remove(simulate, simulateIndex, simulateItem.key));
                                simulateItem = simulate[simulateIndex];
                                if (!simulateItem || simulateItem.key !== wantedItem.key) {
                                    inserts.push({
                                        key: wantedItem.key,
                                        to: k
                                    });
                                } else {
                                    simulateIndex++;
                                }
                            } else {
                                inserts.push({
                                    key: wantedItem.key,
                                    to: k
                                });
                            }
                        } else {
                            inserts.push({
                                key: wantedItem.key,
                                to: k
                            });
                        }
                        k++;
                    } else if (simulateItem && simulateItem.key) {
                        removes.push(remove(simulate, simulateIndex, simulateItem.key));
                    }
                } else {
                    simulateIndex++;
                    k++;
                }
            }
            while (simulateIndex < simulate.length) {
                simulateItem = simulate[simulateIndex];
                removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key));
            }
            if (removes.length === deletedItems && !inserts.length) {
                return {
                    children: newChildren,
                    moves: null
                };
            }
            return {
                children: newChildren,
                moves: {
                    removes: removes,
                    inserts: inserts
                }
            };
        }
        function remove(arr, index, key) {
            arr.splice(index, 1);
            return {
                from: index,
                key: key
            };
        }
        function keyIndex(children) {
            var keys = {};
            var free = [];
            var length = children.length;
            for (var i = 0; i < length; i++) {
                var child = children[i];
                if (child.key) {
                    keys[child.key] = i;
                } else {
                    free.push(i);
                }
            }
            return {
                keys: keys,
                free: free
            };
        }
        function appendPatch(apply, patch) {
            if (apply) {
                if (isArray(apply)) {
                    apply.push(patch);
                } else {
                    apply = [ apply, patch ];
                }
                return apply;
            } else {
                return patch;
            }
        }
    }, {
        "../vnode/handle-thunk": 91,
        "../vnode/is-thunk": 92,
        "../vnode/is-vnode": 94,
        "../vnode/is-vtext": 95,
        "../vnode/is-widget": 96,
        "../vnode/vpatch": 99,
        "./diff-props": 101,
        "x-is-array": 79
    } ],
    103: [ function(require, module, exports) {
        var h = require("virtual-dom/h"), Events = require("eventemitter2").EventEmitter2, events = new Events({
            wildcard: true
        });
        function Content() {
            if (!(this instanceof Content)) {
                return new Content();
            }
            this.id = -1;
            this.title = "";
            this.icon = "";
            this.text = "";
            this.overview = "";
            this.policy = "";
            this.training = "";
            this.resources = "";
            this.tools = "";
            this.contributions = "";
            this.section = "";
            this.program = "";
            this.page = "";
            this.rabbitHole = "";
            this.type = "Overview";
            this.listItemType = "";
            this.timestamp = null;
        }
        Content.prototype.set = function(data) {
            var name;
            for (name in data) {
                if (this.hasOwnProperty(name)) {
                    this[name] = data[name];
                }
            }
            return this;
        };
        function Pages() {
            if (!(this instanceof Pages)) {
                return new Pages();
            }
            this.current = new Content();
        }
        Pages.prototype.init = function(data) {
            var urls = [], i = 0, count = data.d.results.length, result, parents = {}, subParents = {};
            this.sections = {};
            for (;i < count; ++i) {
                result = data.d.results[i];
                result.Section = result.Section ? result.Section.replace(/\s/g, "") : "";
                result.Program = result.Program ? result.Program.replace(/\s/g, "") : "";
                result.Page = result.Page ? result.Page.replace(/\s/g, "") : "";
                result.rabbitHole = result.rabbitHole ? result.rabbitHole.replace(/\s/g, "") : "";
                result.Path = "/" + (result.Section !== "" ? result.Section + (result.Program !== "" ? "/" + result.Program + (result.Page !== "" ? "/" + result.Page + (result.rabbitHole !== "" ? "/" + result.rabbitHole : "") : "") : "") : "");
                this[result.Path] = result;
                urls[i] = result.Path;
                if (result.Section !== "" && result.Program === "") {
                    this.sections[result.Section] = {
                        path: !result.Link ? "#/" + result.Section : result.Link,
                        title: result.Title,
                        id: result.ID,
                        links: []
                    };
                }
                if (result.rabbitHole !== "") {
                    subParents["/" + result.Section + "/" + result.Program + "/" + result.Page] = ".ph-sub-parent.ph-page.link";
                } else if (result.Page !== "") {
                    parents["/" + result.Section + "/" + result.Program] = ".ph-parent.ph-program.link";
                }
            }
            urls.sort();
            i = 0;
            for (;i < count; ++i) {
                var page = this[urls[i]];
                var isPage = false;
                var level;
                var name = page.rabbitHole || page.Page || page.Program;
                if (page.rabbitHole !== "") {
                    isPage = true;
                    level = ".ph-rabbit-hole.link";
                } else if (page.Page !== "") {
                    isPage = true;
                    level = subParents[page.Path] || ".ph-page.link";
                } else if (page.Program !== "") {
                    level = parents[page.Path] || ".ph-program.link";
                }
                if (page.Link) {}
                if (page.Program !== "") {
                    this.sections[page.Section].links.push({
                        path: page.Path,
                        href: !page.Link ? "#" + page.Path : page.Link,
                        title: page.Title,
                        level: level,
                        name: name,
                        id: page.ID,
                        icon: page.Icon || "",
                        attr: isPage ? {
                            style: {
                                display: "none"
                            }
                        } : {},
                        hr: isPage ? null : h("hr")
                    });
                }
            }
        };
        Pages.prototype.set = function(data) {
            var name;
            for (name in data) {
                if (this.hasOwnProperty(name)) {
                    this[name] = data[name];
                }
            }
            return this;
        };
        var pages = new Pages();
        module.exports = {
            events: events,
            pages: pages
        };
    }, {
        eventemitter2: 7,
        "virtual-dom/h": 72
    } ],
    104: [ function(require, module, exports) {
        var h = require("virtual-dom/h");
        function renderTab(title, icon, handleClick, initialTab) {
            return h("li" + initialTab, [ h("a.icon.icon-" + icon, {
                href: "#",
                onclick: function(e) {
                    e = e || window.event;
                    if (e.preventDefault) e.preventDefault(); else e.returnValue = false;
                    handleClick(title);
                    if (/ ?tab-current/gi.test(this.parentNode.className) === false) {
                        var tabCurrent = document.querySelector(".tab-current");
                        if (tabCurrent) {
                            tabCurrent.className = tabCurrent.className.replace(/ ?tab\-current/gi, "");
                        }
                        this.parentNode.className += " tab-current";
                    }
                    return false;
                }
            }, [ h("span", [ String(title) ]) ]) ]);
        }
        function renderTabs(tabs, style, launch) {
            var group = [];
            var i = 0;
            var count = tabs.length;
            var initial = ".tab-current";
            for (;i < count; ++i) {
                group.push(renderTab(tabs[i].title, tabs[i].icon, launch, initial));
                initial = "";
            }
            return count === 1 ? null : h("#ph-tabs.ph-tabs.ph-tabs-style-iconbox", [ h("nav", [ h("ul", style, group) ]) ]);
        }
        module.exports = renderTabs;
    }, {
        "virtual-dom/h": 72
    } ]
}, {}, [ 4 ]);
//# sourceMappingURL=main.min.js.map